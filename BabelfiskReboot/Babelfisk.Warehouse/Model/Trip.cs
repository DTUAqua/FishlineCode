//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Babelfisk.Warehouse.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Cruise))]
    [KnownType(typeof(Sample))]
    public partial class Trip: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int tripId
        {
            get { return _tripId; }
            set
            {
                if (_tripId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'tripId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _tripId = value;
                    OnPropertyChanged("tripId");
                }
            }
        }
        private int _tripId;
    
        [DataMember]
        public Nullable<int> cruiseId
        {
            get { return _cruiseId; }
            set
            {
                if (_cruiseId != value)
                {
                    ChangeTracker.RecordOriginalValue("cruiseId", _cruiseId);
                    if (!IsDeserializing)
                    {
                        if (Cruise1 != null && Cruise1.cruiseId != value)
                        {
                            Cruise1 = null;
                        }
                    }
                    _cruiseId = value;
                    OnPropertyChanged("cruiseId");
                }
            }
        }
        private Nullable<int> _cruiseId;
    
        [DataMember]
        public int year
        {
            get { return _year; }
            set
            {
                if (_year != value)
                {
                    _year = value;
                    OnPropertyChanged("year");
                }
            }
        }
        private int _year;
    
        [DataMember]
        public string cruise
        {
            get { return _cruise; }
            set
            {
                if (_cruise != value)
                {
                    _cruise = value;
                    OnPropertyChanged("cruise");
                }
            }
        }
        private string _cruise;
    
        [DataMember]
        public string trip1
        {
            get { return _trip1; }
            set
            {
                if (_trip1 != value)
                {
                    _trip1 = value;
                    OnPropertyChanged("trip1");
                }
            }
        }
        private string _trip1;
    
        [DataMember]
        public string tripType
        {
            get { return _tripType; }
            set
            {
                if (_tripType != value)
                {
                    _tripType = value;
                    OnPropertyChanged("tripType");
                }
            }
        }
        private string _tripType;
    
        [DataMember]
        public string logBldNr
        {
            get { return _logBldNr; }
            set
            {
                if (_logBldNr != value)
                {
                    _logBldNr = value;
                    OnPropertyChanged("logBldNr");
                }
            }
        }
        private string _logBldNr;
    
        [DataMember]
        public Nullable<int> timeZone
        {
            get { return _timeZone; }
            set
            {
                if (_timeZone != value)
                {
                    _timeZone = value;
                    OnPropertyChanged("timeZone");
                }
            }
        }
        private Nullable<int> _timeZone;
    
        [DataMember]
        public Nullable<System.DateTime> dateStart
        {
            get { return _dateStart; }
            set
            {
                if (_dateStart != value)
                {
                    _dateStart = value;
                    OnPropertyChanged("dateStart");
                }
            }
        }
        private Nullable<System.DateTime> _dateStart;
    
        [DataMember]
        public Nullable<System.DateTime> dateEnd
        {
            get { return _dateEnd; }
            set
            {
                if (_dateEnd != value)
                {
                    _dateEnd = value;
                    OnPropertyChanged("dateEnd");
                }
            }
        }
        private Nullable<System.DateTime> _dateEnd;
    
        [DataMember]
        public string samplingType
        {
            get { return _samplingType; }
            set
            {
                if (_samplingType != value)
                {
                    _samplingType = value;
                    OnPropertyChanged("samplingType");
                }
            }
        }
        private string _samplingType;
    
        [DataMember]
        public string samplingMethod
        {
            get { return _samplingMethod; }
            set
            {
                if (_samplingMethod != value)
                {
                    _samplingMethod = value;
                    OnPropertyChanged("samplingMethod");
                }
            }
        }
        private string _samplingMethod;
    
        [DataMember]
        public string fisheryType
        {
            get { return _fisheryType; }
            set
            {
                if (_fisheryType != value)
                {
                    _fisheryType = value;
                    OnPropertyChanged("fisheryType");
                }
            }
        }
        private string _fisheryType;
    
        [DataMember]
        public string platform1
        {
            get { return _platform1; }
            set
            {
                if (_platform1 != value)
                {
                    _platform1 = value;
                    OnPropertyChanged("platform1");
                }
            }
        }
        private string _platform1;
    
        [DataMember]
        public string nationalityPlatform1
        {
            get { return _nationalityPlatform1; }
            set
            {
                if (_nationalityPlatform1 != value)
                {
                    _nationalityPlatform1 = value;
                    OnPropertyChanged("nationalityPlatform1");
                }
            }
        }
        private string _nationalityPlatform1;
    
        [DataMember]
        public Nullable<bool> fDFVesselPlatform1
        {
            get { return _fDFVesselPlatform1; }
            set
            {
                if (_fDFVesselPlatform1 != value)
                {
                    _fDFVesselPlatform1 = value;
                    OnPropertyChanged("fDFVesselPlatform1");
                }
            }
        }
        private Nullable<bool> _fDFVesselPlatform1;
    
        [DataMember]
        public string nationalityPlatform2
        {
            get { return _nationalityPlatform2; }
            set
            {
                if (_nationalityPlatform2 != value)
                {
                    _nationalityPlatform2 = value;
                    OnPropertyChanged("nationalityPlatform2");
                }
            }
        }
        private string _nationalityPlatform2;
    
        [DataMember]
        public string platform2
        {
            get { return _platform2; }
            set
            {
                if (_platform2 != value)
                {
                    _platform2 = value;
                    OnPropertyChanged("platform2");
                }
            }
        }
        private string _platform2;
    
        [DataMember]
        public Nullable<System.DateTime> dateSample
        {
            get { return _dateSample; }
            set
            {
                if (_dateSample != value)
                {
                    _dateSample = value;
                    OnPropertyChanged("dateSample");
                }
            }
        }
        private Nullable<System.DateTime> _dateSample;
    
        [DataMember]
        public string harbourSample
        {
            get { return _harbourSample; }
            set
            {
                if (_harbourSample != value)
                {
                    _harbourSample = value;
                    OnPropertyChanged("harbourSample");
                }
            }
        }
        private string _harbourSample;
    
        [DataMember]
        public string nationalityHarbourSample
        {
            get { return _nationalityHarbourSample; }
            set
            {
                if (_nationalityHarbourSample != value)
                {
                    _nationalityHarbourSample = value;
                    OnPropertyChanged("nationalityHarbourSample");
                }
            }
        }
        private string _nationalityHarbourSample;
    
        [DataMember]
        public string harbourLanding
        {
            get { return _harbourLanding; }
            set
            {
                if (_harbourLanding != value)
                {
                    _harbourLanding = value;
                    OnPropertyChanged("harbourLanding");
                }
            }
        }
        private string _harbourLanding;
    
        [DataMember]
        public string nationalityHarbourLanding
        {
            get { return _nationalityHarbourLanding; }
            set
            {
                if (_nationalityHarbourLanding != value)
                {
                    _nationalityHarbourLanding = value;
                    OnPropertyChanged("nationalityHarbourLanding");
                }
            }
        }
        private string _nationalityHarbourLanding;
    
        [DataMember]
        public Nullable<int> contactPersonId
        {
            get { return _contactPersonId; }
            set
            {
                if (_contactPersonId != value)
                {
                    _contactPersonId = value;
                    OnPropertyChanged("contactPersonId");
                }
            }
        }
        private Nullable<int> _contactPersonId;
    
        [DataMember]
        public string contactPersonName
        {
            get { return _contactPersonName; }
            set
            {
                if (_contactPersonName != value)
                {
                    _contactPersonName = value;
                    OnPropertyChanged("contactPersonName");
                }
            }
        }
        private string _contactPersonName;
    
        [DataMember]
        public Nullable<int> tripLeaderId
        {
            get { return _tripLeaderId; }
            set
            {
                if (_tripLeaderId != value)
                {
                    _tripLeaderId = value;
                    OnPropertyChanged("tripLeaderId");
                }
            }
        }
        private Nullable<int> _tripLeaderId;
    
        [DataMember]
        public string tripLeaderName
        {
            get { return _tripLeaderName; }
            set
            {
                if (_tripLeaderName != value)
                {
                    _tripLeaderName = value;
                    OnPropertyChanged("tripLeaderName");
                }
            }
        }
        private string _tripLeaderName;
    
        [DataMember]
        public Nullable<int> dataHandlerId
        {
            get { return _dataHandlerId; }
            set
            {
                if (_dataHandlerId != value)
                {
                    _dataHandlerId = value;
                    OnPropertyChanged("dataHandlerId");
                }
            }
        }
        private Nullable<int> _dataHandlerId;
    
        [DataMember]
        public string dataHandlerName
        {
            get { return _dataHandlerName; }
            set
            {
                if (_dataHandlerName != value)
                {
                    _dataHandlerName = value;
                    OnPropertyChanged("dataHandlerName");
                }
            }
        }
        private string _dataHandlerName;
    
        [DataMember]
        public string remark
        {
            get { return _remark; }
            set
            {
                if (_remark != value)
                {
                    _remark = value;
                    OnPropertyChanged("remark");
                }
            }
        }
        private string _remark;
    
        [DataMember]
        public string sgTripId
        {
            get { return _sgTripId; }
            set
            {
                if (_sgTripId != value)
                {
                    _sgTripId = value;
                    OnPropertyChanged("sgTripId");
                }
            }
        }
        private string _sgTripId;
    
        [DataMember]
        public string tripNum
        {
            get { return _tripNum; }
            set
            {
                if (_tripNum != value)
                {
                    _tripNum = value;
                    OnPropertyChanged("tripNum");
                }
            }
        }
        private string _tripNum;
    
        [DataMember]
        public string placeName
        {
            get { return _placeName; }
            set
            {
                if (_placeName != value)
                {
                    _placeName = value;
                    OnPropertyChanged("placeName");
                }
            }
        }
        private string _placeName;
    
        [DataMember]
        public string placeCode
        {
            get { return _placeCode; }
            set
            {
                if (_placeCode != value)
                {
                    _placeCode = value;
                    OnPropertyChanged("placeCode");
                }
            }
        }
        private string _placeCode;
    
        [DataMember]
        public Nullable<int> postalCode
        {
            get { return _postalCode; }
            set
            {
                if (_postalCode != value)
                {
                    _postalCode = value;
                    OnPropertyChanged("postalCode");
                }
            }
        }
        private Nullable<int> _postalCode;
    
        [DataMember]
        public Nullable<int> numberInPlace
        {
            get { return _numberInPlace; }
            set
            {
                if (_numberInPlace != value)
                {
                    _numberInPlace = value;
                    OnPropertyChanged("numberInPlace");
                }
            }
        }
        private Nullable<int> _numberInPlace;
    
        [DataMember]
        public Nullable<int> respYes
        {
            get { return _respYes; }
            set
            {
                if (_respYes != value)
                {
                    _respYes = value;
                    OnPropertyChanged("respYes");
                }
            }
        }
        private Nullable<int> _respYes;
    
        [DataMember]
        public Nullable<int> respNo
        {
            get { return _respNo; }
            set
            {
                if (_respNo != value)
                {
                    _respNo = value;
                    OnPropertyChanged("respNo");
                }
            }
        }
        private Nullable<int> _respNo;
    
        [DataMember]
        public Nullable<int> respTot
        {
            get { return _respTot; }
            set
            {
                if (_respTot != value)
                {
                    _respTot = value;
                    OnPropertyChanged("respTot");
                }
            }
        }
        private Nullable<int> _respTot;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public Cruise Cruise1
        {
            get { return _cruise1; }
            set
            {
                if (!ReferenceEquals(_cruise1, value))
                {
                    var previousValue = _cruise1;
                    _cruise1 = value;
                    FixupCruise1(previousValue);
                    OnNavigationPropertyChanged("Cruise1");
                }
            }
        }
        private Cruise _cruise1;
    
        [DataMember]
        public TrackableCollection<Sample> Samples
        {
            get
            {
                if (_samples == null)
                {
                    _samples = new TrackableCollection<Sample>();
                    _samples.CollectionChanged += FixupSamples;
                }
                return _samples;
            }
            set
            {
                if (!ReferenceEquals(_samples, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_samples != null)
                    {
                        _samples.CollectionChanged -= FixupSamples;
                    }
                    _samples = value;
                    if (_samples != null)
                    {
                        _samples.CollectionChanged += FixupSamples;
                    }
                    OnNavigationPropertyChanged("Samples");
                }
            }
        }
        private TrackableCollection<Sample> _samples;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Cruise1 = null;
            Samples.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupCruise1(Cruise previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.Trips.Contains(this))
            {
                previousValue.Trips.Remove(this);
            }
    
            if (Cruise1 != null)
            {
                if (!Cruise1.Trips.Contains(this))
                {
                    Cruise1.Trips.Add(this);
                }
    
                cruiseId = Cruise1.cruiseId;
            }
            else if (!skipKeys)
            {
                cruiseId = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("Cruise1")
                    && (ChangeTracker.OriginalValues["Cruise1"] == Cruise1))
                {
                    ChangeTracker.OriginalValues.Remove("Cruise1");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("Cruise1", previousValue);
                }
                if (Cruise1 != null && !Cruise1.ChangeTracker.ChangeTrackingEnabled)
                {
                    Cruise1.StartTracking();
                }
            }
        }
    
        private void FixupSamples(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Sample item in e.NewItems)
                {
                    item.Trip1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Samples", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Sample item in e.OldItems)
                {
                    if (ReferenceEquals(item.Trip1, this))
                    {
                        item.Trip1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Samples", item);
                    }
                }
            }
        }

        #endregion

    }
}
