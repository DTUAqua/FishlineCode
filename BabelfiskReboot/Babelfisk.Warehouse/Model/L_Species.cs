//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Babelfisk.Warehouse.Model
{
    [DataContract(IsReference = true)]
    public partial class L_Species: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int L_speciesId
        {
            get { return _l_speciesId; }
            set
            {
                if (_l_speciesId != value)
                {
                    _l_speciesId = value;
                    OnPropertyChanged("L_speciesId");
                }
            }
        }
        private int _l_speciesId;
    
        [DataMember]
        public string speciesCode
        {
            get { return _speciesCode; }
            set
            {
                if (_speciesCode != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'speciesCode' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _speciesCode = value;
                    OnPropertyChanged("speciesCode");
                }
            }
        }
        private string _speciesCode;
    
        [DataMember]
        public string dkName
        {
            get { return _dkName; }
            set
            {
                if (_dkName != value)
                {
                    _dkName = value;
                    OnPropertyChanged("dkName");
                }
            }
        }
        private string _dkName;
    
        [DataMember]
        public string ukName
        {
            get { return _ukName; }
            set
            {
                if (_ukName != value)
                {
                    _ukName = value;
                    OnPropertyChanged("ukName");
                }
            }
        }
        private string _ukName;
    
        [DataMember]
        public string nodc
        {
            get { return _nodc; }
            set
            {
                if (_nodc != value)
                {
                    _nodc = value;
                    OnPropertyChanged("nodc");
                }
            }
        }
        private string _nodc;
    
        [DataMember]
        public string latin
        {
            get { return _latin; }
            set
            {
                if (_latin != value)
                {
                    _latin = value;
                    OnPropertyChanged("latin");
                }
            }
        }
        private string _latin;
    
        [DataMember]
        public string icesCode
        {
            get { return _icesCode; }
            set
            {
                if (_icesCode != value)
                {
                    _icesCode = value;
                    OnPropertyChanged("icesCode");
                }
            }
        }
        private string _icesCode;
    
        [DataMember]
        public string treatmentFactorGroup
        {
            get { return _treatmentFactorGroup; }
            set
            {
                if (_treatmentFactorGroup != value)
                {
                    _treatmentFactorGroup = value;
                    OnPropertyChanged("treatmentFactorGroup");
                }
            }
        }
        private string _treatmentFactorGroup;
    
        [DataMember]
        public string dfuFisk_Code
        {
            get { return _dfuFisk_Code; }
            set
            {
                if (_dfuFisk_Code != value)
                {
                    _dfuFisk_Code = value;
                    OnPropertyChanged("dfuFisk_Code");
                }
            }
        }
        private string _dfuFisk_Code;
    
        [DataMember]
        public string tsn
        {
            get { return _tsn; }
            set
            {
                if (_tsn != value)
                {
                    _tsn = value;
                    OnPropertyChanged("tsn");
                }
            }
        }
        private string _tsn;
    
        [DataMember]
        public Nullable<int> aphiaID
        {
            get { return _aphiaID; }
            set
            {
                if (_aphiaID != value)
                {
                    _aphiaID = value;
                    OnPropertyChanged("aphiaID");
                }
            }
        }
        private Nullable<int> _aphiaID;
    
        [DataMember]
        public Nullable<int> lengthMin
        {
            get { return _lengthMin; }
            set
            {
                if (_lengthMin != value)
                {
                    _lengthMin = value;
                    OnPropertyChanged("lengthMin");
                }
            }
        }
        private Nullable<int> _lengthMin;
    
        [DataMember]
        public Nullable<int> lengthMax
        {
            get { return _lengthMax; }
            set
            {
                if (_lengthMax != value)
                {
                    _lengthMax = value;
                    OnPropertyChanged("lengthMax");
                }
            }
        }
        private Nullable<int> _lengthMax;
    
        [DataMember]
        public Nullable<int> ageMin
        {
            get { return _ageMin; }
            set
            {
                if (_ageMin != value)
                {
                    _ageMin = value;
                    OnPropertyChanged("ageMin");
                }
            }
        }
        private Nullable<int> _ageMin;
    
        [DataMember]
        public Nullable<int> ageMax
        {
            get { return _ageMax; }
            set
            {
                if (_ageMax != value)
                {
                    _ageMax = value;
                    OnPropertyChanged("ageMax");
                }
            }
        }
        private Nullable<int> _ageMax;
    
        [DataMember]
        public Nullable<int> weightMin
        {
            get { return _weightMin; }
            set
            {
                if (_weightMin != value)
                {
                    _weightMin = value;
                    OnPropertyChanged("weightMin");
                }
            }
        }
        private Nullable<int> _weightMin;
    
        [DataMember]
        public Nullable<int> weightMax
        {
            get { return _weightMax; }
            set
            {
                if (_weightMax != value)
                {
                    _weightMax = value;
                    OnPropertyChanged("weightMax");
                }
            }
        }
        private Nullable<int> _weightMax;
    
        [DataMember]
        public string speciesNES
        {
            get { return _speciesNES; }
            set
            {
                if (_speciesNES != value)
                {
                    _speciesNES = value;
                    OnPropertyChanged("speciesNES");
                }
            }
        }
        private string _speciesNES;
    
        [DataMember]
        public string speciesFAO
        {
            get { return _speciesFAO; }
            set
            {
                if (_speciesFAO != value)
                {
                    _speciesFAO = value;
                    OnPropertyChanged("speciesFAO");
                }
            }
        }
        private string _speciesFAO;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion

    }
}
