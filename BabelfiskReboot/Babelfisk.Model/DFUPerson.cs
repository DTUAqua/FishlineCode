//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Babelfisk.Entities.Sprattus
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(Cruise))]
    [KnownType(typeof(L_DFUDepartment))]
    [KnownType(typeof(Est_Strata))]
    [KnownType(typeof(Sample))]
    [KnownType(typeof(SpeciesList))]
    [KnownType(typeof(Trip))]
    [KnownType(typeof(R_SDReader))]
    [KnownType(typeof(Age))]
    [KnownType(typeof(SDAnnotation))]
    [KnownType(typeof(SDEvent))]
    [KnownType(typeof(SDLine))]
    [KnownType(typeof(SDPoint))]
    [KnownType(typeof(SDSample))]
    public partial class DFUPerson: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int dfuPersonId
        {
            get { return _dfuPersonId; }
            set
            {
                if (_dfuPersonId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'dfuPersonId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _dfuPersonId = value;
                    OnPropertyChanged("dfuPersonId");
                }
            }
        }
        private int _dfuPersonId;
    
        [DataMember]
        public string initials
        {
            get { return _initials; }
            set
            {
                if (_initials != value)
                {
                    _initials = value;
                    OnPropertyChanged("initials");
                }
            }
        }
        private string _initials;
    
        [DataMember]
        public string dfuDepartment
        {
            get { return _dfuDepartment; }
            set
            {
                if (_dfuDepartment != value)
                {
                    ChangeTracker.RecordOriginalValue("dfuDepartment", _dfuDepartment);
                    if (!IsDeserializing)
                    {
                        if (L_DFUDepartment != null && L_DFUDepartment.dfuDepartment != value)
                        {
                            L_DFUDepartment = null;
                        }
                    }
                    _dfuDepartment = value;
                    OnPropertyChanged("dfuDepartment");
                }
            }
        }
        private string _dfuDepartment;
    
        [DataMember]
        public string name
        {
            get { return _name; }
            set
            {
                if (_name != value)
                {
                    _name = value;
                    OnPropertyChanged("name");
                }
            }
        }
        private string _name;

        #endregion

        #region Navigation Properties
    
        [DataMember]
        public TrackableCollection<Cruise> Cruise
        {
            get
            {
                if (_cruise == null)
                {
                    _cruise = new TrackableCollection<Cruise>();
                    _cruise.CollectionChanged += FixupCruise;
                }
                return _cruise;
            }
            set
            {
                if (!ReferenceEquals(_cruise, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cruise != null)
                    {
                        _cruise.CollectionChanged -= FixupCruise;
                    }
                    _cruise = value;
                    if (_cruise != null)
                    {
                        _cruise.CollectionChanged += FixupCruise;
                    }
                    OnNavigationPropertyChanged("Cruise");
                }
            }
        }
        private TrackableCollection<Cruise> _cruise;
    
        [DataMember]
        public TrackableCollection<Cruise> Cruise1
        {
            get
            {
                if (_cruise1 == null)
                {
                    _cruise1 = new TrackableCollection<Cruise>();
                    _cruise1.CollectionChanged += FixupCruise1;
                }
                return _cruise1;
            }
            set
            {
                if (!ReferenceEquals(_cruise1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_cruise1 != null)
                    {
                        _cruise1.CollectionChanged -= FixupCruise1;
                    }
                    _cruise1 = value;
                    if (_cruise1 != null)
                    {
                        _cruise1.CollectionChanged += FixupCruise1;
                    }
                    OnNavigationPropertyChanged("Cruise1");
                }
            }
        }
        private TrackableCollection<Cruise> _cruise1;
    
        [DataMember]
        public L_DFUDepartment L_DFUDepartment
        {
            get { return _l_DFUDepartment; }
            set
            {
                if (!ReferenceEquals(_l_DFUDepartment, value))
                {
                    var previousValue = _l_DFUDepartment;
                    _l_DFUDepartment = value;
                    FixupL_DFUDepartment(previousValue);
                    OnNavigationPropertyChanged("L_DFUDepartment");
                }
            }
        }
        private L_DFUDepartment _l_DFUDepartment;
    
        [DataMember]
        public TrackableCollection<Est_Strata> Est_Strata
        {
            get
            {
                if (_est_Strata == null)
                {
                    _est_Strata = new TrackableCollection<Est_Strata>();
                    _est_Strata.CollectionChanged += FixupEst_Strata;
                }
                return _est_Strata;
            }
            set
            {
                if (!ReferenceEquals(_est_Strata, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_est_Strata != null)
                    {
                        _est_Strata.CollectionChanged -= FixupEst_Strata;
                    }
                    _est_Strata = value;
                    if (_est_Strata != null)
                    {
                        _est_Strata.CollectionChanged += FixupEst_Strata;
                    }
                    OnNavigationPropertyChanged("Est_Strata");
                }
            }
        }
        private TrackableCollection<Est_Strata> _est_Strata;
    
        [DataMember]
        public TrackableCollection<Sample> Sample
        {
            get
            {
                if (_sample == null)
                {
                    _sample = new TrackableCollection<Sample>();
                    _sample.CollectionChanged += FixupSample;
                }
                return _sample;
            }
            set
            {
                if (!ReferenceEquals(_sample, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sample != null)
                    {
                        _sample.CollectionChanged -= FixupSample;
                    }
                    _sample = value;
                    if (_sample != null)
                    {
                        _sample.CollectionChanged += FixupSample;
                    }
                    OnNavigationPropertyChanged("Sample");
                }
            }
        }
        private TrackableCollection<Sample> _sample;
    
        [DataMember]
        public TrackableCollection<Sample> Sample1
        {
            get
            {
                if (_sample1 == null)
                {
                    _sample1 = new TrackableCollection<Sample>();
                    _sample1.CollectionChanged += FixupSample1;
                }
                return _sample1;
            }
            set
            {
                if (!ReferenceEquals(_sample1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sample1 != null)
                    {
                        _sample1.CollectionChanged -= FixupSample1;
                    }
                    _sample1 = value;
                    if (_sample1 != null)
                    {
                        _sample1.CollectionChanged += FixupSample1;
                    }
                    OnNavigationPropertyChanged("Sample1");
                }
            }
        }
        private TrackableCollection<Sample> _sample1;
    
        [DataMember]
        public TrackableCollection<SpeciesList> SpeciesList
        {
            get
            {
                if (_speciesList == null)
                {
                    _speciesList = new TrackableCollection<SpeciesList>();
                    _speciesList.CollectionChanged += FixupSpeciesList;
                }
                return _speciesList;
            }
            set
            {
                if (!ReferenceEquals(_speciesList, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_speciesList != null)
                    {
                        _speciesList.CollectionChanged -= FixupSpeciesList;
                    }
                    _speciesList = value;
                    if (_speciesList != null)
                    {
                        _speciesList.CollectionChanged += FixupSpeciesList;
                    }
                    OnNavigationPropertyChanged("SpeciesList");
                }
            }
        }
        private TrackableCollection<SpeciesList> _speciesList;
    
        [DataMember]
        public TrackableCollection<SpeciesList> SpeciesList1
        {
            get
            {
                if (_speciesList1 == null)
                {
                    _speciesList1 = new TrackableCollection<SpeciesList>();
                    _speciesList1.CollectionChanged += FixupSpeciesList1;
                }
                return _speciesList1;
            }
            set
            {
                if (!ReferenceEquals(_speciesList1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_speciesList1 != null)
                    {
                        _speciesList1.CollectionChanged -= FixupSpeciesList1;
                    }
                    _speciesList1 = value;
                    if (_speciesList1 != null)
                    {
                        _speciesList1.CollectionChanged += FixupSpeciesList1;
                    }
                    OnNavigationPropertyChanged("SpeciesList1");
                }
            }
        }
        private TrackableCollection<SpeciesList> _speciesList1;
    
        [DataMember]
        public TrackableCollection<Trip> Trip
        {
            get
            {
                if (_trip == null)
                {
                    _trip = new TrackableCollection<Trip>();
                    _trip.CollectionChanged += FixupTrip;
                }
                return _trip;
            }
            set
            {
                if (!ReferenceEquals(_trip, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_trip != null)
                    {
                        _trip.CollectionChanged -= FixupTrip;
                    }
                    _trip = value;
                    if (_trip != null)
                    {
                        _trip.CollectionChanged += FixupTrip;
                    }
                    OnNavigationPropertyChanged("Trip");
                }
            }
        }
        private TrackableCollection<Trip> _trip;
    
        [DataMember]
        public TrackableCollection<Trip> Trip1
        {
            get
            {
                if (_trip1 == null)
                {
                    _trip1 = new TrackableCollection<Trip>();
                    _trip1.CollectionChanged += FixupTrip1;
                }
                return _trip1;
            }
            set
            {
                if (!ReferenceEquals(_trip1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_trip1 != null)
                    {
                        _trip1.CollectionChanged -= FixupTrip1;
                    }
                    _trip1 = value;
                    if (_trip1 != null)
                    {
                        _trip1.CollectionChanged += FixupTrip1;
                    }
                    OnNavigationPropertyChanged("Trip1");
                }
            }
        }
        private TrackableCollection<Trip> _trip1;
    
        [DataMember]
        public TrackableCollection<SpeciesList> SpeciesList_1
        {
            get
            {
                if (_speciesList_1 == null)
                {
                    _speciesList_1 = new TrackableCollection<SpeciesList>();
                    _speciesList_1.CollectionChanged += FixupSpeciesList_1;
                }
                return _speciesList_1;
            }
            set
            {
                if (!ReferenceEquals(_speciesList_1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_speciesList_1 != null)
                    {
                        _speciesList_1.CollectionChanged -= FixupSpeciesList_1;
                    }
                    _speciesList_1 = value;
                    if (_speciesList_1 != null)
                    {
                        _speciesList_1.CollectionChanged += FixupSpeciesList_1;
                    }
                    OnNavigationPropertyChanged("SpeciesList_1");
                }
            }
        }
        private TrackableCollection<SpeciesList> _speciesList_1;
    
        [DataMember]
        public TrackableCollection<SpeciesList> SpeciesList1_1
        {
            get
            {
                if (_speciesList1_1 == null)
                {
                    _speciesList1_1 = new TrackableCollection<SpeciesList>();
                    _speciesList1_1.CollectionChanged += FixupSpeciesList1_1;
                }
                return _speciesList1_1;
            }
            set
            {
                if (!ReferenceEquals(_speciesList1_1, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_speciesList1_1 != null)
                    {
                        _speciesList1_1.CollectionChanged -= FixupSpeciesList1_1;
                    }
                    _speciesList1_1 = value;
                    if (_speciesList1_1 != null)
                    {
                        _speciesList1_1.CollectionChanged += FixupSpeciesList1_1;
                    }
                    OnNavigationPropertyChanged("SpeciesList1_1");
                }
            }
        }
        private TrackableCollection<SpeciesList> _speciesList1_1;
    
        [DataMember]
        public TrackableCollection<R_SDReader> R_SDReader
        {
            get
            {
                if (_r_SDReader == null)
                {
                    _r_SDReader = new TrackableCollection<R_SDReader>();
                    _r_SDReader.CollectionChanged += FixupR_SDReader;
                }
                return _r_SDReader;
            }
            set
            {
                if (!ReferenceEquals(_r_SDReader, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_r_SDReader != null)
                    {
                        _r_SDReader.CollectionChanged -= FixupR_SDReader;
                    }
                    _r_SDReader = value;
                    if (_r_SDReader != null)
                    {
                        _r_SDReader.CollectionChanged += FixupR_SDReader;
                    }
                    OnNavigationPropertyChanged("R_SDReader");
                }
            }
        }
        private TrackableCollection<R_SDReader> _r_SDReader;
    
        [DataMember]
        public TrackableCollection<Age> Age
        {
            get
            {
                if (_age == null)
                {
                    _age = new TrackableCollection<Age>();
                    _age.CollectionChanged += FixupAge;
                }
                return _age;
            }
            set
            {
                if (!ReferenceEquals(_age, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_age != null)
                    {
                        _age.CollectionChanged -= FixupAge;
                    }
                    _age = value;
                    if (_age != null)
                    {
                        _age.CollectionChanged += FixupAge;
                    }
                    OnNavigationPropertyChanged("Age");
                }
            }
        }
        private TrackableCollection<Age> _age;
    
        [DataMember]
        public TrackableCollection<SDAnnotation> SDAnnotation
        {
            get
            {
                if (_sDAnnotation == null)
                {
                    _sDAnnotation = new TrackableCollection<SDAnnotation>();
                    _sDAnnotation.CollectionChanged += FixupSDAnnotation;
                }
                return _sDAnnotation;
            }
            set
            {
                if (!ReferenceEquals(_sDAnnotation, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sDAnnotation != null)
                    {
                        _sDAnnotation.CollectionChanged -= FixupSDAnnotation;
                    }
                    _sDAnnotation = value;
                    if (_sDAnnotation != null)
                    {
                        _sDAnnotation.CollectionChanged += FixupSDAnnotation;
                    }
                    OnNavigationPropertyChanged("SDAnnotation");
                }
            }
        }
        private TrackableCollection<SDAnnotation> _sDAnnotation;
    
        [DataMember]
        public TrackableCollection<SDEvent> SDEvent
        {
            get
            {
                if (_sDEvent == null)
                {
                    _sDEvent = new TrackableCollection<SDEvent>();
                    _sDEvent.CollectionChanged += FixupSDEvent;
                }
                return _sDEvent;
            }
            set
            {
                if (!ReferenceEquals(_sDEvent, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sDEvent != null)
                    {
                        _sDEvent.CollectionChanged -= FixupSDEvent;
                    }
                    _sDEvent = value;
                    if (_sDEvent != null)
                    {
                        _sDEvent.CollectionChanged += FixupSDEvent;
                    }
                    OnNavigationPropertyChanged("SDEvent");
                }
            }
        }
        private TrackableCollection<SDEvent> _sDEvent;
    
        [DataMember]
        public TrackableCollection<SDLine> SDLine
        {
            get
            {
                if (_sDLine == null)
                {
                    _sDLine = new TrackableCollection<SDLine>();
                    _sDLine.CollectionChanged += FixupSDLine;
                }
                return _sDLine;
            }
            set
            {
                if (!ReferenceEquals(_sDLine, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sDLine != null)
                    {
                        _sDLine.CollectionChanged -= FixupSDLine;
                    }
                    _sDLine = value;
                    if (_sDLine != null)
                    {
                        _sDLine.CollectionChanged += FixupSDLine;
                    }
                    OnNavigationPropertyChanged("SDLine");
                }
            }
        }
        private TrackableCollection<SDLine> _sDLine;
    
        [DataMember]
        public TrackableCollection<SDPoint> SDPoint
        {
            get
            {
                if (_sDPoint == null)
                {
                    _sDPoint = new TrackableCollection<SDPoint>();
                    _sDPoint.CollectionChanged += FixupSDPoint;
                }
                return _sDPoint;
            }
            set
            {
                if (!ReferenceEquals(_sDPoint, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sDPoint != null)
                    {
                        _sDPoint.CollectionChanged -= FixupSDPoint;
                    }
                    _sDPoint = value;
                    if (_sDPoint != null)
                    {
                        _sDPoint.CollectionChanged += FixupSDPoint;
                    }
                    OnNavigationPropertyChanged("SDPoint");
                }
            }
        }
        private TrackableCollection<SDPoint> _sDPoint;
    
        [DataMember]
        public TrackableCollection<SDSample> SDSample
        {
            get
            {
                if (_sDSample == null)
                {
                    _sDSample = new TrackableCollection<SDSample>();
                    _sDSample.CollectionChanged += FixupSDSample;
                }
                return _sDSample;
            }
            set
            {
                if (!ReferenceEquals(_sDSample, value))
                {
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        throw new InvalidOperationException("Cannot set the FixupChangeTrackingCollection when ChangeTracking is enabled");
                    }
                    if (_sDSample != null)
                    {
                        _sDSample.CollectionChanged -= FixupSDSample;
                    }
                    _sDSample = value;
                    if (_sDSample != null)
                    {
                        _sDSample.CollectionChanged += FixupSDSample;
                    }
                    OnNavigationPropertyChanged("SDSample");
                }
            }
        }
        private TrackableCollection<SDSample> _sDSample;

        #endregion

        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        // This entity type is the dependent end in at least one association that performs cascade deletes.
        // This event handler will process notifications that occur when the principal end is deleted.
        internal void HandleCascadeDelete(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                this.MarkAsDeleted();
            }
        }
    
        protected virtual void ClearNavigationProperties()
        {
            Cruise.Clear();
            Cruise1.Clear();
            L_DFUDepartment = null;
            Est_Strata.Clear();
            Sample.Clear();
            Sample1.Clear();
            SpeciesList.Clear();
            SpeciesList1.Clear();
            Trip.Clear();
            Trip1.Clear();
            SpeciesList_1.Clear();
            SpeciesList1_1.Clear();
            R_SDReader.Clear();
            Age.Clear();
            SDAnnotation.Clear();
            SDEvent.Clear();
            SDLine.Clear();
            SDPoint.Clear();
            SDSample.Clear();
        }

        #endregion

        #region Association Fixup
    
        private void FixupL_DFUDepartment(L_DFUDepartment previousValue, bool skipKeys = false)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (previousValue != null && previousValue.DFUPerson.Contains(this))
            {
                previousValue.DFUPerson.Remove(this);
            }
    
            if (L_DFUDepartment != null)
            {
                if (!L_DFUDepartment.DFUPerson.Contains(this))
                {
                    L_DFUDepartment.DFUPerson.Add(this);
                }
    
                dfuDepartment = L_DFUDepartment.dfuDepartment;
            }
            else if (!skipKeys)
            {
                dfuDepartment = null;
            }
    
            if (ChangeTracker.ChangeTrackingEnabled)
            {
                if (ChangeTracker.OriginalValues.ContainsKey("L_DFUDepartment")
                    && (ChangeTracker.OriginalValues["L_DFUDepartment"] == L_DFUDepartment))
                {
                    ChangeTracker.OriginalValues.Remove("L_DFUDepartment");
                }
                else
                {
                    ChangeTracker.RecordOriginalValue("L_DFUDepartment", previousValue);
                }
                if (L_DFUDepartment != null && !L_DFUDepartment.ChangeTracker.ChangeTrackingEnabled)
                {
                    L_DFUDepartment.StartTracking();
                }
            }
        }
    
        private void FixupCruise(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Cruise item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Cruise", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Cruise item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Cruise", item);
                    }
                }
            }
        }
    
        private void FixupCruise1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Cruise item in e.NewItems)
                {
                    item.DFUPerson1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Cruise1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Cruise item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson1, this))
                    {
                        item.DFUPerson1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Cruise1", item);
                    }
                }
            }
        }
    
        private void FixupEst_Strata(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Est_Strata item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Est_Strata", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Est_Strata item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Est_Strata", item);
                    }
                }
            }
        }
    
        private void FixupSample(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Sample item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Sample", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Sample item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Sample", item);
                    }
                }
            }
        }
    
        private void FixupSample1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Sample item in e.NewItems)
                {
                    item.DFUPerson1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Sample1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Sample item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson1, this))
                    {
                        item.DFUPerson1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Sample1", item);
                    }
                }
            }
        }
    
        private void FixupSpeciesList(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SpeciesList item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SpeciesList", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SpeciesList item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SpeciesList", item);
                    }
                }
            }
        }
    
        private void FixupSpeciesList1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SpeciesList item in e.NewItems)
                {
                    item.DFUPerson1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SpeciesList1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SpeciesList item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson1, this))
                    {
                        item.DFUPerson1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SpeciesList1", item);
                    }
                }
            }
        }
    
        private void FixupTrip(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Trip item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Trip", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Trip item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Trip", item);
                    }
                }
            }
        }
    
        private void FixupTrip1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Trip item in e.NewItems)
                {
                    item.DFUPerson1 = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Trip1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Trip item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson1, this))
                    {
                        item.DFUPerson1 = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Trip1", item);
                    }
                }
            }
        }
    
        private void FixupSpeciesList_1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SpeciesList item in e.NewItems)
                {
                    item.MaturityReader = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SpeciesList_1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SpeciesList item in e.OldItems)
                {
                    if (ReferenceEquals(item.MaturityReader, this))
                    {
                        item.MaturityReader = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SpeciesList_1", item);
                    }
                }
            }
        }
    
        private void FixupSpeciesList1_1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SpeciesList item in e.NewItems)
                {
                    item.HatchMontReader = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SpeciesList1_1", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SpeciesList item in e.OldItems)
                {
                    if (ReferenceEquals(item.HatchMontReader, this))
                    {
                        item.HatchMontReader = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SpeciesList1_1", item);
                    }
                }
            }
        }
    
        private void FixupR_SDReader(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (R_SDReader item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("R_SDReader", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (R_SDReader item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("R_SDReader", item);
                    }
                }
            }
        }
    
        private void FixupAge(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (Age item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("Age", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Age item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("Age", item);
                    }
                }
            }
        }
    
        private void FixupSDAnnotation(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SDAnnotation item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SDAnnotation", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SDAnnotation item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SDAnnotation", item);
                    }
                }
            }
        }
    
        private void FixupSDEvent(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SDEvent item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SDEvent", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SDEvent item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SDEvent", item);
                    }
                }
            }
        }
    
        private void FixupSDLine(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SDLine item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SDLine", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SDLine item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SDLine", item);
                    }
                }
            }
        }
    
        private void FixupSDPoint(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SDPoint item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SDPoint", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SDPoint item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SDPoint", item);
                    }
                }
            }
        }
    
        private void FixupSDSample(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (IsDeserializing)
            {
                return;
            }
    
            if (e.NewItems != null)
            {
                foreach (SDSample item in e.NewItems)
                {
                    item.DFUPerson = this;
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        if (!item.ChangeTracker.ChangeTrackingEnabled)
                        {
                            item.StartTracking();
                        }
                        ChangeTracker.RecordAdditionToCollectionProperties("SDSample", item);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (SDSample item in e.OldItems)
                {
                    if (ReferenceEquals(item.DFUPerson, this))
                    {
                        item.DFUPerson = null;
                    }
                    if (ChangeTracker.ChangeTrackingEnabled)
                    {
                        ChangeTracker.RecordRemovalFromCollectionProperties("SDSample", item);
                    }
                }
            }
        }

        #endregion

    }
}
