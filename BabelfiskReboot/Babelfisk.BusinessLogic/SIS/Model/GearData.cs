//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Runtime.Serialization;

namespace Babelfisk.BusinessLogic.SIS.Model
{
    [DataContract(IsReference = true)]
    [KnownType(typeof(CruiseInformation))]
    [KnownType(typeof(L_GearCodeList))]
    public partial class GearData
    {
        #region Primitive Properties
        [DataMember]
        public virtual int gearDataID
        {
            get;
            set;
        }
        [DataMember]
        public virtual int cruiseID
        {
            get { return _cruiseID; }
            set
            {
                if (_cruiseID != value)
                {
                    if (CruiseInformation != null && CruiseInformation.cruiseID != value)
                    {
                        CruiseInformation = null;
                    }
                    _cruiseID = value;
                }
            }
        }
        private int _cruiseID;
        [DataMember]
        public virtual int gearNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> haulNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<int> stationNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual string gearCode
        {
            get { return _gearCode; }
            set
            {
                if (_gearCode != value)
                {
                    if (L_GearCodeList != null && L_GearCodeList.gearCode != value)
                    {
                        L_GearCodeList = null;
                    }
                    _gearCode = value;
                }
            }
        }
        private string _gearCode;
        [DataMember]
        public virtual Nullable<short> transNo
        {
            get;
            set;
        }
        [DataMember]
        public virtual string tape1
        {
            get;
            set;
        }
        [DataMember]
        public virtual string status
        {
            get;
            set;
        }
        [DataMember]
        public virtual string offIni
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> timeStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual string posLatStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual string posLonStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<double> posLatStartDec
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<double> posLonStartDec
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> logStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> courseStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> botDepStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> speedWatStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> speedBotStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual string navSysStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual string squareStart
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> gearDistLog
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> gearDistPos
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> gearDur
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> wireLength
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> gearDepth
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> trawlGap
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> trawlSlack
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<System.DateTime> timeStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual string posLatStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual string posLonStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<double> posLatStopDec
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<double> posLonStopDec
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> logStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> courseStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> botDepStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> speedWatStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> speedBotStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual string navSysStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual string squareStop
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<short> atmPres
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> airTemp
        {
            get;
            set;
        }
        [DataMember]
        public virtual string windDir
        {
            get;
            set;
        }
        [DataMember]
        public virtual Nullable<float> windSpeed
        {
            get;
            set;
        }
        [DataMember]
        public virtual string seaHeaviness
        {
            get;
            set;
        }
        [DataMember]
        public virtual string seaCurrent
        {
            get;
            set;
        }
        [DataMember]
        public virtual string remarks
        {
            get;
            set;
        }
        [DataMember]
        public virtual string dataRemarks
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
        
    
        [DataMember]
        public virtual CruiseInformation CruiseInformation
        {
            get { return _cruiseInformation; }
            set
            {
                if (!ReferenceEquals(_cruiseInformation, value))
                {
                    var previousValue = _cruiseInformation;
                    _cruiseInformation = value;
                    FixupCruiseInformation(previousValue);
                }
            }
        }
        private CruiseInformation _cruiseInformation;
        
    
        [DataMember]
        public virtual L_GearCodeList L_GearCodeList
        {
            get { return _l_GearCodeList; }
            set
            {
                if (!ReferenceEquals(_l_GearCodeList, value))
                {
                    var previousValue = _l_GearCodeList;
                    _l_GearCodeList = value;
                    FixupL_GearCodeList(previousValue);
                }
            }
        }
        private L_GearCodeList _l_GearCodeList;

        #endregion
        #region Association Fixup
    
        private void FixupCruiseInformation(CruiseInformation previousValue)
        {
            if (previousValue != null && previousValue.GearData.Contains(this))
            {
                previousValue.GearData.Remove(this);
            }
    
            if (CruiseInformation != null)
            {
                if (!CruiseInformation.GearData.Contains(this))
                {
                    CruiseInformation.GearData.Add(this);
                }
                if (cruiseID != CruiseInformation.cruiseID)
                {
                    cruiseID = CruiseInformation.cruiseID;
                }
            }
        }
    
        private void FixupL_GearCodeList(L_GearCodeList previousValue)
        {
            if (previousValue != null && previousValue.GearData.Contains(this))
            {
                previousValue.GearData.Remove(this);
            }
    
            if (L_GearCodeList != null)
            {
                if (!L_GearCodeList.GearData.Contains(this))
                {
                    L_GearCodeList.GearData.Add(this);
                }
                if (gearCode != L_GearCodeList.gearCode)
                {
                    gearCode = L_GearCodeList.gearCode;
                }
            }
        }

        #endregion
    }
}
