<?xml version="1.0"?>
<configuration>

  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
  </system.web>
  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior name="Babelfisk.OtolithFileService.OtolithFileServiceBehavior">
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
          <dataContractSerializer maxItemsInObjectGraph="2147483647"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <bindings>
      <basicHttpBinding>
        <!-- Use hostNameComparisonMode to Exact which should restrict the service to localhost request only -->
        <binding name="otolithFileServiceBinding" closeTimeout="00:10:00" openTimeout="00:10:00"
          receiveTimeout="00:10:00" sendTimeout="00:10:00" bypassProxyOnLocal="false"
          maxBufferPoolSize="2147483647"
          maxBufferSize="2147483647" maxReceivedMessageSize="2147483647"
          textEncoding="utf-8" transferMode="Buffered" useDefaultWebProxy="true"
          hostNameComparisonMode ="Exact"
          messageEncoding="Text">
          <security mode="None" />
        </binding>
      </basicHttpBinding>
    </bindings>
    
    <protocolMapping>
      <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />

    <services>
      <service behaviorConfiguration="Babelfisk.OtolithFileService.OtolithFileServiceBehavior" name="Babelfisk.OtolithFileService.OtolithFileService">
        <endpoint address="" binding="basicHttpBinding" bindingConfiguration="otolithFileServiceBinding" name="OtolithFileServiceEndPoint" contract="Babelfisk.OtolithFileService.IOtolithFileService"/>
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
        <host>
          <baseAddresses>
            <add baseAddress="http://localhost/"/>
          </baseAddresses>
        </host>
      </service>
    </services>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="ProcessUserName" value=""/>
    <add key="ProcessPassword" value=""/>
    <add key="ProcessDomain" value=""/>
    <add key="OtolithImagesRootPath" value="C:\Temp\OtolithImages\OtolithImages" />
    <add key="OtolithImagesServerConnectToUNCPath" value="False" />   
    <!-- 
    <add key="OtolithImagesServerConnectToUNCPath" value="True" />
    <add key="OtolithImagesServerName" value="Server name" />
    <add key="OtolithImagesServerDomainOrComputerName" value="WIN" />
    <add key="OtolithImagesServerUser" value="user" />
    <add key="OtolithImagesServerPassword" value="password" /> 
    -->
    

    <add key="OtolithImagesExtensions" value="jpg" />
    <add key="OtolithImagesAdditionalFileExtensions" value="" />
    
    <!--If this is true, it looks in all child folders of the current one, to see if they have folders, when populating the tree. This can be slow on UNC paths, so False will turn it off and the user will have to expand a folder to see whether it is empty or not. -->
    <add key="SearchSubfoldersForChildren" value="False" />

  </appSettings>

</configuration>
