<UserControl x:Class="Babelfisk.WPF.Views.SmartDots.TreeViews.FolderTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Babelfisk.WPF.Views.SmartDots.TreeViews"
             xmlns:sdtv="clr-namespace:Babelfisk.ViewModels.SmartDots.TreeViews;assembly=Babelfisk.ViewModels"
             xmlns:cnv="clr-namespace:Babelfisk.WPF.Converters"
             xmlns:lan="urn:anchorcore-language-localization-ui"
             xmlns:aCtrls="clr-namespace:Anchor.Core.Controls;assembly=Anchor.Core.Controls"
             mc:Ignorable="d" x:Name="uc"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../../Resources/Styles/GreenRedCheckBoxStyle.xaml"/>

                <ResourceDictionary>
                    <cnv:MyAlternationEqualityConverter x:Key="MyAlternationEqualityConverter" />

                    <Style x:Key="TreeViewItemFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 Z"/>

                    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Width" Value="16"/>
                        <Setter Property="Height" Value="16"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="Transparent" Padding="0" Opacity="0.8" Margin="-1,1,0,0"  >
                                        <Image x:Name="img" Width="16" Height="16" Source="../../../Resources/Images/Treeview/Plus2.ico" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="img" Property="Opacity" Value="0.7"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="img" Property="Source" Value="../../../Resources/Images/Treeview/Minus2.ico"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="StretchedTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="1,0,0,0"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Column="1">
                                            <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" HorizontalAlignment="Stretch" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="StretchedTreeViewItemWithLinesStyle" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="AlternationCount" Value="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="0,0,0,0"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <Grid Grid.Column="0" Grid.ColumnSpan="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <Rectangle Grid.Row="0" Width="1" Fill="LightGray" SnapsToDevicePixels="True" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                                           Margin="9,0,0,0"/>

                                            <Rectangle Grid.Row="1" Height="1" Fill="LightGray" SnapsToDevicePixels="True" HorizontalAlignment="Left">
                                                <Rectangle.Style>
                                                    <Style TargetType="Rectangle">

                                                        <Setter Property="Margin" Value="10,0,15,0"/>
                                                        <Setter Property="Width" Value="13"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=HasItems}" Value="False">
                                                                <Setter Property="Margin" Value="10,0,0,0"></Setter>
                                                                <Setter Property="Width" Value="25"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>

                                        </Grid>

                                        <Border Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="2">
                                            <Rectangle Grid.Row="2" Width="1"
                                           SnapsToDevicePixels="True" VerticalAlignment="Stretch"
                                           HorizontalAlignment="Center"
                                           Margin="0,0,0,0" Fill="LightGray">
                                                <Rectangle.Style>
                                                    <Style TargetType="Rectangle">
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource MyAlternationEqualityConverter}">
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=2}" Path="Items.Count" />
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}" Path="(ItemsControl.AlternationIndex)" />
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                        </Border>

                                        <ToggleButton Grid.Column="0" Grid.Row="0" Width="16" Height="16" Background="White" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <Border Grid.Column="1" Grid.Row="0" x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" >
                                            <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                        </Border>

                                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" HorizontalAlignment="Stretch" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!-- Selected and has focus -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="#7DA2CE"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

    </UserControl.Resources>
    <Grid>
        <TreeView x:Name="treeView" Padding="4,4,0,4" Grid.Row="1"
                  Tag="{Binding Path=.}"
                  BorderThickness="0,0,0,0"
                  ItemsSource="{Binding RootFolders}" 
                  AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource StretchedTreeViewItemWithLinesStyle}">
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Visibility" Value="{Binding IsVisible, Mode=OneWay, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True}" />
                    <EventSetter Event="Selected" Handler="OnTreeViewItemSelected"/>
                    <Setter Property="FontWeight" Value="Normal" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsDummy}" Value="True">
                            <Setter Property="Focusable" Value="False" />
                        </DataTrigger>

                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

            <TreeView.Resources>

                <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#55E9EBE8" Offset="0"/>
                    <GradientStop Color="#47D8E2D3" Offset="1"/>
                </LinearGradientBrush>
                <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF8F8F8" Offset="0"/>
                    <GradientStop Color="#FFE5E5E5" Offset="1"/>
                </LinearGradientBrush>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

                <!-- Item level -->
                <HierarchicalDataTemplate DataType="{x:Type sdtv:FolderTreeViewItem}" ItemsSource="{Binding Children}" >
                    <Grid Margin="2,0,0,0">
                        <StackPanel Orientation="Horizontal"  Visibility="{Binding Path=IsDummy, Converter={StaticResource cBoolToVisibility}, ConverterParameter=False}" Margin="0" Tag="{Binding Path=.}" ToolTip="År" >
                            <CheckBox IsChecked="{Binding Path=IsChecked}" KeyboardNavigation.IsTabStop="False" Focusable="False" PreviewMouseDown="Item_PreviewMouseDown" 
                                      Visibility="{Binding Path=Tree.IsCheckFoldersEnabled, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}"
                                      KeyboardNavigation.TabNavigation="None" Margin="1,1,0,1" VerticalAlignment="Center" Style="{StaticResource ResourceKey=sCheckBox2}" />
                            <Image Width="18" Height="18" Margin="3,1,3,1" VerticalAlignment="Center" Source="../../../Resources/Images/Treeview/Folder.ico" />
                            <TextBlock Text="{Binding Header}" Margin="3,0,0,0" FontSize="13"  VerticalAlignment="Center" />
                        </StackPanel>

                        <Border Visibility="{Binding Path=IsDummy, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" VerticalAlignment="Center" HorizontalAlignment="Left">
                            <DockPanel>
                                <ProgressBar Width="30" Height="8" IsIndeterminate="True" />
                            </DockPanel>
                        </Border>
                    </Grid>
                   
                </HierarchicalDataTemplate>

            </TreeView.Resources>
        </TreeView>

        <!-- Tree loading message -->
        <Grid Grid.Row="1" Visibility="{Binding Path=IsLoading, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True, FallbackValue=Hidden}">
            <Border Background="#CCF5F5F5" HorizontalAlignment="Center" SnapsToDevicePixels="True" VerticalAlignment="Top" Margin="0,50,0,0" MinWidth="160" BorderBrush="Gray" BorderThickness="1" CornerRadius="0" >
                <DockPanel Margin="10,5,10,10" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
                        <TextBlock Text="{lan:Translate Section=Common, Key=Loading, UIDesignerValue='Arbejder, vent venligst'}"  FontSize="15"  />
                        <TextBlock Text="..."  FontSize="15"/>
                    </StackPanel>

                    <ProgressBar IsIndeterminate="True" Height="10" Margin="0,3,0,0" />
                </DockPanel>
            </Border>
        </Grid>
    </Grid>
</UserControl>
