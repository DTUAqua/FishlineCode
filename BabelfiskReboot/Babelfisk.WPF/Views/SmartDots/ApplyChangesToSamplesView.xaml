<UserControl x:Class="Babelfisk.WPF.Views.SmartDots.ApplyChangesToSamplesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:aCtrls="clr-namespace:Anchor.Core.Controls;assembly=Anchor.Core.Controls"
             xmlns:local="clr-namespace:Babelfisk.WPF.Views.SmartDots"
             xmlns:lan="urn:anchorcore-language-localization-ui"
             xmlns:dGrid="clr-namespace:Babelfisk.WPF.Infrastructure.DataGrid"
             xmlns:inf="clr-namespace:Babelfisk.WPF.Infrastructure"
             xmlns:inp="clr-namespace:Babelfisk.WPF.Views.Input"
             xmlns:cnv="clr-namespace:Babelfisk.WPF.Converters"
             xmlns:sdv="clr-namespace:Babelfisk.WPF.Views.SmartDots"
             xmlns:aBeh="clr-namespace:Anchor.Core.Controls.Behaviors;assembly=Anchor.Core.Controls"
             xmlns:aCtrlBeh="clr-namespace:Anchor.Core.Controls.Behaviors;assembly=Anchor.Core.Controls"
             xmlns:aCtrlComp="clr-namespace:Anchor.Core.Comparers;assembly=Anchor.Core"
             mc:Ignorable="d" x:Name="uc"
             d:DesignHeight="450" d:DesignWidth="1200">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/GeneralStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/InputStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/GreenRedCheckBoxStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/HeaderButtons.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/DataGridStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Anchor.Core.Controls;component/Themes/FlatStyleComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Anchor.Core.Controls;component/Themes/DropDownListBox.xaml" />

                <ResourceDictionary>
                    <cnv:DataGridColumnMapToVisibilityConverter x:Key="cColumnMapToVisibility" />

                    <LinearGradientBrush x:Key="InputHeaderBackgroundRev" EndPoint="0,0.5" StartPoint="1,0.5">
                        <GradientStop Color="#FF202020" Offset="0"/>
                        <GradientStop Color="#FF414141" Offset="1"/>
                    </LinearGradientBrush>
                    
                    <inf:BindingProxy x:Key="proxyContext" Data="{Binding Path=DataContext, ElementName=uc}" />

                    <LinearGradientBrush x:Key="InputHeaderBackgroundRevRev" EndPoint="0,0.5" StartPoint="1,0.5">
                        <GradientStop Color="#FF202020" Offset="1"/>
                        <GradientStop Color="#FF414141" Offset="0"/>
                    </LinearGradientBrush>

                    <SolidColorBrush x:Key="oldValueColor" Color="#FFFFDEE0" />
                    <SolidColorBrush x:Key="newValueColor" Color="#FFD0E9F4" />

                    <DataTemplate x:Key="dataGridCellCompareTemplate" >
                        <Grid>
                            <Grid Margin="0" Visibility="{Binding Path=IsValuesEqual, Converter={StaticResource cBoolToVisibility}, ConverterParameter=False}" >
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border  Grid.Row="0" Background="{StaticResource oldValueColor}">
                                    <TextBlock Margin="5,2" VerticalAlignment="Center" HorizontalAlignment="Left"
                                               aBeh:HighlightTermBehavior.Text="{Binding Path=Value}" 
                                               aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                               />
                                </Border>

                                <Border Grid.Row="1"  Grid.Column="0" BorderThickness="0,1,0,0" SnapsToDevicePixels="True" Height="1" BorderBrush="#D9D9D9" Margin="0,0,0,0"></Border>

                                <Border  Grid.Row="2" Background="{StaticResource newValueColor}">
                                    <TextBlock Margin="5,2"  VerticalAlignment="Center" HorizontalAlignment="Left"
                                               aBeh:HighlightTermBehavior.Text="{Binding Path=NewValue}" FontWeight="Medium"
                                               aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                               />
                                </Border>
                            </Grid>

                            <Grid Margin="0"  Visibility="{Binding Path=IsValuesEqual, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                <Border >
                                    <TextBlock Margin="5,2" VerticalAlignment="Center" HorizontalAlignment="Left" 
                                               aBeh:HighlightTermBehavior.Text="{Binding Path=Value}"
                                               aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                               />
                                </Border>
                            </Grid>
                        </Grid>
                    </DataTemplate>


                    <Style x:Key="dateTimePickerStyle" TargetType="{x:Type aCtrls:DateTimePickerControl}" BasedOn="{StaticResource ResourceKey=ValidateElementRedBorder}">
                        <Setter Property="Opacity" Value="1.0" />
                        <Setter Property="TextBlock.FontWeight" Value="Normal" />
                        <Setter Property="TextBlock.FontSize" Value="11" />
                        <Setter Property="Padding" Value="2,0,2,0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="ButtonBorderThickness" Value="0"/>
                        <Setter Property="ButtonImageMargin" Value="3,2,3,3"/>
                        <Setter Property="Height" Value="28" />
                        <Setter Property="Background" Value="White" ></Setter>
                        
                    </Style>

                    <Style x:Key="dateTimePickerInputStyle" TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource ValidateElementRedBorder}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="2,0,2,0" />
                        <Setter Property="Background" Value="White" ></Setter>
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="panelButton" TargetType="{x:Type Button}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="BorderBrush" Value="#6A6969" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="bdr" SnapsToDevicePixels="True" Background="#99454942" KeyboardNavigation.IsTabStop="False" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                                        <Grid Margin="{TemplateBinding Padding}" x:Name="btnGrid" KeyboardNavigation.IsTabStop="False" >
                                            <ContentControl x:Name="content" KeyboardNavigation.IsTabStop="False" Content="{TemplateBinding Content}" Foreground="White" >
                                            </ContentControl>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsEnabled" Value="False">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.8" />
                                        </Trigger>
                                        <Trigger Property="Button.IsPressed" Value="True">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.2" ></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="panelToggleButton" TargetType="{x:Type ToggleButton}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="BorderBrush" Value="#6A6969" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="bdr" SnapsToDevicePixels="True" Background="#99454942" KeyboardNavigation.IsTabStop="False" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                                        <Grid  x:Name="btnGrid" KeyboardNavigation.IsTabStop="False" >
                                            <ContentControl x:Name="content" KeyboardNavigation.IsTabStop="False" Content="{TemplateBinding Content}" Foreground="White" HorizontalAlignment="Center">
                                            </ContentControl>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsEnabled" Value="False">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.8" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                            <Setter TargetName="bdr" Property="Opacity"  Value="0.8" ></Setter>
                                            <Setter TargetName="bdr" Property="Background"  Value="#99675638" ></Setter>
                                            <Setter TargetName="bdr" Property="BorderBrush"  Value="#99E4940C" ></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="tvGridCellItem" TargetType="{x:Type TextBlock}">
                        <Setter Property="TextAlignment" Value="Left" />
                        <Setter Property="Margin" Value="6,0" />
                    </Style>

                    <Style x:Key="tbGridCellItem" TargetType="{x:Type TextBox}">
                        <Setter Property="TextAlignment" Value="Left" />
                        <Setter Property="Margin" Value="0,0" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="3,0" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>

                    <Style x:Key="tbCellGridText" TargetType="{x:Type TextBlock}">
                        <Setter Property="TextAlignment" Value="Left" />
                        <Setter Property="Padding" Value="0,0" />
                        <Setter Property="FontSize" Value="11" />
                    </Style>

                    <SolidColorBrush x:Key="GridBorderBrush" Color="LightGray" />

                    <Style x:Key="cellBorderStyle" TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}" />
                        <Setter Property="BorderThickness" Value="1,1,1,0" />
                        <Setter Property="MaxHeight" Value="32" />
                        <Setter Property="MinHeight" Value="21" />
                        <Setter Property="Background" Value="White" />
                    </Style>

                    <DataTemplate x:Key="GridColumnHeaderDefault" >
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="26" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}"
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderCheckbox" >
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="26" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <CheckBox Style="{StaticResource sCheckBoxDataGrid}"  IsChecked="{Binding Path=DataContext.IsAllSelected, ElementName=uc}" IsThreeState="True" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0"></CheckBox>
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Border Background="White">
        <DockPanel>
            <!-- Top bar -->
            <Border DockPanel.Dock="Top"  BorderThickness="0" Background="{StaticResource InputHeaderBackgroundRev}" TextBlock.Foreground="{StaticResource InputHeaderForeground}"  SnapsToDevicePixels="True">
                <DockPanel Margin="0">
                    <Border DockPanel.Dock="Bottom" Padding="14,7,14,10" BorderBrush="#616161" BorderThickness="0,1,0,0">
                        <TextBlock Text="{lan:Translate Section=ApplyChangesToSamplesView, Key=MainDescription, UIDesignerValue='Bellow is the list of sample chnages found on Fishline database. Select sample you wish to update and press Apply changes button.'}" 
                                   TextWrapping="Wrap" 
                                   FontSize="14"  VerticalAlignment="Center" Margin="0,0,7,0" />
                    </Border>
                    <!-- Fish icon -->
                    <Border DockPanel.Dock="Left">
                        <DockPanel Width="10"/>
                    </Border>


                    <Border DockPanel.Dock="Right" BorderBrush="#616161" BorderThickness="1,0,0,0" Margin="0,0,0,0" >
                        <StackPanel  Orientation="Vertical" Margin="12,0,4,0" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="10" Height="10" Margin="0,0,2,0" Fill="{StaticResource oldValueColor}"></Rectangle>
                                <TextBlock Text="{lan:Translate Section=ApplyChangesToSamplesView, Key=OldValue, UIDesignerValue=' - old value'}" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" VerticalAlignment="Center" Margin="0,0,7,0" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,4,0,0">
                                <Rectangle Width="10" Height="10" Margin="0,0,2,0" Fill="{StaticResource newValueColor}"></Rectangle>
                                <TextBlock Text="{lan:Translate Section=ApplyChangesToSamplesView, Key=NewValue, UIDesignerValue=' - new value'}" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" VerticalAlignment="Center" Margin="0,0,7,0" />
                            </StackPanel>

                        </StackPanel>
                    </Border>
                    
                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" ToolTip="Search on all columns." Margin="8">
                        <TextBlock Text="{lan:Translate Section=Common, Key=Search, UIDesignerValue='Søg'}" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" VerticalAlignment="Center" Margin="0,0,7,0" />
                        <aCtrls:SubmitTextBox Width="150" VerticalContentAlignment="Center" Padding="2,3" Text="{Binding Path=SearchString, Mode=OneWayToSource}"  />
                    </StackPanel>
                    

                    <TextBlock DockPanel.Dock="Left" Text="{lan:Translate Section=ApplyChangesToSamplesView, Key=ModifiedSamples, UIDesignerValue='Modified samples'}" Foreground="White" FontWeight="Medium" VerticalAlignment="Center" FontSize="16" Margin="5,0,0,0"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"  >
                    </TextBlock>


                 
                   

                    <DockPanel />

                </DockPanel>
            </Border>


            <!-- Bottom bar - to be populated -->
            <Border DockPanel.Dock="Bottom" BorderBrush="LightGray" BorderThickness="0,1,0,0" 
                    Background="{StaticResource InputHeaderBackgroundRev}" TextBlock.Foreground="{StaticResource InputHeaderForeground}"  SnapsToDevicePixels="True">
                <DockPanel Margin="6,6,8,6">

                    <Button DockPanel.Dock="Right" Padding="25,3" Margin="8,3,0,3"
                            Style="{StaticResource ResourceKey=btnStandard}"
                            FontSize="14" Content="{lan:Translate Section=Common, Key=Cancel, UIDesignerValue='Cancel'}"
                            IsEnabled="{Binding Path=IsLoading, Converter={StaticResource cBoolToBoolNegation}}"
                            Command="{Binding Path=CancelCommand}" >
                        <!-- IsEnabled="{Binding Path=IsDirty}" -->
                    </Button>

                    
                    <!-- Save button -->
                    <Button Width="auto" DockPanel.Dock="Right" Padding="25,3" 
                            Style="{StaticResource ResourceKey=btnStandard}"
                            FontSize="14" Content="{lan:Translate Section=ApplyChangesToSamplesView, Key=ApplyChanges, UIDesignerValue='Apply changes'}"
                            IsEnabled="{Binding Path=IsMoveCopyVisible, Converter={StaticResource cBoolToBoolNegation}}"
                            Command="{Binding Path=ApplyChangesCommand}" >
                            <!-- IsEnabled="{Binding Path=IsDirty}" -->
                    </Button>

                    <Border DockPanel.Dock="Left">
                        <Grid Margin="0,-1,0,0" DockPanel.Dock="Left" VerticalAlignment="Center" TextBlock.FontSize="10" TextBlock.LineStackingStrategy="BlockLineHeight" TextBlock.LineHeight="12" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="0,0,0,0" Text="{lan:Translate Section=ImportFromCSVView, Key=SelectedSamples, UIDesignerValue='Selected samples:'}" VerticalAlignment="Center"  />
                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Path=SelectedSamplesCount}" VerticalAlignment="Center"  />

                            <TextBlock Grid.Row="1" Grid.Column="0" Margin="0,0,0,0" Text="{lan:Translate Section=SDSampleView, Key=VisibleSamples, UIDesignerValue='Visible samples:'}" VerticalAlignment="Center"  />
                            <TextBlock Grid.Row="1" Grid.Column="1"  Margin="5,0,0,0" Text="{Binding Path=TotalVisibleSamples}" VerticalAlignment="Center"  />

                            <TextBlock Grid.Row="2" Grid.Column="0" Margin="0,0,0,0" Text="{lan:Translate Section=SDSampleView, Key=TotalSamples, UIDesignerValue='Total samples:'}" VerticalAlignment="Center"  />
                            <TextBlock Grid.Row="2" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Path=TotalSamples}" VerticalAlignment="Center" />
                        </Grid>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=HasSamples}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>


                    <Grid HorizontalAlignment="Center"  Visibility="{Binding Path=HasSamples, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                        <Border  Margin="10,3" BorderBrush="#777777" BorderThickness="1" >
                            <DockPanel Margin="0,0">
                                <Border DockPanel.Dock="Left" ToolTip="{lan:Translate Section=SDEventsView, Key=InfoSorting, UIDesignerValue='Use the SHIFT key to sort by mutiple columns.'}" BorderBrush="LightGray" BorderThickness="0,0,1,0" Background="#D1FFFFFF">
                                    <TextBlock Text="{lan:Translate Section=Common, Key=SortBy, UIDesignerValue='Sort by:'}"   Margin="8,0" FontSize="12" LineHeight="13" LineStackingStrategy="BlockLineHeight" FontWeight="Bold" Foreground="Black" VerticalAlignment="Center"></TextBlock>
                                </Border>

                                <Border Background="#489A9A9A" ToolTip="{Binding Path=SortByColumnNamesString, ElementName=uc, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock DockPanel.Dock="Right" VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" 
                                           FontSize="12" LineHeight="13" LineStackingStrategy="BlockLineHeight"  
                                           MaxHeight="20" Text="{Binding Path=SortByColumnNamesString, ElementName=uc, UpdateSourceTrigger=PropertyChanged}"
                                   Margin="8,0,8,0" />
                                </Border>

                            </DockPanel>
                        </Border>
                    </Grid>
                    
                    
 

                </DockPanel>
            </Border>

            <!-- No samples added message -->
            <Grid>
                <DockPanel>
                    <Border BorderThickness="1" Panel.ZIndex="5" SnapsToDevicePixels="True"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">

                        <aCtrls:AncDataGrid x:Name="dataGrid" ItemsSource="{Binding Path=FilteredModifiedSampleList}"
                                            Style="{StaticResource defaultDataGridLightStyle}"
                                CanUserAddRows="False" IsSynchronizedWithCurrentItem="False" Background="White"
                                AutoGenerateColumns="False" RowHeaderWidth="0"
                                SelectionMode="Single" KeyboardNavigation.TabIndex="1" CanUserSortColumns="True" FooterVisibility="Collapsed"
                                CanUserDeleteRows="False" CanUserResizeRows="False" HorizontalGridLinesBrush="LightGray"
                                VerticalGridLinesBrush="LightGray" BorderBrush="LightGray" BorderThickness="0" DockPanel.Dock="Top" RowDetailsVisibilityMode="Collapsed"
                                VirtualizingStackPanel.VirtualizationMode="Recycling" 
                                IsReadOnly="{Binding Path=IsGridReadOnly}"
                                Tag="{Binding Path=DataContext, ElementName=uc}"
                                CellFooterVisibility="Collapsed" 
                                CellFooterBorderStyle="{StaticResource cellBorderStyle}"
                                ColumnHeaderStyle="{StaticResource ResourceKey=defaultColumnLightHeaderStyle}" >
                            
                            <aCtrls:AncDataGrid.ContextMenu>
                                <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={x:Static RelativeSource.Self}}" 
                                         Tag="{Binding Path=PlacementTarget.Tag, RelativeSource={x:Static RelativeSource.Self}}">
                                    <MenuItem Header="Tilføj række" Command="{Binding Path=Tag.AddRowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Style="{StaticResource defaultMenuItem}" >
                                        <MenuItem.Icon>
                                            <Image Width="15" Height="15" Margin="3,1,3,1" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Add.ico" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </aCtrls:AncDataGrid.ContextMenu>
                            <aCtrls:AncDataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource ResourceKey=OverColor2}" Opacity="0.6"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource ResourceKey=OverColor2}"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                                <SolidColorBrush x:Key="disabledField" Color="#FFF0F0F0" />

                                <Style x:Key="lblDisplay" TargetType="{x:Type Label}" BasedOn="{StaticResource ResourceKey=ValidateElementRedBorder}">
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Padding" Value="2,0,2,0" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="ToolTipService.ShowDuration" Value="60000" />

                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="False">
                                            <Setter Property="ToolTip" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>

                                <Style x:Key="StandardCellStyle" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Border x:Name="Border" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                        
                                    </Setter>
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                </Style>

                               

                                <Style x:Key="NoTabStopCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource StandardCellStyle}" >
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                    <Setter Property="Padding" Value="1,0,1,1"/>
                                </Style>

                                <Style x:Key="DisabledCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource StandardCellStyle}" >
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                                    <Setter Property="Background" Value="#7FE6E6E6" />
                                    <Setter Property="BorderBrush" Value="#99E6E6E6" />
                                </Style>

                                <Style x:Key="CheckboxCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource StandardCellStyle}" >
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,0"/>
                                </Style>

                            </aCtrls:AncDataGrid.Resources>
                            <aCtrls:AncDataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <EventSetter Event="KeyDown" Handler="KeyDownHandler" />
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="MinHeight" Value="30" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Tag" Value="{Binding Path=DataContext, ElementName=uc}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FFFCF4" Offset="0.0"/>
                                                        <GradientStop Color="#FFFCFAE7" Offset="1.0"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <DataTrigger Binding="{Binding Path=ChangeTracker.State}" Value="Modified">
                                            <Setter Property="Background" Value="#3DBAE0F7"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ChangeTracker.State}" Value="Added">
                                            <Setter Property="Background" Value="#83F6DFFC"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>

                            </aCtrls:AncDataGrid.RowStyle>
                            <aCtrls:AncDataGrid.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource StandardCellStyle}" >
                                    <EventSetter Event="PreviewKeyDown" Handler="PreviewKeyDown_Handler" />
                                    <EventSetter Event="PreviewKeyUp" Handler="PreviewKeyUp_Handler" />
                                </Style>
                            </aCtrls:AncDataGrid.CellStyle>

                            <aCtrls:AncDataGrid.Columns>

                                <!-- CheckBox-->
                                <aCtrls:AncDataGridTemplateColumn SortMemberPath="IsSelected" CellStyle="{StaticResource CheckboxCellStyle}" CanUserResize="False"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderCheckbox}" Width="28" MinWidth="28" Visibility="{Binding Path=Data.IsMoveCopyVisible, Source={StaticResource proxyContext}, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Center" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate >
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MouseDown="CheckBox_MouseDown" PreviewMouseDown="CheckBox_PreviewMouseDown" IsThreeState="false" Margin="0,0,0,0"  VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource sCheckBoxDataGrid}" ></CheckBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>
                                
                                <!-- Animal Id -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.animalId" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}"  Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|AnimalId'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=AnimalId, UIDesignerValue='Animal Id'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=AnimalId, UIDesignerValue='Animal Id'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Sample.animalId}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Species-->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.speciesCode" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}"  Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|AnimalId'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=AddEditSDEventView, Key=Species, UIDesignerValue='Species'}" LowerHeaderToolTip="{lan:Translate Section=AddEditSDEventView, Key=Species, UIDesignerValue='Species'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.speciesCode}" NewValue="{Binding Path=SelectionAnimal.SpeciesCode}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Cruise -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.cruise" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="100" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Cruise'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=Cruise, UIDesignerValue='Cruise'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=Cruise, UIDesignerValue='Cruise'}"  />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.cruise}" NewValue="{Binding Path=SelectionAnimal.Cruise}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Trip -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.trip" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="75" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Cruise'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=Trip, UIDesignerValue='Trip'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=Trip, UIDesignerValue='Trip'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.trip}" NewValue="{Binding Path=SelectionAnimal.Trip}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Station -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.station" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="75" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Station'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=Station, UIDesignerValue='Station'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=Station, UIDesignerValue='Station'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.station}" NewValue="{Binding Path=SelectionAnimal.Station}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Catch Date -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.catchDate" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="110" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|CatchDate'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=CatchDate, UIDesignerValue='Catch date'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=CatchDate, UIDesignerValue='Catch date'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.catchDate, StringFormat='{}{0:dd-MM-yy HH:mm:ss}'}" NewValue="{Binding Path=SelectionAnimal.GearStartDate, StringFormat='{}{0:dd-MM-yy HH:mm:ss}'}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- DFU Area-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.DFUArea"   HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|DFUArea'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=Area, UIDesignerValue='Area'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=DFUAre, UIDesignerValue='DFU Are'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.DFUArea}" NewValue="{Binding Path=SelectionAnimal.AreaCode}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Statistical Rectangle-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.statisticalRectangle" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|StatisticalRectangle'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=StatisticalRectangleShort, UIDesignerValue='Stat. Rec.'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=StatisticalRectangle, UIDesignerValue='Statistical Rectangle'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.statisticalRectangle}" NewValue="{Binding Path=SelectionAnimal.StatisticalRectangle}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Stock-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.L_Stock.stockCode" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|StockId'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=Stock, UIDesignerValue='Stock'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=Stock, UIDesignerValue='Stock'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.L_Stock.stockCode}" NewValue="{Binding Path=SelectionAnimal.StockCode}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                   
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Fish length -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.fishLengthMM"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="85" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Length'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=ColumnLength, UIDesignerValue='Length'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=ColumnLength, UIDesignerValue='Length'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.fishLengthMM}" NewValue="{Binding Path=SelectionAnimal.LengthMM}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    
                                </aCtrls:AncDataGridTemplateColumn>
                                
                                <!-- Fish Weight -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.fishWeightG"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="70" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Weight'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=ColumnWeight, UIDesignerValue='Weight'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=ColumnWeight, UIDesignerValue='Weight'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.fishWeightG, StringFormat='{}{0:0.####}'}" NewValue="{Binding Path=SelectionAnimal.WeightG, StringFormat='{}{0:0.####}'}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Sex Code -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.sexCode" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="50" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|SexCode'}" >
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=Sex, UIDesignerValue='Sex'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=SexCode, UIDesignerValue='Sex Code'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.sexCode}" NewValue="{Binding Path=SelectionAnimal.SexCode}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Maturity -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.Maturity.UIDisplay"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Maturity'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=MaturityID, UIDesignerValue='Maturity'}" LowerHeader="{lan:Translate Section=SDSampleView, Key=MaturityID, UIDesignerValue='Mat.'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.Maturity.UIDisplay}" NewValue="{Binding Path=SelectionAnimalMaturity}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Otolith Reading Remark-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.L_OtolithReadingRemark.otolithReadingRemark"   HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|OtolithReadingRemark'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=OtolithReadingRemarkShort, UIDesignerValue='Otolith'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=OtolithReadingRemark, UIDesignerValue='Otolith reading remark'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.L_OtolithReadingRemark.otolithReadingRemark}" NewValue="{Binding Path=SelectionAnimal.OtolithReadingRemarkCode}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Edge Structure-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.edgeStructure"   HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|EdgeStructure'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=EdgeStructureShort, UIDesignerValue='Edge'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=EdgeStructure, UIDesignerValue='Edge structure'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.edgeStructure}" NewValue="{Binding Path=SelectionAnimal.EdgeStructureCode}" />
                                            </ContentControl>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>
                                
                                <!-- Comments -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellStyle}" SortMemberPath="Sample.comments"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="150" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Comments'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=Common, Key=Comments, UIDesignerValue='Comments'}" LowerHeaderToolTip="{lan:Translate Section=Common, Key=Comments, UIDesignerValue='Comments'}"/>
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ContentControl DataContext="{Binding}" ContentTemplate="{StaticResource dataGridCellCompareTemplate}" >
                                                <sdv:CompareItemCell Value="{Binding Path=Sample.comments}" NewValue="{Binding Path=SelectionAnimalComment}" />
                                            </ContentControl>
                                            
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>

                                   
                                </aCtrls:AncDataGridTemplateColumn>

                            </aCtrls:AncDataGrid.Columns>
                        </aCtrls:AncDataGrid>

                    </Border>
                </DockPanel>

                <Border DockPanel.Dock="Top" Visibility="{Binding Path=IsLoading, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" Margin="0,40,0,0"
                        HorizontalAlignment="Center" VerticalAlignment="Top" Background="White" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True">
                    <StackPanel Orientation="Vertical" Margin="15,7,15,10">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="{lan:Translate Section=Common, Key=Loading, UIDesignerValue='Loading...'}" FontWeight="Medium" FontSize="14" Margin="0,0,0,4" />
                        </StackPanel>
                        <ProgressBar IsIndeterminate="True" Height="10" />
                    </StackPanel>

                </Border>
            </Grid>

        </DockPanel>
    </Border>
</UserControl>
