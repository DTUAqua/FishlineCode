<UserControl x:Class="Babelfisk.WPF.Views.SmartDots.SDSamplesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:aCtrls="clr-namespace:Anchor.Core.Controls;assembly=Anchor.Core.Controls"
             xmlns:local="clr-namespace:Babelfisk.WPF.Views.SmartDots"
             xmlns:lan="urn:anchorcore-language-localization-ui"
             xmlns:dGrid="clr-namespace:Babelfisk.WPF.Infrastructure.DataGrid"
             xmlns:inf="clr-namespace:Babelfisk.WPF.Infrastructure"
             xmlns:inp="clr-namespace:Babelfisk.WPF.Views.Input"
             xmlns:cnv="clr-namespace:Babelfisk.WPF.Converters"
             xmlns:aBeh="clr-namespace:Anchor.Core.Controls.Behaviors;assembly=Anchor.Core.Controls"
             xmlns:aCtrlComp="clr-namespace:Anchor.Core.Comparers;assembly=Anchor.Core"
             mc:Ignorable="d" x:Name="uc"
             d:DesignHeight="450" d:DesignWidth="1200">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/GeneralStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/InputStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/GreenRedCheckBoxStyle.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/HeaderButtons.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Resources/Styles/DataGridStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Anchor.Core.Controls;component/Themes/FlatStyleComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Anchor.Core.Controls;component/Themes/DropDownListBox.xaml" />

                <ResourceDictionary>
                    <cnv:DataGridColumnMapToVisibilityConverter x:Key="cColumnMapToVisibility" />

                    <LinearGradientBrush x:Key="InputHeaderBackgroundRev" EndPoint="0,0.5" StartPoint="1,0.5">
                        <GradientStop Color="#FF202020" Offset="0"/>
                        <GradientStop Color="#FF414141" Offset="1"/>
                    </LinearGradientBrush>
                    
                    <inf:BindingProxy x:Key="proxyContext" Data="{Binding Path=DataContext, ElementName=uc}" />

                    <LinearGradientBrush x:Key="InputHeaderBackgroundRevRev" EndPoint="0,0.5" StartPoint="1,0.5">
                        <GradientStop Color="#FF202020" Offset="1"/>
                        <GradientStop Color="#FF414141" Offset="0"/>
                    </LinearGradientBrush>

                    <Style x:Key="dateTimePickerStyle" TargetType="{x:Type aCtrls:DateTimePickerControl}" BasedOn="{StaticResource ResourceKey=ValidateElementRedBorder}">
                        <Setter Property="Opacity" Value="1.0" />
                        <Setter Property="TextBlock.FontWeight" Value="Normal" />
                        <Setter Property="TextBlock.FontSize" Value="11" />
                        <Setter Property="Padding" Value="2,0,2,0" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="ButtonBorderThickness" Value="0"/>
                        <Setter Property="ButtonImageMargin" Value="3,2,3,3"/>
                        <Setter Property="Height" Value="28" />
                        <Setter Property="Background" Value="White" ></Setter>
                        
                    </Style>

                    <Style x:Key="dateTimePickerInputStyle" TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource ValidateElementRedBorder}">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="2,0,2,0" />
                        <Setter Property="Background" Value="White" ></Setter>
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                        <Setter Property="AllowDrop" Value="true"/>
                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="panelButton" TargetType="{x:Type Button}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="BorderBrush" Value="#6A6969" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="bdr" SnapsToDevicePixels="True" Background="#99454942" KeyboardNavigation.IsTabStop="False" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                                        <Grid Margin="{TemplateBinding Padding}" x:Name="btnGrid" KeyboardNavigation.IsTabStop="False" >
                                            <ContentControl x:Name="content" KeyboardNavigation.IsTabStop="False" Content="{TemplateBinding Content}" Foreground="White" >
                                            </ContentControl>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsEnabled" Value="False">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                        <Trigger Property="Button.IsMouseOver" Value="True">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.8" />
                                        </Trigger>
                                        <Trigger Property="Button.IsPressed" Value="True">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.2" ></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="panelToggleButton" TargetType="{x:Type ToggleButton}">
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="BorderBrush" Value="#6A6969" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="bdr" SnapsToDevicePixels="True" Background="#99454942" KeyboardNavigation.IsTabStop="False" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                                        <Grid  x:Name="btnGrid" KeyboardNavigation.IsTabStop="False" >
                                            <ContentControl x:Name="content" KeyboardNavigation.IsTabStop="False" Content="{TemplateBinding Content}" Foreground="White" HorizontalAlignment="Center">
                                            </ContentControl>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ToggleButton.IsEnabled" Value="False">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.4" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                                            <Setter TargetName="bdr" Property="Opacity" Value="0.8" />
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                            <Setter TargetName="bdr" Property="Opacity"  Value="0.8" ></Setter>
                                            <Setter TargetName="bdr" Property="Background"  Value="#99675638" ></Setter>
                                            <Setter TargetName="bdr" Property="BorderBrush"  Value="#99E4940C" ></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="tvGridCellItem" TargetType="{x:Type TextBlock}">
                        <Setter Property="TextAlignment" Value="Left" />
                        <Setter Property="Margin" Value="6,0" />
                    </Style>

                    <Style x:Key="tbGridCellItem" TargetType="{x:Type TextBox}">
                        <Setter Property="TextAlignment" Value="Left" />
                        <Setter Property="Margin" Value="0,0" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="3,0" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>

                    <SolidColorBrush x:Key="GridBorderBrush" Color="LightGray" />

                    <Style x:Key="cellBorderStyle" TargetType="{x:Type Border}">
                        <Setter Property="BorderBrush" Value="{StaticResource GridBorderBrush}" />
                        <Setter Property="BorderThickness" Value="1,1,1,0" />
                        <Setter Property="MaxHeight" Value="32" />
                        <Setter Property="MinHeight" Value="21" />
                        <Setter Property="Background" Value="White" />
                    </Style>

                    <DataTemplate x:Key="GridColumnHeaderDefault" >
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}"
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="0,0,0,-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">
                                    <TextBlock Text="{Binding Path=UpperHeader}" Margin="4,0,4,0" VerticalAlignment="Center" Foreground="{Binding Path=UpperHeaderForeground}"  />
                                </Border>

                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" />

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderCheckbox" >
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="0,0,0,-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">
                                    <TextBlock Text="{Binding Path=UpperHeader}" Margin="4,0,4,0" VerticalAlignment="Center" Foreground="{Binding Path=UpperHeaderForeground}"  />
                                </Border>

                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True" />

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <CheckBox Style="{StaticResource sCheckBoxDataGrid}"  IsChecked="{Binding Path=DataContext.IsAllSelected, ElementName=uc, Mode=OneWay}" IsThreeState="True" PreviewMouseDown="selectAllCheckBox_PreviewMouseDown" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0"></CheckBox>
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderSettings" >
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="WhiteSmoke"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}"
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition Height="23"/>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="0,0,0,-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">
                                    <inp:ColumnVisibilityView Width="23" Margin="0,0,0,0"
                                                              IsEnabled="{Binding Path=Data.HasColumnVisibility, Source={StaticResource proxyContext}}"
                                                              DataContext="{Binding Path=Data.ColumnVisibility, Source={StaticResource proxyContext}}" />
                                </Border>

                                <Border Grid.Row="1" Height="1" Background="{StaticResource GridBorderBrush}" SnapsToDevicePixels="True" />

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownLength">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedLengths, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="150" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownCruise">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedCruises, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="150" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownTrip">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedTrips, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="150" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>
                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">
                                </Border>
                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownStation">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedStations, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="150" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>
                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">
                                </Border>
                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>


                    <DataTemplate x:Key="GridColumnHeaderDropDownSex">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedSexes, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="210" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownMaturity">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedMaturities, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="250" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownOtolithReadingRemark">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedOtolithReadingRemarks, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="480" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownOtolithDescription">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedOtolithDescriptions, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True" 
                                                            DropDownHeight="300" Height="26"  DropDownWidth="250" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownPrepMethod">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">
                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedPrepMethods, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="250" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>
                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">
                                </Border>
                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownLightType">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">
                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedLightTypes, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="200" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>
                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">
                                </Border>
                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownEdgeStructure">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedEdgeStructures, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="400" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderDropDownDFUArea">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedDFUAreas, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="150" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>
                                

                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>
                    
                    <DataTemplate x:Key="GridColumnHeaderDropDownStatisticalRectangle">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedStatisticalRectangles, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="150" 
                                                                    Style="{StaticResource FlatStyleDropDownListBox}">

                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>
                    
                    

                    <DataTemplate x:Key="GridColumnHeaderDropDownStock">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedStocks, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="350" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>


                    <DataTemplate x:Key="GridColumnHeaderDropDownCreatedBy">
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}" 
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">

                                    <aCtrls:DropDownListBox x:Name="mcbxInput" Tag="{Binding}"  DockPanel.Dock="Left" Margin="0" Background="#FFFDFDFD" BorderBrush="LightGray" BorderThickness="0"  SelectAllText="{lan:Translate Section=Common, Key=SelectAll, UIDesignerValue='Vælg alle'}"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=DataContext.UsedCreatedBy, Mode=OneWay, ElementName=uc}" AutoCloseOnMouseLeave="True"
                                                            DropDownHeight="300" Height="26"  DropDownWidth="150" Style="{StaticResource FlatStyleDropDownListBox}">
                                        <aCtrls:DropDownListBox.ListBoxItemTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"  
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,0" VerticalAlignment="Center">
                                                            <TextBlock Text="{Binding Path=Text, Mode=OneWay}"  />
                                                        </StackPanel>
                                                    </CheckBox>
                                                </Border>
                                            </DataTemplate>
                                        </aCtrls:DropDownListBox.ListBoxItemTemplate>
                                    </aCtrls:DropDownListBox>
                                </Border>


                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" SnapsToDevicePixels="True">

                                </Border>

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="{Binding Path=LowerHeaderHorizontalAlignment}" FontWeight="DemiBold" Margin="6,0,6,0" Text="{Binding Path=LowerHeader}" Foreground="#494949" />
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>

                    <DataTemplate x:Key="GridColumnHeaderImages" >
                        <Border BorderBrush="{StaticResource GridBorderBrush}" 
                                Height="50" Background="{StaticResource GridBorderBrush}"
                                SnapsToDevicePixels="True"
                                Width="{Binding RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Path=ActualWidth}"
                                BorderThickness="{Binding Path=HeaderBorder}" DataContext="{Binding Path=Content, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader, Mode=FindAncestor}}">
                            <Grid >
                                <Grid.RowDefinitions >
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Border Grid.Row="0" BorderBrush="{Binding Path=UpperHeaderBorderBrush}" Margin="0,0,0,-1" Panel.ZIndex="10" Background="WhiteSmoke" BorderThickness="{Binding Path=UpperHeaderBorderThickness}" SnapsToDevicePixels="True">
                                    <TextBlock Text="{Binding Path=UpperHeader}" Margin="4,0,4,0" VerticalAlignment="Center" Foreground="{Binding Path=UpperHeaderForeground}"  />
                                </Border>

                                <Border Grid.Row="1" Height="1" Background="WhiteSmoke" />

                                <Border Grid.Row="2" BorderBrush="WhiteSmoke" BorderThickness="{Binding Path=LowerHeaderBorder}" Background="WhiteSmoke" ToolTip="{Binding Path=LowerHeaderToolTip}" Panel.ZIndex="5" SnapsToDevicePixels="True" >
                                    <Image  Margin="1" Width="17" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Image.ico" ></Image>
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Border Background="White">
        <DockPanel>
            <!-- Top bar -->
            <Border DockPanel.Dock="Top"  BorderThickness="0" Background="{StaticResource InputHeaderBackgroundRev}" TextBlock.Foreground="{StaticResource InputHeaderForeground}"  SnapsToDevicePixels="True">
                <DockPanel Margin="0">
                    <!-- Edit button 
                    <Border DockPanel.Dock="Right">
                        <Button Style="{StaticResource panelButton}" Margin="8" 
                                ToolTip="Edit event information"
                                Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" Padding="5,5,5,4" 
                                Command="{Binding Path=EditEventCommand}" >
                            <DockPanel>
                                <Image DockPanel.Dock="Left" Margin="0,0,0,0" Height="12" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/EditPen.ico" ></Image>
                            </DockPanel>
                        </Button>
                    </Border>
                    -->

                    <!-- Show error message about areas/species not matching event -->
                    <Border DockPanel.Dock="Bottom" Padding="14,7,14,10" BorderBrush="#616161" BorderThickness="0,1,0,0" Visibility="{Binding Path=HasInconsistencies, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                        <DockPanel>
                            <Image Source="pack://application:,,,/Resources/Images/DataGrid/Error.ico" Margin="0,0,0,-4"  Width="15" VerticalAlignment="Center" UseLayoutRounding="False" />

                            <TextBlock Text="{lan:Translate Section=SDSampleView, Key=AreaOrSpeciesDoesntMatch, UIDesignerValue='One or more area/species does not match current event areas/species.'}" 
                                   TextTrimming="CharacterEllipsis" FontSize="14" MaxHeight="40" Margin="13,0,0,0" TextWrapping="Wrap" Foreground="White" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}" ></TextBlock>
                        </DockPanel>
                       
                    </Border>

                    <Grid DockPanel.Dock="Right" IsEnabled="{Binding Path=HasSelectedRows, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <DockPanel Margin="8,0,8,0" VerticalAlignment="Center"  >
                            <ToggleButton x:Name="tbbExportData" Background="#99454942" Width="26" Height="26" 
                                          IsChecked="{Binding Path=IsMenuDropDownOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                          DockPanel.Dock="Left" HorizontalAlignment="Left" Style="{StaticResource panelToggleButton}"
                                          SnapsToDevicePixels="True" Margin="0,0,0,0" >
                                
                                <TextBlock Text="..." FontSize="16" FontFamily="Tahoma" FontWeight="Medium" Foreground="White" Margin="0,0,0,9" HorizontalAlignment="Left"  VerticalAlignment="Center" />
                            </ToggleButton>
                        </DockPanel>

                        <aCtrls:ChildPopup x:Name="popupPanelRight" IsOpen="{Binding Path=IsMenuDropDownOpen, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        StaysOpen="False" Closed="popupPanelRight_Closed"
                                        Placement="Custom" CustomPopupPlacementCallback="placePopup" PopupAnimation="Slide" AllowsTransparency="True">
                            <Border Background="{StaticResource InputHeaderBackgroundRev}" IsEnabled="{Binding Path=IsPopupFeatureActive, Converter={StaticResource cBoolToBoolNegation}}"  BorderBrush="#7C7C7C" BorderThickness="1" SnapsToDevicePixels="True">
                                <StackPanel x:Name="container" Orientation="Vertical">
                                    <Button  Style="{StaticResource panelButton}" Height="30" DockPanel.Dock="Left" Padding="0,0,0,0" Width="{Binding ElementName=container, Path=ActualWidth}"  HorizontalAlignment="Left" BorderThickness="0" SnapsToDevicePixels="True" Command="{Binding AddRowCommand}" IsEnabled="{Binding Path=IsMoveCopyVisible, Converter={StaticResource cBoolToBoolNegation}}"  >
                                        <DockPanel Margin="5,0,5,0" Width="{Binding ElementName=container, Path=ActualWidth}">
                                            <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="13" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" HorizontalAlignment="Left" Source="pack://application:,,,/Resources/Images/Common/add.ico" ></Image>
                                            <TextBlock DockPanel.Dock="Left" Text="{lan:Translate Section=SDSampleView, Key=AddSingleSampleHeader, UIDesignerValue='Add row'}" Margin="4,0,6,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White"/>
                                        </DockPanel>
                                    </Button>

                                    <Border BorderThickness="0,1,0,0" SnapsToDevicePixels="True" BorderBrush="#8A8A8A" />

                                    <Button Style="{StaticResource panelButton}" Height="30" DockPanel.Dock="Left" Padding="0,0,0,0" BorderThickness="0" HorizontalAlignment="Stretch"  SnapsToDevicePixels="True" 
                                            Command="{Binding ActivateCopyAgesToFishLineAnimalsCommand}" IsEnabled="{Binding Path=IsCopyingAgesToFishLineActivated, Converter={StaticResource cBoolToBoolNegation}}" >
                                        <StackPanel Margin="5,0,5,0" Orientation="Horizontal">
                                            <Image DockPanel.Dock="Left" Margin="0,0,5,0" Height="16" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Menu/Restore.ico" ></Image>
                                            <TextBlock Text="{lan:Translate Section=SDSampleView, Key=UpdateAgesInFishlineMenuButton, UIDesignerValue='Update FishLine ages from specific samples'}" Margin="3,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                                        </StackPanel>
                                    </Button>

                                    <Border BorderThickness="0,1,0,0" SnapsToDevicePixels="True" BorderBrush="#8A8A8A" />

                                    <Button Style="{StaticResource panelButton}" Height="30" DockPanel.Dock="Left" Padding="0,0,0,0" BorderThickness="0" HorizontalAlignment="Stretch"  SnapsToDevicePixels="True" 
                                            Command="{Binding ActivateCopyScaleToAllSelectedSamplesCommand}" IsEnabled="{Binding Path=IsCopyingScaleToSamplesActivated, Converter={StaticResource cBoolToBoolNegation}}" >
                                        <StackPanel Margin="5,0,5,0" Orientation="Horizontal">
                                            <Image DockPanel.Dock="Left" Margin="1,0,5,0" Height="15" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/Scale.ico" ></Image>
                                            <TextBlock Text="{lan:Translate Section=SDSampleView, Key=UpdateScaleMenuButton, UIDesignerValue='Apply entered scale to specific samples'}" Margin="3,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                                        </StackPanel>
                                    </Button>

                                    <Border BorderThickness="0,1,0,0" SnapsToDevicePixels="True" BorderBrush="#8A8A8A" />

                                    <Button Style="{StaticResource panelButton}" Height="30" DockPanel.Dock="Left" Padding="0,0,0,0" BorderThickness="0" HorizontalAlignment="Stretch"  SnapsToDevicePixels="True" Command="{Binding ShowMoveCopyCommand}" IsEnabled="{Binding Path=IsMoveCopyVisible, Converter={StaticResource cBoolToBoolNegation}}" >
                                        <StackPanel Margin="5,0,5,0" Orientation="Horizontal">
                                            <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="13" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/Copy.ico" ></Image>
                                            <TextBlock Text="{lan:Translate Section=SDSampleView, Key=MoveCopy, UIDesignerValue='Move/copy samples to selected event'}" Margin="4,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                                        </StackPanel>
                                    </Button>

                                    <Border BorderThickness="0,1,0,0" SnapsToDevicePixels="True" BorderBrush="#8A8A8A" />

                                    <Button Style="{StaticResource panelButton}" Height="30" DockPanel.Dock="Left" Padding="0,0,0,0" BorderThickness="0" HorizontalAlignment="Stretch"  SnapsToDevicePixels="True" Command="{Binding LookForMissingImagesCommand}" >
                                        <StackPanel Margin="5,0,5,0" Orientation="Horizontal">
                                            <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="13" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/ImageFolder.ico" ></Image>
                                            <TextBlock Text="{lan:Translate Section=SDSampleView, Key=LookForImages, UIDesignerValue='Look for missing image files'}" Margin="4,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                                        </StackPanel>
                                    </Button>

                                    <Border BorderThickness="0,1,0,0" SnapsToDevicePixels="True" BorderBrush="#8A8A8A" />

                                    <Button Style="{StaticResource panelButton}" Height="30" DockPanel.Dock="Left" Padding="0,0,0,0" BorderThickness="0" HorizontalAlignment="Stretch"  SnapsToDevicePixels="True" Command="{Binding ShowDeleteMultipleSamplesCommand}" IsEnabled="{Binding Path=IsDeleteMultipleVisible, Converter={StaticResource cBoolToBoolNegation}}" >
                                        <StackPanel Margin="5,0,5,0" Orientation="Horizontal">
                                            <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="13" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/Remove.ico" ></Image>
                                            <TextBlock Text="{lan:Translate Section=SDSampleView, Key=DeleteMany, UIDesignerValue='Delete multiple samples'}" Margin="4,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                                        </StackPanel>
                                    </Button>

                                    <Border BorderThickness="0,1,0,0" SnapsToDevicePixels="True" BorderBrush="#8A8A8A" />

                                    <Button Style="{StaticResource panelButton}" Height="30" DockPanel.Dock="Left" Padding="0,0,0,0" BorderThickness="0" HorizontalAlignment="Stretch"  SnapsToDevicePixels="True" 
                                            Command="{Binding RunInconsistencyCheckCommand}" IsEnabled="{Binding Path=IsCheckingForChanges, Converter={StaticResource cBoolToBoolNegation}}" >
                                        <StackPanel Margin="5,0,5,0" Orientation="Horizontal">
                                            <Image DockPanel.Dock="Left" Margin="1,0,4,0" Height="15" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/DataGrid/Warning.ico" ></Image>
                                            <TextBlock Text="{lan:Translate Section=SDSampleView, Key=CheckForInconsistenciesMenuButton, UIDesignerValue='Check samples for inconsistencies'}" Margin="3,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                                        </StackPanel>
                                    </Button>
                                    
                                </StackPanel>
                            </Border>
                        </aCtrls:ChildPopup>

                    </Grid>

                    <!-- Import from csv button -->
                    <Border DockPanel.Dock="Right">
                        <Button Style="{StaticResource panelButton}" Margin="8,8,0,8" 
                                ToolTip="{lan:Translate Section=SDSampleView, Key=ImportSamplesToolTip, UIDesignerValue='Import samples from a CSV file. The CSV file should use semicolon for separating columns and either comma or punctuation as decimal separator.'}"
                                Padding="5,5,5,4" ToolTipService.ShowDuration="60000"
                                IsEnabled="{Binding Path=IsPopupFeatureActive, Converter={StaticResource cBoolToBoolNegation}}"
                                Command="{Binding Path=ShowImportFromCSVViewCommand}">
                            <DockPanel>
                                <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="15" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/Excel2.png" ></Image>
                                <TextBlock Text="{lan:Translate Section=SDSampleView, Key=ImportSamples, UIDesignerValue='Import samples'}" Margin="3,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                            </DockPanel>
                        </Button>
                    </Border>

                    <!-- Import from fishline button -->
                    <Border DockPanel.Dock="Right">
                        <Button Style="{StaticResource panelButton}" Margin="8,8,0,8" 
                                Padding="5,5,5,4"
                                IsEnabled="{Binding Path=IsPopupFeatureActive, Converter={StaticResource cBoolToBoolNegation}}"
                                Command="{Binding Path=ShowSelectAnimalsViewCommand}">
                            <DockPanel>
                                <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="13" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/add.ico" ></Image>
                                <TextBlock Text="{lan:Translate Section=SDSampleView, Key=AddSample, UIDesignerValue='Add samples (Fishline)'}" Margin="3,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                            </DockPanel>
                        </Button>
                    </Border>

                    <!-- Add row button
                    <Border DockPanel.Dock="Right">
                        <Button Style="{StaticResource panelButton}" 
                                Height="27"
                                ToolTip="Add a single sample row"
                                Padding="5,5,5,4"
                                Command="{Binding Path=AddRowCommand}">
                            <DockPanel>
                                <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="13" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/add.ico" ></Image>
                                <TextBlock Text="{lan:Translate Section=SDSampleView, Key=AddSingleSampleHeader, UIDesignerValue='Add row'}" Margin="3,0,6,0" VerticalAlignment="Center" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" Foreground="White" />
                            </DockPanel>
                        </Button>
                    </Border> -->



                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" ToolTip="{lan:Translate Section=SDSampleView, Key=SearchInColumnsToolTip, UIDesignerValue='Search in columns that do not have a filter drop down list in the header.'}" ToolTipService.ShowDuration="30000" Margin="8,8,0,8">
                        <TextBlock Text="{lan:Translate Section=Common, Key=Search, UIDesignerValue='Søg'}" FontSize="12" LineHeight="12" LineStackingStrategy="BlockLineHeight" VerticalAlignment="Center" Margin="0,0,7,0" />
                        <aCtrls:SubmitTextBox Width="150" VerticalContentAlignment="Center" Padding="2,3" IsClearTextButtonEnabled="True" ClearButtonToolTip="{lan:Translate Section=Common, Key=ClearText, UIDesignerValue='Clear the text'}" Text="{Binding Path=SearchString, Mode=OneWayToSource}"  />
                    </StackPanel>

                    <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=Event, UIDesignerValue='Event'}" Foreground="White" FontWeight="Medium" VerticalAlignment="Center" FontSize="16" Margin="12,0,0,0"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"
                               >
                        </TextBlock>
                        <TextBlock Text=":" Foreground="White" FontWeight="Medium" VerticalAlignment="Center" FontSize="16" Margin="2,0,0,0"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"
                               >
                        </TextBlock>
                        <TextBlock Text="{Binding Path=Event.name}" Foreground="White" FontWeight="Medium" VerticalAlignment="Center" FontSize="16" Margin="7,0,0,0"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"
                               >
                        </TextBlock>
                        <TextBlock Text="{Binding Path=EventSpeciesString}" Foreground="White" FontWeight="Medium" VerticalAlignment="Center" FontSize="16" Margin="5,0,0,0"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"
                               >
                        </TextBlock>
                    </StackPanel>

                    
                    <DockPanel>
                        <Border HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Path=IsCheckingForChanges, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                            <Grid >
                                <ProgressBar IsIndeterminate="True" Height="14" Opacity="0.4"></ProgressBar>
                                <TextBlock Text="{lan:Translate Section=SDSampleView, Key=CheckingForInconsistensiesProgress, UIDesignerValue='Checking for inconsistencies...'}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10" Foreground="#E9E9E9" Margin="8,-3,8,0" />
                            </Grid>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </Border>

            <!-- Move/Copy samples bar -->
            <Border DockPanel.Dock="Top" BorderBrush="#595959" Padding="0,0,0,0" BorderThickness="0,1,0,1" Background="{StaticResource InputHeaderBackgroundRev}" 
                    Visibility="{Binding Path=IsMoveCopyVisible, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}"
                    TextBlock.Foreground="{StaticResource InputHeaderForeground}"  SnapsToDevicePixels="True" >
               
                <DockPanel Margin="0">

                    <Border DockPanel.Dock="Left" BorderThickness="0,0,1,0" BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="1" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>
                            
                            <TextBlock 
                               Text="{lan:Translate Section=SDSampleView, Key=SelectSamplesToMoveOrCopy, UIDesignerValue='Select samples to move or copy to another event'}" 
                               Foreground="White"  
                               VerticalAlignment="Center" 
                               FontSize="13" Margin="8,12,8,12"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"/>
                        </DockPanel>
                       
                    </Border>

                    <Border DockPanel.Dock="Left" BorderThickness="1,0,0,0" BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="2" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" ToolTip="Search on all columns." Margin="8,0,0,0">
                                <TextBlock Text="{lan:Translate Section=SDSampleView, Key=SelectEvent, UIDesignerValue='Select event'}" FontSize="13" LineHeight="12" VerticalAlignment="Center" Margin="0,0,8,0" />
                                
                                <aCtrls:FilteredComboBox x:Name="comboBox1"  FilterFromStart="True"
                                         Height="26" Width="150" Margin="0,0,0,0"
                                         HorizontalAlignment="Right"                                            
                                         ItemsSource="{Binding Path=EventsList}"
                                         SelectedItem="{Binding Path=SelectedEvent, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                         DisplayMemberPath="EventIdAndNameString" OpenOnFocus="False" DropDownWidth="250"
                                         MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"/>
                            </StackPanel>
                        </DockPanel>

                    </Border>

                    <Border DockPanel.Dock="Left" BorderThickness="1,0,1,0" Margin="8,0,0,0"  BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="3" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="8,0,8,0">
                                <!-- Move button -->
                                <Button Width="auto" DockPanel.Dock="Right" Padding="8,3"
                                        Height="26"
                                        HorizontalAlignment="Right"
                                        Style="{StaticResource panelButton}"
                                        Margin="0,0,0,0"
                                        FontSize="14" 
                                        Command="{Binding Path=MoveSamplesCommand}" >
                                    <DockPanel>
                                        <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="15" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/RightArrow.ico" ></Image>
                                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=MoveSamples, UIDesignerValue='Move samples'}" Margin="3,0,6,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13" Foreground="White" />
                                    </DockPanel>
                                </Button>
                                
                                <!-- Copy button -->
                                <Button Width="auto" DockPanel.Dock="Right" Padding="8,3"
                                        Height="26"
                                        HorizontalAlignment="Right"
                                        Style="{StaticResource panelButton}"
                                        Margin="8,0,0,0"
                                        FontSize="14" 
                                        Command="{Binding Path=CopySamplesCommand}" >   
                                    <DockPanel>
                                        <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="15" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/Copy.ico" ></Image>
                                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=CopySamples, UIDesignerValue='Copy samples'}" Margin="3,0,6,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13" Foreground="White" />
                                    </DockPanel>
                                </Button>

                                
                            </StackPanel>
                        </DockPanel>

                    </Border>

                    <StackPanel></StackPanel>

                    <!-- Return button -->
                    <Button DockPanel.Dock="Right" Padding="4,2" 
                            Height="26" Width="26"
                            HorizontalAlignment="Right"
                            Style="{StaticResource panelButton}"
                            Margin="8,0,8,0" SnapsToDevicePixels="True"
                            ToolTip="{lan:Translate Section=SDSampleView, Key=CancelMoveCopyToolTip}"
                            Command="{Binding Path=CloseMoveCopyCommand}" >
                        <DockPanel>
                            <Image Margin="-1,-1,-1,-2" VerticalAlignment="Center" UseLayoutRounding="False" Opacity="0.9" Source="pack://application:,,,/Resources/Images/Window/Close.PNG" ></Image>
                        </DockPanel>
                    </Button>

                    <Border></Border>
                </DockPanel>
            </Border>

            <!-- Update FishLine ages from samples bar -->
            <Border DockPanel.Dock="Top" BorderBrush="#595959" Padding="0,0,0,0" BorderThickness="0,1,0,1" Background="{StaticResource InputHeaderBackgroundRev}" 
                    Visibility="{Binding Path=IsCopyingAgesToFishLineActivated, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}"
                    TextBlock.Foreground="{StaticResource InputHeaderForeground}"  SnapsToDevicePixels="True" >

                <DockPanel Margin="0">

                    <!-- Return button -->
                    <Button DockPanel.Dock="Right" Padding="4,2" 
                            Height="26" Width="26"
                            HorizontalAlignment="Right"
                            Style="{StaticResource panelButton}"
                            Margin="8,0,8,0" SnapsToDevicePixels="True"
                            ToolTip="{lan:Translate Section=SDSampleView, Key=CancelMoveCopyToolTip}"
                            Command="{Binding Path=CloseMoveCopyCommand}" >
                        <DockPanel>
                            <Image Margin="-1,-1,-1,-2" VerticalAlignment="Center" UseLayoutRounding="False" Opacity="0.9" Source="pack://application:,,,/Resources/Images/Window/Close.PNG" ></Image>
                        </DockPanel>
                    </Button>

                    <Border DockPanel.Dock="Left" BorderThickness="0,0,1,0" BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="1" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <TextBlock 
                               Text="{lan:Translate Section=SDSampleView, Key=CopyAgesToFishLineHeader, UIDesignerValue='Select samples to assign ages in FishLine from'}" 
                               Foreground="White" MaxWidth="400" MaxHeight="35"  TextWrapping="Wrap" TextTrimming="CharacterEllipsis"
                               VerticalAlignment="Center" 
                               FontSize="13" Margin="8,8,8,8"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"/>
                        </DockPanel>

                    </Border>

                    <Border DockPanel.Dock="Left" BorderThickness="1,0,1,0" Margin="0,0,0,0"  BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="2" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="0,0,8,0">
                                <!-- Update button -->
                                <Button Width="auto" DockPanel.Dock="Right" Padding="8,3"
                                        Height="26"
                                        HorizontalAlignment="Right"
                                        Style="{StaticResource panelButton}"
                                        Margin="8,0,0,0"
                                        FontSize="14" 
                                        Command="{Binding Path=UpdateAgesInFishLineCommand}" >
                                    <DockPanel>
                                        <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="15" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/Copy.ico" ></Image>
                                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=UpdateAgesInFishlineButton, UIDesignerValue='Update ages in FishLine'}" Margin="3,0,6,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13" Foreground="White" />
                                    </DockPanel>
                                </Button>


                            </StackPanel>
                        </DockPanel>

                    </Border>

                    <DockPanel Margin="8,-1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=SamplesWithAnnotationsVisibleMessage, UIDesignerValue='(Only samples with approved SmartDots annotations are visible below)'}" 
                                   MaxHeight="34"  TextWrapping="Wrap" LineStackingStrategy="BlockLineHeight" LineHeight="15" Foreground="#A8A8A8" TextTrimming="CharacterEllipsis" />
                    </DockPanel>

                </DockPanel>
            </Border>

            <!-- Update scale on samples bar -->
            <Border DockPanel.Dock="Top" BorderBrush="#595959" Padding="0,0,0,0" BorderThickness="0,1,0,1" Background="{StaticResource InputHeaderBackgroundRev}" 
                    Visibility="{Binding Path=IsCopyingScaleToSamplesActivated, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}"
                    TextBlock.Foreground="{StaticResource InputHeaderForeground}"  SnapsToDevicePixels="True" >

                <DockPanel Margin="0">

                    <!-- Return button -->
                    <Button DockPanel.Dock="Right" Padding="4,2" 
                            Height="26" Width="26"
                            HorizontalAlignment="Right"
                            Style="{StaticResource panelButton}"
                            Margin="8,0,8,0" SnapsToDevicePixels="True"
                            ToolTip="{lan:Translate Section=SDSampleView, Key=CancelMoveCopyToolTip}"
                            Command="{Binding Path=CloseMoveCopyCommand}" >
                        <DockPanel>
                            <Image Margin="-1,-1,-1,-2" VerticalAlignment="Center" UseLayoutRounding="False" Opacity="0.9" Source="pack://application:,,,/Resources/Images/Window/Close.PNG" ></Image>
                        </DockPanel>
                    </Button>

                    <Border DockPanel.Dock="Left" BorderThickness="0,0,0,0" BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="1" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <TextBlock 
                               Text="{lan:Translate Section=SDSampleView, Key=SelectSamplesToUpdateScale, UIDesignerValue='Select the samples where the scale is to be updated'}" 
                               Foreground="White"  
                               VerticalAlignment="Center" 
                               FontSize="13" Margin="8,12,0,12"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"/>
                        </DockPanel>

                    </Border>

                    <Border DockPanel.Dock="Left" Margin="18,0,0,0" BorderThickness="1,0,0,0" BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="2" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" ToolTip="Search on all columns." Margin="8,0,0,0">
                                <TextBlock Text="{lan:Translate Section=SDSampleView, Key=ScaleValueHeader, UIDesignerValue='Scale'}" FontSize="13" LineHeight="12" VerticalAlignment="Center" Margin="0,0,8,0" />

                                <TextBox Width="100" Text="{Binding Path=ScaleToBeAssigned, Converter={StaticResource cStringToDouble}}" 
                                         VerticalAlignment="Center" Padding="2,3" VerticalContentAlignment="Center" />
                            </StackPanel>
                        </DockPanel>

                    </Border>

                    <Border DockPanel.Dock="Left" BorderThickness="1,0,1,0" Margin="18,0,0,0"  BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="3" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="0,0,8,0">
                                <!-- Assign button -->
                                <Button Width="auto" DockPanel.Dock="Right" Padding="8,3"
                                        Height="26"
                                        HorizontalAlignment="Right"
                                        Style="{StaticResource panelButton}"
                                        Margin="8,0,0,0"
                                        FontSize="14" 
                                        Command="{Binding Path=AssignScaleToSamplesCommand}" >
                                    <DockPanel>
                                        <Image DockPanel.Dock="Left" Margin="0,0,5,0" Height="15" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/Copy.ico" ></Image>
                                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=UpdateScaleButton, UIDesignerValue='Assign scale to selected samples'}" Margin="3,0,6,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13" Foreground="White" />
                                    </DockPanel>
                                </Button>


                            </StackPanel>
                        </DockPanel>

                    </Border>

                    <DockPanel Margin="8,-1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=SamplesWithFilesVisibleMessage, UIDesignerValue='(Only samples with assigned image files are visible below)'}" TextAlignment="Center"
                                   MaxHeight="34"  TextWrapping="Wrap" LineStackingStrategy="BlockLineHeight" LineHeight="15" Foreground="#A8A8A8" TextTrimming="CharacterEllipsis" />
                    </DockPanel>
                </DockPanel>
            </Border>
            
            <!-- Delete multiple samples samples bar -->
            <Border DockPanel.Dock="Top" BorderBrush="#595959" Padding="0,0,0,0" BorderThickness="0,1,0,1" Background="{StaticResource InputHeaderBackgroundRev}" 
                    Visibility="{Binding Path=IsDeleteMultipleVisible, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" MinHeight="40"
                    TextBlock.Foreground="{StaticResource InputHeaderForeground}"  SnapsToDevicePixels="True" >

                <DockPanel Margin="0">

                    <!-- Return button -->
                    <Button DockPanel.Dock="Right" Padding="4,2" 
                            Height="26" Width="26"
                            HorizontalAlignment="Right"
                            Style="{StaticResource panelButton}"
                            Margin="8,0,8,0" SnapsToDevicePixels="True"
                            ToolTip="{lan:Translate Section=SDSampleView, Key=CancelDeleteMultipleSamplesToolTip}"
                            Command="{Binding Path=CloseDeleteMultipleSamplesCommand}" >
                        <DockPanel>
                            <Image Margin="-1,-1,-1,-2" VerticalAlignment="Center" UseLayoutRounding="False" Opacity="0.9" Source="pack://application:,,,/Resources/Images/Window/Close.PNG" ></Image>
                        </DockPanel>
                    </Button>

                    <Border DockPanel.Dock="Left" BorderThickness="0,0,1,0" BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="1" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <TextBlock 
                               Text="{lan:Translate Section=SDSampleView, Key=SelectSamplesToDelete, UIDesignerValue='Select samples to delete'}" 
                               Foreground="White" MaxWidth="400" MaxHeight="35"  TextWrapping="Wrap" TextTrimming="CharacterEllipsis"
                               VerticalAlignment="Center" 
                               FontSize="13" Margin="8,8,8,8"
                               LineHeight="16" LineStackingStrategy="BlockLineHeight"/>
                        </DockPanel>

                    </Border>

                    <Border DockPanel.Dock="Left" BorderThickness="1,0,1,0" Margin="0,0,0,0"  BorderBrush="#5E5E5E">
                        <DockPanel>
                            <Border DockPanel.Dock="Left" Background="#5E5E5E" >
                                <TextBlock Text="2" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#F9F9F9" />
                            </Border>

                            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Margin="0,0,8,0">
                                <!-- Delete button -->
                                <Button Width="auto" DockPanel.Dock="Right" Padding="8,3"
                                        Height="26"
                                        HorizontalAlignment="Right"
                                        Style="{StaticResource panelButton}"
                                        Margin="8,0,0,0"
                                        FontSize="14" 
                                        Command="{Binding Path=DeleteMultipleSamplesCommand}" >
                                    <DockPanel>
                                        <Image DockPanel.Dock="Left" Margin="2,0,5,0" Height="15" Opacity="1" VerticalAlignment="Center" UseLayoutRounding="True" Source="pack://application:,,,/Resources/Images/Common/Remove.ico" ></Image>
                                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=RemoveSelectedSamples, UIDesignerValue='Delete selected samples'}" Margin="3,0,6,0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13" Foreground="White" />
                                    </DockPanel>
                                </Button>


                            </StackPanel>
                        </DockPanel>

                    </Border>

                    <DockPanel Margin="8,-1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="{lan:Translate Section=SDSampleView, Key=SamplesWithNoAnnotationsVisibleMessage, UIDesignerValue='(Only samples with no Smartdots annotations are visible below)'}" 
                                   MaxHeight="34"  TextWrapping="Wrap" LineStackingStrategy="BlockLineHeight" LineHeight="15" Foreground="#A8A8A8" TextTrimming="CharacterEllipsis" />
                    </DockPanel>

                </DockPanel>
            </Border>

            
            <!-- Bottom bar - to be populated -->
            <Border DockPanel.Dock="Bottom" BorderBrush="LightGray" BorderThickness="0,1,0,0" 
                    Background="{StaticResource InputHeaderBackgroundRev}" TextBlock.Foreground="{StaticResource InputHeaderForeground}"  SnapsToDevicePixels="True">
                <DockPanel Margin="6,6,8,6">

                    <DockPanel DockPanel.Dock="Right" IsEnabled="{Binding Path=IsPopupFeatureActive, Converter={StaticResource cBoolToBoolNegation}}">
                        <Button DockPanel.Dock="Right" Padding="25,3" Margin="8,3,0,3"
                            Style="{StaticResource ResourceKey=btnStandard}"
                            FontSize="14" Content="{lan:Translate Section=SDSampleView, Key=BackToEvents, UIDesignerValue='Back to events'}"
                            IsEnabled="{Binding Path=IsLoading, Converter={StaticResource cBoolToBoolNegation}}"
                            Command="{Binding Path=ReturnToEventsCommand}" >
                            <!-- IsEnabled="{Binding Path=IsDirty}" -->
                        </Button>


                        <!-- Save button -->
                        <Button Width="110" DockPanel.Dock="Right" Padding="25,3" 
                            Style="{StaticResource ResourceKey=btnStandard}"
                            FontSize="14" Content="{lan:Translate Section=Common, Key=Save, UIDesignerValue='Save'}"
                            IsEnabled="{Binding Path=IsMoveCopyVisible, Converter={StaticResource cBoolToBoolNegation}}"
                            Command="{Binding Path=SaveCommand}" >
                            <!-- IsEnabled="{Binding Path=IsDirty}" -->
                        </Button>
                        
                        <StackPanel></StackPanel>
                    </DockPanel>
                   

                    <Border DockPanel.Dock="Left">
                        <Grid Margin="0,-1,0,0" DockPanel.Dock="Left" VerticalAlignment="Center" TextBlock.FontSize="10" TextBlock.LineStackingStrategy="BlockLineHeight" TextBlock.LineHeight="12" >
                            <Grid.Resources>
                                <Style x:Key="tvHideWhenMoveCopyIsVisible" TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsMoveCopyVisible}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>

                                <Style x:Key="tvShowWhenMoveCopyIsVisible" TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsMoveCopyVisible}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="0,0,0,0" Style="{StaticResource tvHideWhenMoveCopyIsVisible}" Text="{lan:Translate Section=ImportFromCSVView, Key=SelectedSamples, UIDesignerValue='Selected samples:'}" VerticalAlignment="Center"  />
                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource tvHideWhenMoveCopyIsVisible}" Text="{Binding Path=SelectedSamplesCount}" VerticalAlignment="Center"  />

                            <TextBlock Grid.Row="0" Grid.Column="0" Margin="0,0,0,0" Style="{StaticResource tvShowWhenMoveCopyIsVisible}" Text="{lan:Translate Section=SDSampleView, Key=ChangeddAnimals, UIDesignerValue='Changed samples:'}" VerticalAlignment="Center"  />
                            <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0,0,0" Style="{StaticResource tvShowWhenMoveCopyIsVisible}" Text="{Binding Path=TotalChangedSamples}" VerticalAlignment="Center"  />

                            <TextBlock Grid.Row="1" Grid.Column="0" Margin="0,0,0,0" Text="{lan:Translate Section=SDSampleView, Key=VisibleSamples, UIDesignerValue='Visible samples:'}" VerticalAlignment="Center"  />
                            <TextBlock Grid.Row="1" Grid.Column="1"  Margin="5,0,0,0" Text="{Binding Path=TotalVisibleSamples}" VerticalAlignment="Center"  />

                            <TextBlock Grid.Row="2" Grid.Column="0" Margin="0,0,0,0" Text="{lan:Translate Section=SDSampleView, Key=TotalSamples, UIDesignerValue='Total samples:'}" VerticalAlignment="Center"  />
                            <TextBlock Grid.Row="2" Grid.Column="1" Margin="5,0,0,0" Text="{Binding Path=TotalSamples}" VerticalAlignment="Center" />
                        </Grid>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=HasSamples}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>


                    <Grid HorizontalAlignment="Center"  Visibility="{Binding Path=HasSamples, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                        <Border  Margin="10,3" BorderBrush="#777777" BorderThickness="1" >
                            <DockPanel Margin="0,0">
                                <Border DockPanel.Dock="Left" ToolTip="{lan:Translate Section=SDEventsView, Key=InfoSorting, UIDesignerValue='Use the SHIFT key to sort by mutiple columns.'}" BorderBrush="LightGray" BorderThickness="0,0,1,0" Background="#D1FFFFFF">
                                    <TextBlock Text="{lan:Translate Section=Common, Key=SortBy, UIDesignerValue='Sort by:'}"   Margin="8,0" FontSize="12" LineHeight="13" LineStackingStrategy="BlockLineHeight" FontWeight="Bold" Foreground="Black" VerticalAlignment="Center"></TextBlock>
                                </Border>

                                <Border Background="#489A9A9A" ToolTip="{Binding Path=SortByColumnNamesString, ElementName=uc, UpdateSourceTrigger=PropertyChanged}">
                                    <TextBlock DockPanel.Dock="Right" VerticalAlignment="Center" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" 
                                           FontSize="12" LineHeight="13" LineStackingStrategy="BlockLineHeight"  
                                           MaxHeight="20" Text="{Binding Path=SortByColumnNamesString, ElementName=uc, UpdateSourceTrigger=PropertyChanged}"
                                   Margin="8,0,8,0" />
                                </Border>

                            </DockPanel>
                        </Border>
                    </Grid>
                    
                    
 

                </DockPanel>
            </Border>

            <!-- No samples added message -->
            <Grid>
                <DockPanel>
                    <Border BorderThickness="1" Panel.ZIndex="5" SnapsToDevicePixels="True"
                                KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">

                        <aCtrls:AncDataGrid x:Name="dataGrid" ItemsSource="{Binding Path=FilteredSDSamplesList}"
                                            Style="{StaticResource defaultDataGridLightStyle}"
                                CanUserAddRows="False" IsSynchronizedWithCurrentItem="False" Background="White"
                                AutoGenerateColumns="False" RowHeaderWidth="0"
                                SelectionMode="Extended" KeyboardNavigation.TabIndex="1" CanUserSortColumns="True" FooterVisibility="Collapsed"
                                CanUserDeleteRows="False" CanUserResizeRows="False" HorizontalGridLinesBrush="Transparent"
                                VerticalGridLinesBrush="LightGray" BorderBrush="LightGray" BorderThickness="0" DockPanel.Dock="Top" RowDetailsVisibilityMode="Collapsed"
                                VirtualizingStackPanel.VirtualizationMode="Recycling" 
                                RowEditEnding="dataGrid_RowEditEnding" 
                                IsReadOnly="{Binding Path=IsGridReadOnly}"
                                SelectionChanged="dataGrid_SelectionChanged"
                                Tag="{Binding Path=DataContext, ElementName=uc}"
                                CellFooterVisibility="Collapsed" 
                                CellFooterBorderStyle="{StaticResource cellBorderStyle}"
                                ColumnHeaderStyle="{StaticResource ResourceKey=defaultColumnLightHeaderStyle}" >
                            
                            <aCtrls:AncDataGrid.ContextMenu>
                                <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={x:Static RelativeSource.Self}}" 
                                         Tag="{Binding Path=PlacementTarget.Tag, RelativeSource={x:Static RelativeSource.Self}}">
                                    <MenuItem Header="{lan:Translate Section=SDSampleView, Key=AddSingleSampleHeader, UIDesignerValue='Add row'}" FontSize="14" Padding="8,2"  Command="{Binding Path=Tag.AddRowCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Style="{StaticResource defaultMenuItem}" >
                                        <MenuItem.Icon>
                                            <Image Width="14" Height="14" Margin="4,2,2,1" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Add.ico" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </aCtrls:AncDataGrid.ContextMenu>
                            <aCtrls:AncDataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource ResourceKey=OverColor2}" Opacity="0.6"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="{StaticResource ResourceKey=OverColor2}"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                                <SolidColorBrush x:Key="disabledField" Color="#FFF0F0F0" />

                                <Style x:Key="lblDisplay" TargetType="{x:Type Label}" BasedOn="{StaticResource ResourceKey=ValidateElementRedBorder}">
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Padding" Value="2,0,2,0" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="ToolTipService.ShowDuration" Value="60000" />

                                    <Style.Triggers>
                                        <Trigger Property="Validation.HasError" Value="False">
                                            <Setter Property="ToolTip" Value="{Binding Path=Content, RelativeSource={RelativeSource Self}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>

                                <Style x:Key="StandardCellStyle" TargetType="{x:Type DataGridCell}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Border x:Name="BorderOuter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                                    <Border x:Name="BorderInner" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}"  Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                        <ContentPresenter x:Name="content"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Border>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style  x:Key="DefaultCellStyle" TargetType="DataGridCell">
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                </Style>

                                <Style  x:Key="IsReadOnlyCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource DefaultCellStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=readOnly}" Value="True">
                                            <Setter Property="Foreground" Value="#B0B0B0"></Setter>
                                            <Setter Property="IsTabStop" Value="False"></Setter>
                                            <Setter Property="Focusable" Value="False"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Data.IsPopupFeatureActive, Source={StaticResource proxyContext}}" Value="True">
                                            <Setter Property="IsTabStop" Value="False"></Setter>
                                            <Setter Property="Focusable" Value="False"></Setter>
                                        </DataTrigger>
                                        
                                    </Style.Triggers>
                                </Style>

                                <Style x:Key="StandardCellCompareSpeciesStyle"  TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource IsReadOnlyCellStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource cObjectEqualsObject}">
                                                    <MultiBinding.Bindings>
                                                        <Binding Path="speciesCode" />
                                                        <Binding Path="Data.Event.speciesCode" Source="{StaticResource proxyContext}"/>
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Background" Value="#FFF4DADC"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>


                                <Style x:Key="StandardCellCompareAreasStyle"  TargetType="{x:Type DataGridCell}"  BasedOn="{StaticResource IsReadOnlyCellStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Value="False">
                                            <DataTrigger.Binding>
                                                <MultiBinding Converter="{StaticResource cStringInHashSet}">
                                                    <MultiBinding.Bindings>
                                                        <Binding Path="DFUArea" />
                                                        <Binding Path="Data.DFUAreasHashSet" Source="{StaticResource proxyContext}"/>
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </DataTrigger.Binding>
                                            <Setter Property="Background" Value="#FFFAC2C5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>

                                <Style x:Key="NoTabStopCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource StandardCellStyle}" >
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                    <Setter Property="Padding" Value="1,0,1,1"/>
                                </Style>

                                <Style x:Key="DisabledCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource StandardCellStyle}" >
                                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                                    <Setter Property="Background" Value="#7FE6E6E6" />
                                    <Setter Property="BorderBrush" Value="#99E6E6E6" />
                                </Style>

                                <Style x:Key="CheckboxCellStyle" TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource StandardCellStyle}" >
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                                </Style>

                            </aCtrls:AncDataGrid.Resources>
                            <aCtrls:AncDataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <EventSetter Event="KeyDown" Handler="KeyDownHandler" />
                                    <Setter Property="FontSize" Value="12" />
                                    <Setter Property="MinHeight" Value="30" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Setter Property="Tag" Value="{Binding Path=DataContext, ElementName=uc}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FFFCF4" Offset="0.0"/>
                                                        <GradientStop Color="#FFFCFAE7" Offset="1.0"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>

                                        <DataTrigger Binding="{Binding Path=ChangeTracker.State}" Value="Modified">
                                            <Setter Property="Background" Value="#3DBAE0F7"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ChangeTracker.State}" Value="Added">
                                            <Setter Property="Background" Value="#83F6DFFC"></Setter>
                                        </DataTrigger>
                                       
                                    </Style.Triggers>
                                </Style>

                            </aCtrls:AncDataGrid.RowStyle>
                            <aCtrls:AncDataGrid.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource StandardCellStyle}" >
                                    <EventSetter Event="PreviewKeyDown" Handler="PreviewKeyDown_Handler" />
                                    <EventSetter Event="PreviewKeyUp" Handler="PreviewKeyUp_Handler" />
                                </Style>
                            </aCtrls:AncDataGrid.CellStyle>

                            <aCtrls:AncDataGrid.Columns>

                                <!-- CheckBox-->
                                <aCtrls:AncDataGridTemplateColumn SortMemberPath="IsSelected" CellStyle="{StaticResource CheckboxCellStyle}" CanUserResize="False"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderCheckbox}" Width="28" MinWidth="28" 
                                                                  Visibility="{Binding Path=Data.IsCheckboxColumnVisible, Source={StaticResource proxyContext}, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Center" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate >
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MouseDown="CheckBox_MouseDown" PreviewMouseDown="CheckBox_PreviewMouseDown" IsThreeState="false" Margin="0,0,0,0"  VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource sCheckBoxDataGrid}" ></CheckBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Delete butto -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource NoTabStopCellStyle}" CanUserResize="False" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderSettings}" MinWidth="30" Width="30"
                                                                   Visibility="{Binding Path=Data.IsPopupFeatureActive, Source={StaticResource proxyContext}, Converter={StaticResource cBoolToVisibility}, ConverterParameter=False}"
                                                                   >
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Center" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding Path=DataContext.DeleteSDSampleItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}" SnapsToDevicePixels="True"
                                                    Style="{StaticResource imageButtonStyle2}" BorderBrush="#E3E3E3" ToolTip="{lan:Translate Section=Common, Key=Remove, UIDesignerValue='Remove'}" Margin="1">
                                                <Button.Content>
                                                    <Image Opacity="0.9" Margin="0" Height="15" VerticalAlignment="Center" HorizontalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Remove.ico" ></Image>
                                                </Button.Content>
                                            </Button>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Edit butto -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource NoTabStopCellStyle}" CanUserResize="False"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" MinWidth="30" Width="30"
                                                                   Visibility="{Binding Path=Data.IsPopupFeatureActive, Source={StaticResource proxyContext}, Converter={StaticResource cBoolToVisibility}, ConverterParameter=False}"
                                                                   >
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Center"  />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Command="{Binding Path=DataContext.EditSDSampleItemCommand, RelativeSource={RelativeSource AncestorType=UserControl}}" CommandParameter="{Binding .}" SnapsToDevicePixels="True" Margin="1"
                                                    Style="{StaticResource imageButtonStyle2}"  BorderBrush="#E3E3E3" ToolTip="{lan:Translate Section=SDSampleView, Key=EditSample, UIDesignerValue='Edit sample'}">
                                                <Button.Content>
                                                    <Image Opacity="0.9" Margin="0" Height="12" VerticalAlignment="Center" HorizontalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/EditPen.ico" ></Image>
                                                </Button.Content>
                                            </Button>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Scale -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="ScalesString" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="60" MinWidth="60"
                                                                  Visibility="{Binding Path=Data.IsCopyingScaleToSamplesActivated, Source={StaticResource proxyContext}, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=ScalesColumnHeader, UIDesignerValue='Scale(s)'}"  LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=ScalesColumnHeader, UIDesignerValue='Scale(s)'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=ScalesString}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- SDFiles -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource DefaultCellStyle}"  CanUserSort="False" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="190" MinWidth="100"
                                                                  Visibility="{Binding Path=Data.IsCopyingAgesToFishLineActivated, Source={StaticResource proxyContext}, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=SDFilesColumnHeader, UIDesignerValue='File(s)'}"  LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=SDFilesColumnHeader, UIDesignerValue='File(s)'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border>
                                                <Border.Style>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=HasSelectedSDFileForAgeTransfer}" Value="False">
                                                                <Setter Property="Background" Value="#48FF000E"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock Text="{Binding Path=SelectedSDFileForAgeTransfer.UIDisplayForAgeTransfer}" ToolTip="{Binding Path=SelectedSDFileForAgeTransfer.UIDisplayForAgeTransfer}" ToolTipService.ShowDuration="30000" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}">
                                                </TextBlock>
                                            </Border>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=SDFilesWithApprovedAnnotations, UpdateSourceTrigger=PropertyChanged}" 
                                                                     TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                     DropDownWidth="300" FilterFromStart="True" 
                                                                     FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                     SelectedItem="{Binding Path=SelectedSDFileForAgeTransfer, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="UIDisplayForAgeTransfer"
                                                                     OpenDropDownOnFilter="True" OpenOnFocus="True" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- SDAnnotations -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource DefaultCellStyle}" CanUserSort="False" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="190" MinWidth="100"
                                                                  Visibility="{Binding Path=Data.IsCopyingAgesToFishLineActivated, Source={StaticResource proxyContext}, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=SDAnnotationsColumnHeader, UIDesignerValue='Annotation(s)'}"  LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=SDAnnotationsColumnHeader, UIDesignerValue='Annotation(s)'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border>
                                                <Border.Style>
                                                    <Style TargetType="{x:Type Border}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=SelectedSDFileForAgeTransfer.HasSelectedSDAnnotationForAgeTransfer}" Value="False">
                                                                <Setter Property="Background" Value="#48FF000E"></Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Path=HasSelectedSDFileForAgeTransfer}" Value="False">
                                                                <Setter Property="Background" Value="#48FF000E"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <TextBlock Text="{Binding Path=SelectedSDFileForAgeTransfer.SelectedSDAnnotationForAgeTransfer.UIDisplayForAgeTransfer}" 
                                                           ToolTip="{Binding Path=SelectedSDFileForAgeTransfer.SelectedSDAnnotationForAgeTransfer.UIDisplayForAgeTransfer}" 
                                                           ToolTipService.ShowDuration="30000"
                                                           VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}">
                                                </TextBlock>
                                            </Border>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=SelectedSDFileForAgeTransfer.SDAnnotationsApproved, UpdateSourceTrigger=PropertyChanged}" 
                                                                     TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                     DropDownWidth="300" FilterFromStart="True" 
                                                                     FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                     SelectedItem="{Binding Path=SelectedSDFileForAgeTransfer.SelectedSDAnnotationForAgeTransfer, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="UIDisplayForAgeTransfer"
                                                                     OpenDropDownOnFilter="True" OpenOnFocus="True" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- File count (Images) -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="SDFile.Count" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderImages}" Width="30" MinWidth="30" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Images'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeaderToolTip="{lan:Translate Section=Common, Key=Images, UIDesignerValue='Images'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Background="Transparent" DataContext="{Binding}" ToolTipService.ShowDuration="30000" MouseLeftButtonDown="ImagesBorder_MouseLeftButtonDown" >
                                                <Border.ToolTip>
                                                    <ToolTip DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" Background="White" Padding="0" MaxHeight="700" MaxWidth="800">
                                                        <local:OtolithImagesPreview SDFiles="{Binding Path=SDFile, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                                    </ToolTip>
                                                </Border.ToolTip>
                                                <TextBlock Text="{Binding Path=SDFile.Count}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}">
                                                </TextBlock>
                                            </Border>
                                           
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Animal Id -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="animalId" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}"  Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|AnimalId'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=AnimalId, UIDesignerValue='Animal Id'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=AnimalId, UIDesignerValue='Animal Id'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"
                                                       aBeh:HighlightTermBehavior.Text="{Binding Path=animalId}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       ></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=animalId}" Style="{StaticResource tbGridCellItem}"  FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized" ></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Cruise -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="cruise" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownCruise}" Width="75" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Cruise'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=Cruise, UIDesignerValue='Cruise'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=Cruise, UIDesignerValue='Cruise'}"  />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=cruise}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=cruise}" Style="{StaticResource tbGridCellItem}"  FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized" MaxLength="20"></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Trip -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="trip" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownTrip}" Width="75" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Trip'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=Trip, UIDesignerValue='Trip'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=Trip, UIDesignerValue='Trip'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=trip}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=trip}" Style="{StaticResource tbGridCellItem}"  FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized"  MaxLength="10"></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Station -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="station" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownStation}" Width="75" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Station'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=Station, UIDesignerValue='Station'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=Station, UIDesignerValue='Station'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=station}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=station}" Style="{StaticResource tbGridCellItem}" FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized" MaxLength="6"></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Catch Date -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="catchDate" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="110" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|CatchDate'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=CatchDate, UIDesignerValue='Catch date'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=CatchDate, UIDesignerValue='Catch date'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock aBeh:HighlightTermBehavior.Text="{Binding Path=catchDate, StringFormat='{}{0:dd-MM-yyyy}'}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}">
                                                <TextBlock.ToolTip>
                                                    <ToolTip Content="{Binding Path=catchDate}" ContentStringFormat="{}{0:dd-MM-yy HH:mm:ss}" />
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:DateTimePickerControl Value="{Binding Path=catchDate, Mode=TwoWay, ValidatesOnDataErrors=True}" 
                                                                  Style="{StaticResource dateTimePickerStyle}" Format="dd-MM-yyyy HH:mm:ss" IsTimePickerVisible="True"
                                                                  KeyboardNavigation.TabIndex="11" Padding="0,0,0,0" Margin="0" BorderBrush="Transparent" 
                                                                  ErrorInvalidKey="Ugyldig værdi" ErrorLessThan="Værdien skal være mindre end " ErrorOverstrike="Værdier kan overskrives, ikke slettes"
                                                                  InputStyle="{StaticResource dateTimePickerInputStyle}" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- DFU Area-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource StandardCellCompareAreasStyle}" SortMemberPath="DFUArea"   HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownDFUArea}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|DFUArea'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=Area, UIDesignerValue='Area'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=DFUAre, UIDesignerValue='DFU Are'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=DFUArea}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.DFUAreas, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True" 
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedValue="{Binding Path=DFUArea}" SelectedValuePath="DFUArea"
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Statistical Rectangle-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="statisticalRectangle" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownStatisticalRectangle}" Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|StatisticalRectangle'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=StatisticalRectangleShort, UIDesignerValue='Stat. Rec.'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=StatisticalRectangle, UIDesignerValue='Statistical Rectangle'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=statisticalRectangle}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.StatisticalRectangles, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedValue="{Binding Path=statisticalRectangle}" SelectedValuePath="statisticalRectangle"
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Animal Species -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource StandardCellCompareSpeciesStyle}" SortMemberPath="speciesCodePlaceholder" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}"  Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Species'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=AddEditSDEventView, Key=Species, UIDesignerValue='Species'}" LowerHeaderToolTip="{lan:Translate Section=AddEditSDEventView, Key=Species, UIDesignerValue='Species'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"
                                                       aBeh:HighlightTermBehavior.Text="{Binding Path=speciesCode}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       ></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.Species, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True" 
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedValue="{Binding Path=speciesCode}" SelectedValuePath="speciesCode"
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Stock-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="L_Stock.stockCode" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownStock}" Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|StockId'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=Stock, UIDesignerValue='Stock'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=Stock, UIDesignerValue='Stock'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=L_Stock.stockCode}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.Stocks, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedItem="{Binding Path=L_Stock, UpdateSourceTrigger=PropertyChanged}"
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Fish length -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="fishLengthMM"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownLength}" Width="85" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Length'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=ColumnLength, UIDesignerValue='Length'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=ColumnLength, UIDesignerValue='Length'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=fishLengthMM}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=fishLengthMM, Converter={StaticResource ResourceKey=cStringToInt}}" Style="{StaticResource tbGridCellItem}" FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized" ></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>
                                
                                <!-- Fish Weight -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="fishWeightG"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="70" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Weight'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=ColumnWeight, UIDesignerValue='Weight'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=ColumnWeight, UIDesignerValue='Weight'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock aBeh:HighlightTermBehavior.Text="{Binding Path=fishWeightG, StringFormat='{}{0:0.####}'}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}" ToolTip="{Binding Path=fishWeightG}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>

                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=fishWeightG, Converter={StaticResource ResourceKey=cStringToDecimal}, ConverterParameter=4}" Style="{StaticResource tbGridCellItem}"  FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized" ></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Sex Code -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="sexCode" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownSex}" Width="50" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|SexCode'}" >
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=Sex, UIDesignerValue='Sex'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=SexCode, UIDesignerValue='Sex Code'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=sexCode}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>

                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate >
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.SexCodes, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedValue="{Binding Path=sexCode}" SelectedValuePath="sexCode"
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False"
                                                                 />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Maturity -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="Maturity.UIDisplay"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownMaturity}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Maturity'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=MaturityID, UIDesignerValue='Maturity'}" LowerHeader="{lan:Translate Section=SDSampleView, Key=MaturityID, UIDesignerValue='Mat.'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Maturity.UIDisplay}" ToolTip="{Binding Path=Maturity.FullUIDisplay}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.MaturityList, Source={StaticResource proxyContext}}" DisplayMemberPath="FullUIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="420" FilterFromStart="False"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedItem="{Binding Path=Maturity, UpdateSourceTrigger=PropertyChanged}" 
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Otolith Reading Remark-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="L_OtolithReadingRemark.otolithReadingRemark"   HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownOtolithReadingRemark}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|OtolithReadingRemark'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=OtolithReadingRemarkShort, UIDesignerValue='Otolith'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=OtolithReadingRemark, UIDesignerValue='Otolith reading remark'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=L_OtolithReadingRemark.otolithReadingRemark}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>

                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.OtolithReadingRemarks, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedItem="{Binding Path=L_OtolithReadingRemark, UpdateSourceTrigger=PropertyChanged}" 
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Preparation Method -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="L_SDPreparationMethod.preparationMethod"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownPrepMethod}" Width="50" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|PreparationMethod'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=PreparationMethodShort, UIDesignerValue='Prep.'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=PreparationMethod, UIDesignerValue='Preparation Method'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=L_SDPreparationMethod.preparationMethod}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.PreparationMethods, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedItem="{Binding Path=L_SDPreparationMethod, UpdateSourceTrigger=PropertyChanged}" 
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>
                                
                                <!-- Light Type -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="L_SDLightType.lightType"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownLightType}" Width="50" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|LightType'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=LightTypeShort, UIDesignerValue='Light'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=LightType, UIDesignerValue='Light Type'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=L_SDLightType.lightType}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.LightTypes, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedItem="{Binding Path=L_SDLightType, UpdateSourceTrigger=PropertyChanged}" 
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Otolith Description-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="L_SDOtolithDescription.otolithDescription"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownOtolithDescription}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|OtolithDescription'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>
                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=OtolithDescriptionShort, UIDesignerValue='Otolith D.'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=OtolithDescription, UIDesignerValue='Otolith Description'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=L_SDOtolithDescription.otolithDescription}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.OtolithDescriptions, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedItem="{Binding Path=L_SDOtolithDescription, UpdateSourceTrigger=PropertyChanged}" 
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Edge Structure-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="edgeStructure"   HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownEdgeStructure}" Width="60" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|EdgeStructure'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSelectAnimalsView, Key=EdgeStructureShort, UIDesignerValue='Edge'}" LowerHeaderToolTip="{lan:Translate Section=SDSelectAnimalsView, Key=EdgeStructure, UIDesignerValue='Edge structure'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=edgeStructure}" VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>

                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.EdgeStructures, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedValue="{Binding Path=edgeStructure}" SelectedValuePath="edgeStructure"
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Latitude-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="latitude"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Latitude'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=Common, Key=Latitude, UIDesignerValue='Latitude'}" LowerHeaderToolTip="{lan:Translate Section=Common, Key=Latitude, UIDesignerValue='Latitude'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock aBeh:HighlightTermBehavior.Text="{Binding Path=latitude, StringFormat=N6}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}" ToolTip="{Binding Path=latitude}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>

                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=latitude, Converter={StaticResource ResourceKey=cStringToDouble}}" Style="{StaticResource tbGridCellItem}"  FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized" ></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                                <!-- Longitude-->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="longitude"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Longitude'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=Common, Key=Longitude, UIDesignerValue='Longitude'}" LowerHeaderToolTip="{lan:Translate Section=Common, Key=Longitude, UIDesignerValue='Longitude'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock aBeh:HighlightTermBehavior.Text="{Binding Path=longitude, StringFormat=N6}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}" ToolTip="{Binding Path=longitude}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>

                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=longitude, Converter={StaticResource ResourceKey=cStringToDouble}}" Style="{StaticResource tbGridCellItem}"  FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized" ></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>
                                    
                                
                                
                                <!-- Maturity Index Method -->
                                <!--<aCtrls:AncDataGridTemplateColumn SortMemberPath="maturityIndexMethod"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="60" >
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Center" LowerHeader="{lan:Translate Section=SDSampleView, Key=MaturityIndexMethodShort, UIDesignerValue='Method'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=MaturityIndexMethod, UIDesignerValue='Maturity Index Method'}"/>
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=maturityIndexMethod}" LineStackingStrategy="BlockLineHeight" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <aCtrls:FilteredComboBox ItemsSource="{Binding Path=Data.MaturityIndexMethods, Source={StaticResource proxyContext}}" DisplayMemberPath="UIDisplay"
                                                                 TabOnEnter="False"   MinimumSearchLength="1" IsEditable="True" IsTextSearchCaseSensitive="False"
                                                                 DropDownWidth="300" FilterFromStart="True"
                                                                 FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="FilteredComboBox_Initialized"
                                                                 SelectedValue="{Binding Path=maturityIndexMethod}" SelectedValuePath="maturityIndexMethod"
                                                                 OpenDropDownOnFilter="False" OpenOnFocus="False" />
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>-->


                                <!-- Created By -->
                                <aCtrls:AncDataGridTemplateColumn  CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="createdByUserName"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDropDownCreatedBy}" Width="85" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|CreatedBy'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=SDSampleView, Key=CreatedBy, UIDesignerValue='Created By'}" LowerHeaderToolTip="{lan:Translate Section=SDSampleView, Key=CreatedBy, UIDesignerValue='Created By'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock aBeh:HighlightTermBehavior.Text="{Binding Path=createdByUserName}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>
                                
                                <!-- Created Time -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="createdTime" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Created'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=Common, Key=Created, UIDesignerValue='Created'}" LowerHeaderToolTip="{lan:Translate Section=Common, Key=Created, UIDesignerValue='Created'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock aBeh:HighlightTermBehavior.Text="{Binding Path=CreatedTimeLocal, StringFormat='{}{0:dd-MM-yyyy}'}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}" >
                                                <TextBlock.ToolTip>
                                                    <ToolTip Content="{Binding Path=CreatedTimeLocal}" ContentStringFormat="{}{0:dd-MM-yy HH:mm:ss}" />
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>
                                <!-- Modified Time -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="modifiedTime" HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="80" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Modified'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=Common, Key=Modified, UIDesignerValue='Modified'}" LowerHeaderToolTip="{lan:Translate Section=Common, Key=Modified, UIDesignerValue='Modified'}" />
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock aBeh:HighlightTermBehavior.Text="{Binding Path=ModifiedTimeLocal, StringFormat='{}{0:dd-MM-yyyy}'}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}">
                                                <TextBlock.ToolTip>
                                                    <ToolTip Content="{Binding Path=ModifiedTimeLocal}" ContentStringFormat="{}{0:dd-MM-yy HH:mm:ss}" />
                                                </TextBlock.ToolTip>
                                            </TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                </aCtrls:AncDataGridTemplateColumn>
                                    
                                <!-- Comments -->
                                <aCtrls:AncDataGridTemplateColumn CellStyle="{StaticResource IsReadOnlyCellStyle}" SortMemberPath="comments"  HeaderTemplate="{StaticResource ResourceKey=GridColumnHeaderDefault}" Width="150" Visibility="{Binding Path=Data.ColumnVisivilityAny, Source={StaticResource proxyContext}, Converter={StaticResource ResourceKey=cColumnMapToVisibility}, ConverterParameter='SDSamples|Comments'}">
                                    <aCtrls:AncDataGridTemplateColumn.Header>

                                        <dGrid:DoubleColumnHeader UpperHeader="" LowerHeaderHorizontalAlignment="Left" LowerHeader="{lan:Translate Section=Common, Key=Comments, UIDesignerValue='Comments'}" LowerHeaderToolTip="{lan:Translate Section=Common, Key=Comments, UIDesignerValue='Comments'}"/>
                                    </aCtrls:AncDataGridTemplateColumn.Header>
                                    <aCtrls:AncDataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock aBeh:HighlightTermBehavior.Text="{Binding Path=comments}"
                                                       aBeh:HighlightTermBehavior.HighlightText="{Binding Path=Data.SearchString, Mode=OneWay, Source={StaticResource proxyContext}}"
                                                       VerticalAlignment="Center" Style="{StaticResource tvGridCellItem}" ToolTip="{Binding Path=comments}"></TextBlock>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellTemplate>

                                    <aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Path=comments}" Style="{StaticResource tbGridCellItem}" FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}" Initialized="TextBox_Initialized" ></TextBox>
                                        </DataTemplate>
                                    </aCtrls:AncDataGridTemplateColumn.CellEditingTemplate>
                                </aCtrls:AncDataGridTemplateColumn>

                            </aCtrls:AncDataGrid.Columns>
                        </aCtrls:AncDataGrid>

                        <!-- Show hide grid -->
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=HasSamples}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                    </Border>
                </DockPanel>

                <Border DockPanel.Dock="Top" Visibility="{Binding Path=IsAddingSamplesFromFishline, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" Margin="0,30,0,0"
                         HorizontalAlignment="Center" VerticalAlignment="Top" Background="White" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True">
                    <StackPanel Orientation="Vertical" Margin="15,7,15,10">
                        <TextBlock Text="{Binding Path=AddingSamplesFromFishlineLoadingText}" FontWeight="Medium" FontSize="15" Margin="0,0,0,4" />
                        <ProgressBar IsIndeterminate="True" Height="10" />
                    </StackPanel>
                </Border>

                <Border DockPanel.Dock="Top" Visibility="{Binding Path=IsLoading, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" Margin="0,40,0,0"
                        HorizontalAlignment="Center" VerticalAlignment="Top" Background="White" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True">
                    <StackPanel Orientation="Vertical" Margin="15,7,15,10">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="{lan:Translate Section=Common, Key=Loading, UIDesignerValue='Loading...'}" FontWeight="Medium" FontSize="14" Margin="0,0,0,4" />
                        </StackPanel>
                        <ProgressBar IsIndeterminate="True" Height="10" />
                    </StackPanel>

                </Border>
            </Grid>

        </DockPanel>
    </Border>
</UserControl>
