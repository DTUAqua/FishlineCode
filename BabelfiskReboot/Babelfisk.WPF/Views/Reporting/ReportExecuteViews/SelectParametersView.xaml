<UserControl x:Class="Babelfisk.WPF.Views.Reporting.ReportExecuteViews.SelectParametersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ac="clr-namespace:Anchor.Core.Controls;assembly=Anchor.Core.Controls"
             xmlns:aBeh="clr-namespace:Anchor.Core.Controls.Statics;assembly=Anchor.Core.Controls"
             mc:Ignorable="d" x:Name="uc"
             d:DesignHeight="300" d:DesignWidth="600">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Anchor.Core.Controls;component/Themes/FlatStyleComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Anchor.Core.Controls;component/Themes/DropDownListBox.xaml" />
                
                <ResourceDictionary>
                    <Style x:Key="sHeader" TargetType="{x:Type TextBlock}">
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="FontSize" Value="14" />
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"  />
            <RowDefinition Height="*" />
            <RowDefinition Height="1" />
            <RowDefinition x:Name="rowScript" >
                <RowDefinition.Style>
                    <Style TargetType="{x:Type RowDefinition}">
                        <Setter Property="Height" Value="Auto" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsInTestMode}" Value="True">
                                <Setter Property="Height" Value="150" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </RowDefinition.Style>
            </RowDefinition>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border Background="WhiteSmoke" BorderThickness="0,0,0,1" BorderBrush="LightGray" SnapsToDevicePixels="True">
            <TextBlock Margin="10" FontSize="14" Text="Der er brug for en eller flere parametre til rapporten, vælg venligst parametrene nedenfor." TextWrapping="Wrap" />
        </Border>

        <Border  Grid.Row="1" Background="White">
            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" KeyboardNavigation.IsTabStop="False" >
                <ItemsControl Margin="10,6,10,14" HorizontalAlignment="Center" ItemsSource="{Binding Path=Parameters}" KeyboardNavigation.IsTabStop="False" >
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Grid.IsSharedSizeScope="True" Orientation="Vertical" KeyboardNavigation.IsTabStop="False" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0,8,0,0" KeyboardNavigation.IsTabStop="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="A" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="B" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="C" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="D" MinWidth="100" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="E" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Tag="{Binding Path=DataContext, ElementName=uc}" KeyboardNavigation.TabNavigation="None" KeyboardNavigation.IsTabStop="False">
                                    <StackPanel.ToolTip>
                                        <ToolTip DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" Tag="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                    Visibility="{Binding Path=Tag.IsInTestMode, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ToolTip}}, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True}">
                                                <TextBlock Text="Type:" Margin="0,0,5,0" Style="{StaticResource sHeader}" />

                                                <TextBlock VerticalAlignment="Center">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource sHeader}">
                                                            <Setter Property="Text" Value="" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=Parameter.SelectionMode}" Value="CheckBoxList">
                                                                    <Setter Property="Text" Value="multi-" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>

                                                <TextBlock VerticalAlignment="Center">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource sHeader}">
                                                            <Setter Property="Text" Value="{Binding Path=Parameter.ReturnType}" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=Parameter.ReturnType}" Value="Integer">
                                                                    <Setter Property="Text" Value="integer" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=Parameter.ReturnType}" Value="Decimal">
                                                                    <Setter Property="Text" Value="decimal" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=Parameter.ReturnType}" Value="String">
                                                                    <Setter Property="Text" Value="streng" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=Parameter.ReturnType}" Value="Boolean">
                                                                    <Setter Property="Text" Value="boolean" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </StackPanel>
                                        </ToolTip>
                                    </StackPanel.ToolTip>
                                    <TextBlock Grid.Column="0" Text="{Binding Path=Parameter.DisplayName}" FontWeight="Medium" Style="{StaticResource sHeader}" />

                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Left" Visibility="{Binding Path=DataContext.IsInTestMode, ElementName=uc, Mode=OneWay, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True}">
                                        <TextBlock Margin="5,0,0,0" Text="(" Style="{StaticResource sHeader}" FontSize="11" />
                                        <TextBlock Text="{Binding Path=Parameter.ParameterName}" Style="{StaticResource sHeader}" FontSize="11" />
                                        <TextBlock Text=")" Style="{StaticResource sHeader}" FontSize="11" />
                                    </StackPanel>

                                </StackPanel>

                                <TextBlock Grid.Column="2" Text="" Margin="3,0,0,0" FontWeight="Medium" Style="{StaticResource sHeader}" />

                                <!-- Input control -->
                                <Border Grid.Column="3" Margin="10,0,10,0" VerticalAlignment="Center" KeyboardNavigation.IsTabStop="False" >
                                    <Border.Resources>
                                        <!-- Standard value input -->
                                        <ControlTemplate x:Key="templateValue" TargetType="{x:Type Control}">
                                            <Grid>
                                                <TextBox x:Name="tbInput" Tag="{Binding}" Text="{Binding Path=InternalValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" 
                                                      LostFocus="tbInput_LostFocus" 
                                                     MinWidth="100" 
                                                     aBeh:FocusExtension.IsFocused="{Binding Path=HasInitialFocus, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}"
                                                     aBeh:FocusExtension.SelectAllOnFocus="True"
                                                     Height="{Binding Path=TextBoxHeight, Mode=OneWay}" FontSize="14" Padding="3,3,3,3">
                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}">
                                                            <Setter Property="AcceptsReturn" Value="False" />
                                                            <Setter Property="Padding" Value="3,0,3,0" />
                                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=IsTextBoxMultiline, Mode=OneWay}" Value="True">
                                                                    <Setter Property="AcceptsReturn" Value="True" />
                                                                    <Setter Property="Padding" Value="3,3,3,3" />
                                                                    <Setter Property="VerticalContentAlignment" Value="Top" />
                                                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=HasTextBoxMaxLength, Mode=OneWay}" Value="True">
                                                                    <Setter Property="MaxLength" Value="{Binding Path=TextBoxMaxLength, Mode=OneWay}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                                
                                                <!-- Show how many characters are left, if max character count is used. -->
                                                <Border HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,3,2" IsHitTestVisible="False" Opacity="0.6">
                                                    <Border.Style>
                                                        <Style TargetType="{x:Type Border}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=HasTextBoxMaxLength, Mode=OneWay}" Value="True">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Border.Style>
                                                    <StackPanel Orientation="Horizontal" TextBlock.FontSize="8">
                                                        <TextBlock Text="{Binding Path=Text.Length, ElementName=tbInput, Mode=OneWay}" />
                                                        <TextBlock Text="/" />
                                                        <TextBlock Text="{Binding Path=TextBoxMaxLength, Mode=OneWay}" />
                                                    </StackPanel>
                                                </Border>
                                            </Grid>
                                            
                                        </ControlTemplate>

                                        <!-- File selection  -->
                                        <ControlTemplate x:Key="templateFile" TargetType="{x:Type Control}">
                                            <DockPanel>
                                                <Button x:Name="btnBrowse" DockPanel.Dock="Right"  Margin="3,0,0,0" Template="{StaticResource ResourceKey=imageButton}" Command="{Binding Path=BrowseCommand}" ToolTip="Vælg fil" >
                                                    <Border Margin="20,1,20,1">
                                                        <TextBlock Text="Browse" FontSize="14" VerticalAlignment="Center" />
                                                    </Border>
                                                </Button>

                                                <TextBox x:Name="tbInput" Tag="{Binding}" Text="{Binding Path=InternalValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True}" 
                                                         LostFocus="tbInput_LostFocus" 
                                                         MinWidth="250"
                                                     aBeh:FocusExtension.IsFocused="{Binding Path=HasInitialFocus, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}"
                                                     aBeh:FocusExtension.SelectAllOnFocus="True"
                                                     Height="{Binding Path=TextBoxHeight, Mode=OneWay}" FontSize="14" Padding="3,3,3,3">
                                                    <TextBox.Style>
                                                        <Style TargetType="{x:Type TextBox}">
                                                            <Setter Property="AcceptsReturn" Value="False" />
                                                            <Setter Property="Padding" Value="3,0,3,0" />
                                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                                                        </Style>
                                                    </TextBox.Style>
                                                </TextBox>
                                            </DockPanel>

                                        </ControlTemplate>

                                        <!-- Single list selection  -->
                                        <ControlTemplate x:Key="templateSingleList" TargetType="{x:Type Control}">
                                            <DockPanel>
                                                <Button Template="{StaticResource imageButton}" KeyboardNavigation.IsTabStop="False" DockPanel.Dock="Right"  Command="{Binding Path=RefreshCommand}" Margin="2,0,0,0" Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" ToolTip="Opdater liste" >
                                                    <Image Height="13" Margin="3,3,3,2" HorizontalAlignment="Center" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Refresh.ico" />
                                                </Button>

                                                <ComboBox x:Name="cbxInput" Background="White" Height="26" FontSize="14" MinWidth="250" VerticalContentAlignment="Center" Tag="{Binding}" 
                                                  SelectionChanged="cbxInput_SelectionChanged" BorderBrush="LightGray" Style="{StaticResource ComboBoxFlatStyle}" aBeh:FocusExtension.IsFocused="{Binding Path=HasInitialFocus, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}"
                                                  ItemsSource="{Binding Path=Values}" DisplayMemberPath="DisplayName" SelectedValuePath="Value" SelectedValue="{Binding Path=InternalValue}"
                                                  />
                                            </DockPanel>

                                        </ControlTemplate>

                                        <!-- Multi list selection  -->
                                        <ControlTemplate x:Key="templateMultiList" TargetType="{x:Type Control}">

                                            <DockPanel>
                                                <Button Template="{StaticResource imageButton}" KeyboardNavigation.IsTabStop="False" DockPanel.Dock="Right"  Command="{Binding Path=RefreshCommand}" Margin="2,0,0,0" Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"  ToolTip="Opdater liste" >
                                                    <Image Height="13" Margin="3,3,3,2" HorizontalAlignment="Center" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Refresh.ico" />
                                                </Button>

                                                <ac:DropDownListBox x:Name="mcbxInput" Tag="{Binding}" Margin="0,0,0,0" MinWidth="250" Background="#FFFDFDFD" BorderBrush="LightGray"  SelectAllText="Vælg alle"  IsSelectAllVisible="True" 
                                                            TextBlock.FontSize="14" ItemsSource="{Binding Path=Values, Mode=OneWay}" WaterMark="Vælg en eller flere..."
                                                            DropDownHeight="300" Height="26" OnOpenChanged="mcbxInput_OnOpenChanged" DropDownWidth="300" aBeh:FocusExtension.IsFocused="{Binding Path=HasInitialFocus, Mode=OneTime, UpdateSourceTrigger=PropertyChanged}"
                                                                    Style="{StaticResource FlatStyleDropDownListBox}"
                                                            IsCheckedValue="IsChecked" ItemDisplayProperty="DisplayName" OpenOnFocus="False"  >
                                                   
                                                    <ac:DropDownListBox.HeaderItemsTemplate>
                                                        <DataTemplate>
                                                            <Border DataContext="{Binding Path=DataContext, ElementName=mcbxInput}">
                                                                <Border.Style>
                                                                    <Style TargetType="{x:Type Border}">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding Path=HasReferencedParameter}" Value="True">
                                                                                <Setter Property="Visibility" Value="Visible" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </Border.Style>
                                                                <CheckBox Margin="5,2,4,4" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                                                          IsChecked="{Binding Path=FilterByReferencedParameter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                                    <StackPanel Orientation="Horizontal" Margin="0,-2,0,0" VerticalAlignment="Center">
                                                                        <TextBlock Text="Vis kun valgte værdier fra "  />
                                                                        <TextBlock Text="{Binding Path=ReferencedParameter.Parameter.DisplayName, Mode=OneWay}"  />
                                                                    </StackPanel>
                                                                </CheckBox>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ac:DropDownListBox.HeaderItemsTemplate>
                                                    
                                                    <ac:DropDownListBox.ListBoxItemTemplate>
                                                        <DataTemplate>
                                                            <Border>
                                                                <CheckBox Margin="4,2,4,2" IsHitTestVisible="False" VerticalAlignment="Center" VerticalContentAlignment="Center"
                                                                          IsChecked="{Binding Path=IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.TabNavigation="None" >
                                                                    <StackPanel Orientation="Horizontal" Margin="0,-1,0,0" VerticalAlignment="Center">
                                                                        <TextBlock Text="{Binding Path=DisplayName, Mode=OneWay}"  />
                                                                    </StackPanel>
                                                                </CheckBox>
                                                            </Border>
                                                        </DataTemplate>
                                                    </ac:DropDownListBox.ListBoxItemTemplate>
                                                </ac:DropDownListBox>

                                            </DockPanel>
                                        </ControlTemplate>
                                    </Border.Resources>
                                    <Control x:Name="ctrlInput" KeyboardNavigation.IsTabStop="False" >
                                        <Control.Style>
                                            <Style TargetType="{x:Type Control}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Parameter.ParameterType}" Value="Value">
                                                        <Setter Property="Template" Value="{StaticResource templateValue}"  />
                                                    </DataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=Parameter.ParameterType}" Value="SQL"  />
                                                            <Condition Binding="{Binding Path=Parameter.SelectionMode}" Value="DropDownList"  />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Template" Value="{StaticResource templateSingleList}"  />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=Parameter.ParameterType}" Value="SQL"  />
                                                            <Condition Binding="{Binding Path=Parameter.SelectionMode}" Value="CheckBoxList"  />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Template" Value="{StaticResource templateMultiList}"  />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=Parameter.ParameterType}" Value="List"  />
                                                            <Condition Binding="{Binding Path=Parameter.SelectionMode}" Value="DropDownList"  />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Template" Value="{StaticResource templateSingleList}"  />
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Path=Parameter.ParameterType}" Value="List"  />
                                                            <Condition Binding="{Binding Path=Parameter.SelectionMode}" Value="CheckBoxList"  />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Template" Value="{StaticResource templateMultiList}"  />
                                                    </MultiDataTrigger>

                                                    <DataTrigger Binding="{Binding Path=Parameter.ParameterType}" Value="File">
                                                        <Setter Property="Template" Value="{StaticResource templateFile}"  />
                                                    </DataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Control.Style>

                                    </Control>
                                </Border>

                                <Border Grid.Column="3" Visibility="{Binding Path=IsLoading, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True}" 
                                    HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ProgressBar Height="8" Width="100" IsIndeterminate="True" />
                                </Border>
                                
                                <TextBlock Grid.Column="4" Text="*" ToolTip="Feltet er obligatorisk" FontSize="12" VerticalAlignment="Center" Foreground="Gray"
                                           Margin="0,3,0,0" HorizontalAlignment="Left" Visibility="{Binding Path=Parameter.IsOptional, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=False}" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
          
        </Border>

        <GridSplitter Grid.Row="2" KeyboardNavigation.TabNavigation="None" Panel.ZIndex="1000" KeyboardNavigation.IsTabStop="False"  Margin="0,-3" BorderThickness="0,3" BorderBrush="Transparent" Background="Transparent"  SnapsToDevicePixels="True" ResizeDirection="Rows" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ></GridSplitter>

        <Border Grid.Row="3" Visibility="{Binding Path=IsInTestMode, Mode=OneWay, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True}">
            <TextBox Text="{Binding Path=Statement, ValidatesOnDataErrors=True, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Background="WhiteSmoke"
                     TabIndex="10" AcceptsReturn="True" BorderThickness="0,1,0,1" IsReadOnly="True" TextWrapping="Wrap" Padding="3,3,3,3"
                     ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Auto" ></TextBox>
        </Border>

        <Border Grid.Row="4" Background="{StaticResource InputHeaderBackground}" BorderThickness="0,1,0,0" Margin="0,0,0,0" BorderBrush="LightGray" SnapsToDevicePixels="True" >
            <DockPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="6" TextBlock.FontSize="14">
                    <Button IsDefault="True" Command="{Binding Path=OKCommand}" Content="OK" Width="100"  Template="{StaticResource ResourceKey=standardButton}"></Button>
                    <Button Command="{Binding Path=CancelCommand}" Content="Fortryd" Width="100" Margin="5,0,0,0"  Template="{StaticResource ResourceKey=standardButton}"></Button>
                </StackPanel>

                <DockPanel x:Name="dpErrorMessage" Grid.Row="1" Margin="10,0,4,0" >
                    <TextBlock Margin="5" Visibility="{Binding Path=HasErrors, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True}" VerticalAlignment="Center" TextAlignment="Left"
                       Foreground="{StaticResource ErrorForeground}"  FontSize="12" Text="{Binding Path=Error}" LineStackingStrategy="BlockLineHeight" LineHeight="13" TextWrapping="Wrap" ></TextBlock>
                </DockPanel>


            </DockPanel>

        </Border >
    </Grid>
</UserControl>
