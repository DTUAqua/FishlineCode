<UserControl x:Class="Babelfisk.WPF.Views.Reporting.ReportsTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:entSprat="clr-namespace:Babelfisk.Entities.Sprattus;assembly=Babelfisk.Entities"
             xmlns:rvm="clr-namespace:Babelfisk.ViewModels.Reporting;assembly=Babelfisk.ViewModels"
             xmlns:cnv="clr-namespace:Babelfisk.WPF.Converters"
             xmlns:lan="urn:anchorcore-language-localization-ui"
             xmlns:aCtrls="clr-namespace:Anchor.Core.Controls;assembly=Anchor.Core.Controls"
             xmlns:acnv="clr-namespace:Anchor.Core.Converters;assembly=Anchor.Core"
             xmlns:acdd="clr-namespace:Anchor.Core.Controls.DragDrop;assembly=Anchor.Core.Controls"
             xmlns:rep="clr-namespace:Babelfisk.WPF.Views.Reporting"
             mc:Ignorable="d" x:Name="uc"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <cnv:MyAlternationEqualityConverter x:Key="MyAlternationEqualityConverter" />
                    <acnv:MultiHierarchicalItemsSourceConverter x:Key="cMultiItemsSource" />
                    <acnv:GetTypeConverter x:Key="cGetType" />

                    <Style x:Key="TreeViewItemFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 Z"/>

                    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Width" Value="16"/>
                        <Setter Property="Height" Value="16"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Background="Transparent" Padding="0" Opacity="0.8" Margin="-1,1,0,0"  >
                                        <Image x:Name="img" Width="16" Height="16" Source="pack://application:,,,/Resources/Images/Treeview/Plus2.ico" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="img" Property="Opacity" Value="0.7"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="img" Property="Source" Value="pack://application:,,,/Resources/Images/Treeview/Minus2.ico"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="StretchedTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="1,0,0,0"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Column="1">
                                            <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" HorizontalAlignment="Stretch" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="StretchedTreeViewItemWithLinesStyle" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="AlternationCount" Value="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}"/>
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="0,0,0,0"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="19" Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>

                                        <Grid Grid.Column="0" Grid.ColumnSpan="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <Rectangle Grid.Row="0" Width="1" Fill="LightGray" SnapsToDevicePixels="True" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                                           Margin="9,0,0,0"/>

                                            <Rectangle Grid.Row="1" Height="1" Fill="LightGray" SnapsToDevicePixels="True" HorizontalAlignment="Left">
                                                <Rectangle.Style>
                                                    <Style TargetType="Rectangle">

                                                        <Setter Property="Margin" Value="10,0,15,0"/>
                                                        <Setter Property="Width" Value="13"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=HasItems}" Value="False">
                                                                <Setter Property="Margin" Value="10,0,0,0"></Setter>
                                                                <Setter Property="Width" Value="25"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>

                                        </Grid>

                                        <Border Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="2">
                                            <Rectangle Grid.Row="2" Width="1" SnapsToDevicePixels="True" VerticalAlignment="Stretch" HorizontalAlignment="Center" Margin="0,0,0,0" Fill="LightGray">
                                                <Rectangle.Style>
                                                    <Style TargetType="Rectangle">
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource MyAlternationEqualityConverter}">
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=2}" Path="Items.Count" />
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}" Path="(ItemsControl.AlternationIndex)" />
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Rectangle.Style>
                                            </Rectangle>
                                        </Border>

                                        <ToggleButton Grid.Column="0" Grid.Row="0" Width="16" Height="16" Background="White" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <Border Grid.Column="1" Grid.Row="0" x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" >
                                            <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                        </Border>

                                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" HorizontalAlignment="Stretch" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected" Value="true"/>
                                                <Condition Property="IsSelectionActive" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                                <Setter Property="ItemsPanel">
                                    <Setter.Value>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                                        </ItemsPanelTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!-- Selected and has focus -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="#7DA2CE"/>
                                <Setter Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Pen x:Key="dropTargetPen" Brush="#FFD18700" Thickness="2"></Pen>

                    <DataTemplate x:Key="dtAdorner">
                        <Border Margin="15,15,0,0" Background="Transparent" SnapsToDevicePixels="False" Opacity="0.8">
                            <Border Margin="2,0,2,0" VerticalAlignment="Center" BorderBrush="Black" SnapsToDevicePixels="True" BorderThickness="1" Tag="{Binding Path=.}" >
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0.0" />
                                        <GradientStop Color="#FFE1E1E1" Offset="1" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                
                                <StackPanel Margin="4,2,4,2" Orientation="Horizontal">
                                    <Image Width="16" Height="16" Margin="1,1,3,1" VerticalAlignment="Center" >
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Treeview/Folder.ico" />

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Converter={StaticResource cGetType}}" Value="Report">
                                                        <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Menu/Report.ico" />
                                                    </DataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Converter={StaticResource cGetType}}" Value="Report" />
                                                            <Condition Binding="{Binding Path=IsDocumentType}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Menu/Documents.ico" />
                                                    </MultiDataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>

                                    <TextBlock Text="{Binding Path=name}" IsHitTestVisible="False" Margin="2,0,3,0" Foreground="Black" VerticalAlignment="Center" />
                                </StackPanel>
                            </Border>
                        </Border>
                    </DataTemplate>
                    
                    <rep:ReportDropHandler x:Key="repHandler" TreeViewModel="{Binding Mode=OneWay}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
        
    </UserControl.Resources>
    
    <Grid >
        <Grid.RowDefinitions >
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border >
            <Border.Style>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="IsEnabled" Value="True" />
                    <Style.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.8" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsLoading}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            
            <TreeView x:Name="treeView" Padding="10,10,3,3" 
                      Tag="{Binding Path=.}" 
                      SelectedItemChanged="treeView_SelectedItemChanged"
                      BorderThickness="0,0,0,0" 
                      ItemsSource="{Binding TreeNodes}" PreviewMouseDown="treeView_PreviewMouseDown"
                      acdd:DragDrop.DragAdornerTemplate="{StaticResource dtAdorner}" acdd:DragDrop.DropHandler="{Binding Path=DropHandler, ElementName=uc, Mode=OneWay}"
                      acdd:DragDrop.IsDragSource="True" acdd:DragDrop.IsDropTarget="True" acdd:DragDrop.DragMouseAnchorPoint="0,0" acdd:DragDrop.IsDropBeforeAndAfterDisabled="True"
                      AlternationCount="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}">
                <TreeView.ContextMenu>
                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Mode=Self}}">
                        <MenuItem Header="Opret ny rapport i roden af træet" Command="{Binding Path=NewReportCommand}" Style="{StaticResource defaultMenuItem}"
                                  Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" >
                            <MenuItem.Icon>
                                <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/NewReport.ico" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <MenuItem Header="Opret ny mappe i roden af træet" Command="{Binding Path=NewFolderCommand}" Style="{StaticResource defaultMenuItem}" 
                                  Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" >
                            <MenuItem.Icon>
                                <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/NewFolder.ico" />
                            </MenuItem.Icon>
                        </MenuItem>

                        <Separator Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" />
                        
                        <MenuItem Header="Opdater rapport-træ" Command="{Binding Path=RefreshCommand}" Style="{StaticResource defaultMenuItem}" >
                            <MenuItem.Icon>
                                <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Refresh.ico" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </TreeView.ContextMenu>
                <TreeView.ItemContainerStyle>
                        <!-- This Style binds a TreeViewItem to a TreeViewItemViewModel. -->
                    <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource StretchedTreeViewItemWithLinesStyle}">
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="Visibility" Value="{Binding IsVisible, Mode=OneWay, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True}" />
                        <EventSetter Event="Selected" Handler="OnTreeViewItemSelected"/>
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="FontWeight" Value="Bold" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>

                <TreeView.Resources>

                    <SolidColorBrush x:Key="offLineColor" Color="#FFFF9E0D" />

                    <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#55E9EBE8" Offset="0"/>
                        <GradientStop Color="#47D8E2D3" Offset="1"/>
                    </LinearGradientBrush>
                    <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
                        <GradientStop Color="#FFF8F8F8" Offset="0"/>
                        <GradientStop Color="#FFE5E5E5" Offset="1"/>
                    </LinearGradientBrush>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

                    <!-- Tree nodes -->
                    <HierarchicalDataTemplate DataType="{x:Type entSprat:ReportingTreeNode}" >
                        <HierarchicalDataTemplate.ItemsSource>
                            <MultiBinding Converter="{StaticResource ResourceKey=cMultiItemsSource}">
                                <Binding Path="ChildTreeNodes" />
                                <Binding Path="Reports" />
                            </MultiBinding>
                        </HierarchicalDataTemplate.ItemsSource>

                        <StackPanel Orientation="Horizontal" ToolTip="{Binding Path=description}"  Background="Transparent" Margin="0,1,0,1" DataContext="{Binding}" Tag="{Binding Path=DataContext, ElementName=uc}" >
                            <StackPanel.ContextMenu>
                                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Mode=Self}}" Tag="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=Self}}">
                                    <MenuItem Command="{Binding Path=NewReportCommand}" CommandParameter="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Style="{StaticResource defaultMenuItem}"
                                              Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                        <MenuItem.Icon>
                                            <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/NewReport.ico" />
                                        </MenuItem.Icon>
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Opret ny rapport under '" />
                                                <TextBlock Text="{Binding Path=Tag.name, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                <TextBlock Text="'" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>
                                    
                                    <MenuItem Command="{Binding Path=NewFolderCommand}" CommandParameter="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Style="{StaticResource defaultMenuItem}"
                                              Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                        <MenuItem.Icon>
                                            <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/NewFolder.ico" />
                                        </MenuItem.Icon>
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Opret ny mappe under '" />
                                                <TextBlock Text="{Binding Path=Tag.name, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                <TextBlock Text="'" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>

                                    <Separator Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" />

                                    <MenuItem Command="{Binding Path=EditFolderCommand}" CommandParameter="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Style="{StaticResource defaultMenuItem}"
                                              Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}">
                                        <MenuItem.Icon>
                                            <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/EditFolder.ico" />
                                        </MenuItem.Icon>
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Omdøb mappe '" />
                                                <TextBlock Text="{Binding Path=Tag.name, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                <TextBlock Text="'" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>

                                    <Separator Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" />

                                    <MenuItem Command="{Binding Path=DeleteFolderCommand}" CommandParameter="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Style="{StaticResource defaultMenuItem}"
                                              Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" >
                                        <MenuItem.Icon>
                                            <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/DeleteFolder.ico" />
                                        </MenuItem.Icon>
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Slet mappe '" />
                                                <TextBlock Text="{Binding Path=Tag.name, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                <TextBlock Text="'" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>


                                    <Separator Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" />

                                    <MenuItem Header="Opdater rapport-træ" Command="{Binding Path=RefreshCommand}" Style="{StaticResource defaultMenuItem}" >
                                        <MenuItem.Icon>
                                            <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Refresh.ico" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            
                            <Image Width="16" Height="16" Margin="3,1,3,1" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/Folder.ico" />
                            <TextBlock Text="{Binding Path=name}" Margin="3,0,0,0" FontSize="13"  VerticalAlignment="Center"  />
                        </StackPanel>
                    </HierarchicalDataTemplate>

                    <!-- Reports -->
                    <DataTemplate DataType="{x:Type entSprat:Report}" >
                        <StackPanel Orientation="Horizontal" ToolTip="{Binding Path=description}" DataContext="{Binding}"  Background="Transparent" Margin="0,1,0,1" Tag="{Binding Path=DataContext, ElementName=uc}">
                            <StackPanel.ContextMenu>
                                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Mode=Self}}" Tag="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=Self}}">

                                    <MenuItem Command="{Binding Path=EditReportCommand}" CommandParameter="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Style="{StaticResource defaultMenuItem}"
                                              Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" >
                                        <MenuItem.Icon>
                                            <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/EditReport.ico" />
                                        </MenuItem.Icon>
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Rediger rapport '" />
                                                <TextBlock Text="{Binding Path=Tag.name, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                <TextBlock Text="'" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>

                                    <Separator Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" />

                                    <MenuItem Command="{Binding Path=DeleteReportCommand}" CommandParameter="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Style="{StaticResource defaultMenuItem}"
                                              Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" >
                                        <MenuItem.Icon>
                                            <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Treeview/DeleteReport.ico" />
                                        </MenuItem.Icon>
                                        <MenuItem.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Slet rapport '" />
                                                <TextBlock Text="{Binding Path=Tag.name, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                                <TextBlock Text="'" />
                                            </StackPanel>
                                        </MenuItem.Header>
                                    </MenuItem>

                                    <Separator Visibility="{Binding Path=CanEditReports, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True}" />

                                    <MenuItem Header="Opdater rapport-træ" Command="{Binding Path=RefreshCommand}" Style="{StaticResource defaultMenuItem}" >
                                        <MenuItem.Icon>
                                            <Image Height="16" UseLayoutRounding="False" Margin="3,1,3,1" Opacity="0.7" VerticalAlignment="Center" Source="pack://application:,,,/Resources/Images/Common/Refresh.ico" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            
                            <Image Width="16" Height="16" Margin="3,1,3,1" VerticalAlignment="Center" >
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Menu/Report.ico" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsDocumentType}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="pack://application:,,,/Resources/Images/Menu/Documents.ico" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding name}" Margin="3,0,0,0" FontSize="13"  VerticalAlignment="Center" />
                        </StackPanel>
                    </DataTemplate>



                </TreeView.Resources>
            </TreeView>
        </Border>


        <!-- Tree loading message -->
        <Grid Grid.Row="1" Visibility="{Binding Path=IsLoading, Converter={StaticResource ResourceKey=cBoolToVisibility}, ConverterParameter=True, FallbackValue=Hidden}">
            <Border Background="#CCF5F5F5" HorizontalAlignment="Center" SnapsToDevicePixels="True" VerticalAlignment="Top" Margin="0,50,0,0" MinWidth="160" BorderBrush="Gray" BorderThickness="1" CornerRadius="0" >
                <DockPanel Margin="8" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
                        <TextBlock Text="{lan:Translate Section=Common, Key=Loading, UIDesignerValue='Arbejder, vent venligst'}"  FontSize="13"  />
                        <TextBlock Text="..."  FontSize="13"/>
                    </StackPanel>

                    <ProgressBar IsIndeterminate="True" Height="10" Margin="0,3,0,0" />
                </DockPanel>
            </Border>
        </Grid>

    </Grid>
</UserControl>
