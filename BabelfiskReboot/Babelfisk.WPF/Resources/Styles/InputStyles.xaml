<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpfToolkit="http://schemas.xceed.com/wpf/xaml/toolkit" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Resources/Styles/GeneralStyles.xaml" />

        <ResourceDictionary>
            <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
                <GradientStop Color="#ABADB3" Offset="0.05"/>
                <GradientStop Color="#E2E3EA" Offset="0.07"/>
                <GradientStop Color="#E3E9EF" Offset="1"/>
            </LinearGradientBrush>

            <Style x:Key="btnStandard" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="0,3" />
            </Style>

            <Style x:Key="dropDownButton" TargetType="{x:Type Button}" BasedOn="{StaticResource btnStandard}">
                <Setter Property="Width" Value="28" />
                <Setter Property="Height" Value="28" />
                <Setter Property="Margin" Value="1,0,0,0" />
            </Style>

            <Style x:Key="txtMandatoryField" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Margin" Value="1,5,-8,0" />
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="ToolTip" Value="Obligatorisk felt" />
                <Setter Property="Text" Value="*" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>

            <Style x:Key="txtRecommendedField" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Margin" Value="1,5,-8,0" />
                <Setter Property="Foreground" Value="#FF6F9702" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="ToolTip" Value="Anbefalet felt (ikke obligatorisk, men det anbefales at udfylde feltet)" />
                <Setter Property="Text" Value="*" />
                <Setter Property="FontWeight" Value="Bold" />
            </Style>


            <Style x:Key="txtHeader" TargetType="{x:Type Label}">
                <Setter Property="Opacity" Value="1.0" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Margin" Value="13,0,10,0" />
                <Setter Property="Width" Value="180" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontWeight" Value="Normal" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.3" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="txtLabelTextBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
                <Setter Property="LineHeight" Value="15" />
            </Style>

            <Style x:Key="baseInputBoxStyleFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border>
                                <Rectangle Margin="-1" StrokeThickness="3" Stroke="Green" StrokeDashArray="1 2"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="baseInputBoxStyle" TargetType="{x:Type Control}" BasedOn="{StaticResource ResourceKey=ValidateElementRedBorder}">
                <Setter Property="Opacity" Value="1.0" />
                <Setter Property="TextBlock.FontWeight" Value="Medium" />
                <Setter Property="TextBlock.FontSize" Value="14" />
                <Setter Property="TextBlock.FontFamily" Value="Verdana" />
                <!-- <Setter Property="FocusVisualStyle" Value="{StaticResource ResourceKey=baseInputBoxStyleFocusVisual}" /> -->
                <Setter Property="Padding" Value="3,0,3,0" />
                <Setter Property="Margin" Value="1,4,1,4" />
                <Setter Property="Height" Value="28" />
                <Setter Property="Background" >
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFF7F6DF" Offset="0.715"/>
                            <GradientStop Color="#FFF7F4D5" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.3" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="txtStandard" TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource ResourceKey=baseInputBoxStyle}"  >
                <Setter Property="Padding" Value="2,0,2,0" />
                
            </Style>

            <Style x:Key="dUpDownStandard" TargetType="{x:Type wpfToolkit:DecimalUpDown}" BasedOn="{StaticResource ResourceKey=ValidateElementRedBorder}" >
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontFamily" Value="Tahoma" />
                <Setter Property="Margin" Value="1,3,1,3" />
            </Style>

            <Style x:Key="txtMultiline" TargetType="{x:Type TextBox}" BasedOn="{StaticResource txtStandard}">
                <Setter Property="Height" Value="50" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="VerticalScrollBarVisibility" Value="Visible" />
                <Setter Property="AcceptsReturn" Value="True" />
            </Style>

            <Style x:Key="txtValue" TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource txtStandard}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="3,0,3,0" />
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="txtValueNoMargin" TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource txtValue}">
                <Setter Property="Margin" Value="0" />
            </Style>

                <Style x:Key="dpSection" TargetType="{x:Type DockPanel}">
                <Setter Property="Margin" Value="0,10,0,0" />
                <Setter Property="DockPanel.Dock" Value="Top" />
            </Style>

            <Style x:Key="txtSectionHeader" TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="Gray" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="Verdana" />
            </Style>

            <Style x:Key="spSection" TargetType="{x:Type StackPanel}">
                <Setter Property="Margin" Value="0,10,8,4" />
                <Setter Property="DockPanel.Dock" Value="Top" />
                <Setter Property="Orientation" Value="Vertical" />
            </Style>

            
            <DataTemplate x:Key="DefaultWatermarkTemplate">
                <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" />
            </DataTemplate>

            <Style x:Key="txtValueWatermarked" TargetType="{x:Type wpfToolkit:WatermarkTextBox}" BasedOn="{StaticResource txtStandard}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type wpfToolkit:WatermarkTextBox}">
                            <Grid ToolTip="{TemplateBinding Watermark}">

                                <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1" Background="{TemplateBinding Background}" />
                                <Border x:Name="MouseOverVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="1" />
                                <Border x:Name="FocusVisual" Opacity="0" BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="1" />
                                <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <ContentPresenter x:Name="PART_WatermarkHost"
                                    Content="{TemplateBinding Watermark}"
                                    ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    IsHitTestVisible="False" TextBlock.FontSize="12"
                                    Margin="4,1,4,0"
                                    Visibility="Collapsed" />

                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="False" />
                                        <Condition Property="Text" Value="" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible" />
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="MouseOverVisual" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="FocusVisual" Property="Opacity" Value="1" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border"  Property="Opacity" Value="0.3" />
                                    <Setter TargetName="Border"  Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>



</ResourceDictionary>