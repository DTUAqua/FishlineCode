<UserControl x:Class="FishLineMeasure.WPF.Views.Overview.LenghtWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FishLineMeasure.WPF.Views.Overview"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:acdd="clr-namespace:Anchor.Core.Controls.DragDrop;assembly=Anchor.Core.Controls"
             mc:Ignorable="d" x:Name="uc"
             
             d:DesignHeight="800" d:DesignWidth="900">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Anchor.Core.Controls;component/Themes/FlatStyleComboBox.xaml" />
                <ResourceDictionary>

                    <Style x:Key="sTextHeader" TargetType="{x:Type TextBlock}">
                        <Setter Property="MinWidth" Value="190" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontSize" Value="24" />
                        <Setter Property="FontWeight" Value="DemiBold"/>
                    </Style>

                    <Style x:Key="sTextValue" TargetType="{x:Type TextBox}" BasedOn="{StaticResource ValidateElementRedBorder}">
                        <Setter Property="Padding" Value="10,3" />
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="FontSize" Value="30" />
                        <Setter Property="IsReadOnly" Value="True"></Setter>
                    </Style>

                    <Style x:Key="sOpasity" TargetType="{x:Type FrameworkElement}">
                        <Setter Property="Opacity" Value="1"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasOrders}" Value="False">
                                <Setter Property="Opacity" Value="0.2"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Border Background="{StaticResource ResourceKey=brushBackColor}" BorderBrush="LightGray" BorderThickness="0,1,0,0" SnapsToDevicePixels="True">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <!-- Header information (which station is it currently on) -->
            <Border Background="White">
                <Border Grid.Row="0" Margin="20,20" BorderBrush="#FFEAEAEA" BorderThickness="1" SnapsToDevicePixels="True">
                    <UniformGrid  Rows="1" Columns="4">
                        <UniformGrid.Resources>
                            <Style x:Key="sItemHeader" TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="24" />
                                <Setter Property="FontWeight" Value="DemiBold"/>
                                <Setter Property="Margin" Value="5,0,5,2"/>
                                <Setter Property="LineHeight" Value="26"/>
                                <Setter Property="LineStackingStrategy" Value="BlockLineHeight"/>
                            </Style>

                            <Style x:Key="sTopHeader" TargetType="{x:Type TextBlock}">
                                <Setter Property="TextAlignment" Value="Center" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="13" />
                                <Setter Property="Foreground" Value="Gray" />
                                <Setter Property="FontWeight" Value="Normal"/>
                                <Setter Property="Margin" Value="5,2,5,0"/>
                            </Style>
                        </UniformGrid.Resources>

                        <Border>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <TextBlock Text="År" Style="{StaticResource sTopHeader}" />
                                <TextBlock Text="{Binding Year, FallbackValue=2019}" Style="{StaticResource sItemHeader}"/>
                            </StackPanel>
                        </Border>

                        <Border>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <TextBlock Text="Togt" Style="{StaticResource sTopHeader}" />
                                <TextBlock Text="{Binding Cruise, FallbackValue=1}" Style="{StaticResource sItemHeader}"/>
                            </StackPanel>
                        </Border>

                        <Border>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <TextBlock Text="Tur" Style="{StaticResource sTopHeader}" />
                                <TextBlock Text="{Binding Trip, FallbackValue=1}" Style="{StaticResource sItemHeader}"/>
                            </StackPanel>
                        </Border>

                        <Border>
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <TextBlock Text="Station" Style="{StaticResource sTopHeader}" />
                                <TextBlock Text="{Binding Station, FallbackValue=1}" Style="{StaticResource sItemHeader}"/>
                            </StackPanel>
                        </Border>
                    </UniformGrid>
                </Border>
            </Border>
           
            
            <Border Grid.Row="1" Background="White" SnapsToDevicePixels="True">
                <Grid Margin="20,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Row="0" Style="{StaticResource sOpasity}" Width="50">
                        <Button Command="{Binding ArrowUpCommand}" Style="{StaticResource imageButtonStyle}" Height="40" Margin="0,0,0,0" IsEnabled="{Binding HasMoreThanTwoOrders, Mode=OneWay}">
                            <Image Source="pack://application:,,,/FishLineMeasure.WPF;Component/Resources/Images/Common/ArrowUp.png" Height="30" />
                        </Button>
                        <Border Height="40" BorderBrush="LightGray" BorderThickness="1,0,1,0" SnapsToDevicePixels="True">
                            <Image Source="pack://application:,,,/FishLineMeasure.WPF;Component/Resources/Images/Common/ArrowRightGrey.png" Height="35"  />
                        </Border>

                        <Button Command="{Binding ArrowDownCommand}" Style="{StaticResource imageButtonStyle}" Height="40" Margin="0,0,0,0" IsEnabled="{Binding HasMoreThanTwoOrders, Mode=OneWay}">
                            <Image Source="pack://application:,,,/FishLineMeasure.WPF;Component/Resources/Images/Common/ArrowDown.png" Height="30" />
                        </Button>
                    </StackPanel>

                    <StackPanel Margin="10,0,10,0" Orientation="Vertical" Grid.Column="1" Style="{StaticResource sOpasity}">
                        <Border  x:Name="bdrPrev" Height="40" DataContext="{Binding Path=PrevOrder}" Background="Transparent" BorderThickness="1,1,1,0" BorderBrush="LightGray" SnapsToDevicePixels="True"
                                 PreviewMouseUp="bdrPrev_PreviewMouseUp">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Opacity" Value="0.3" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.7" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            
                            <TextBlock Text="{Binding Path=GroupString}" VerticalAlignment="Center" Margin="10,0" FontSize="20" />
                        </Border>
                        
                        <Border Height="40" DataContext="{Binding Path=SelectedOrder}" BorderThickness="1,1,1,1" BorderBrush="LightGray" SnapsToDevicePixels="True">
                            <TextBlock Text="{Binding Path=GroupString}" VerticalAlignment="Center" FontWeight="Bold" Margin="10,0" FontSize="20" />
                        </Border>

                        <Border x:Name="bdrNext" Height="40" DataContext="{Binding Path=NextOrder}" Background="Transparent" BorderThickness="1,0,1,1" BorderBrush="LightGray" SnapsToDevicePixels="True"
                                PreviewMouseUp="bdrNext_PreviewMouseUp" >
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Opacity" Value="0.3" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.7" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <TextBlock Text="{Binding Path=GroupString}" VerticalAlignment="Center" Margin="10,0" FontSize="20" />
                        </Border>
                    </StackPanel>

                    <TextBlock Visibility="{Binding HasOrders, Converter={StaticResource cBoolToVisibility}, ConverterParameter=False}" TextWrapping="Wrap" Grid.Column="1" Grid.ColumnSpan="1" Text="Ingen længdefordelinger oprettet" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="25" />

                    <DockPanel Margin="0,0,0,0" Grid.Column="2">
                        <Button Style="{StaticResource GreenButtonStyle}" Margin="0,0,0,0" Width="130" Command="{Binding OpenOrderWindowCommand}">
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="20" Margin="10,0" >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Text" Value="Rediger længde-fordelinger" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=HasOrders}" Value="False">
                                                <Setter Property="Text" Value="Tilføj længdefordeling(er)" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button>

                        <Button Style="{StaticResource BlueButtonStyle}" Margin="10,0,0,0" Width="180" Command="{Binding DeleteMeasurementsForActiveOrderCommand}">
                            <TextBlock HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="20" Margin="10,2" >
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="Text" Value="Slet alle målinger for valgte længdefordeling" />
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Button>

                    </DockPanel>
                     
                </Grid>
            </Border>
           
            <Border Grid.Row="2" Background="White" BorderBrush="LightGray" BorderThickness="0,0,0,1" SnapsToDevicePixels="True" >
                <DockPanel Margin="20,0,20,20" >
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top"  HorizontalAlignment="Right">
                        <TextBlock DockPanel.Dock="Top" FontSize="16" Text="{Binding Path=MeasurementsInLengthGroup, StringFormat='{}{0} målinger i valgte længdefordeling  |  '}" Margin="0,-1,0,2" />
                        
                        <TextBlock DockPanel.Dock="Top" FontSize="16" Text="{Binding Path=Measurements.Count, StringFormat='{}{0} målinger i alt'}" Margin="0,-1,0,2" />
                    </StackPanel>
                    

                    <Grid >
                        <ListBox x:Name="ListViewScrollViewer" 
                             ItemsSource="{Binding Path=Measurements}"  
                             ScrollViewer.CanContentScroll="True" ItemContainerStyle="{StaticResource listBoxItemTransparentMouseOver}"
                             ScrollViewer.VerticalScrollBarVisibility="Visible" 
                             HorizontalContentAlignment="Stretch" >
                            <ListBox.Resources>
                                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">50</sys:Double>
                            </ListBox.Resources>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="Transparent" BorderBrush="LightGray" Height="65" BorderThickness="0,0,0,1" TextBlock.FontSize="25" HorizontalAlignment="Stretch">
                                        <DockPanel Margin="8,5">
                                            <!-- Delete button -->
                                            <Border DockPanel.Dock="Right" Margin="6,2,0,2">
                                                <Button Style="{StaticResource imageButtonStyle}" Command="{Binding Path=DataContext.DeleteRowCommand, ElementName=uc}"  CommandParameter="{Binding}" 
                                                    Width="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}" ToolTip="Slet måling">
                                                    <Image Source="pack://application:,,,/Resources/Images/Common/Remove.ico" Opacity="0.7" Width="24" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                </Button>
                                            </Border>

                                            <!-- Datetime UTC -->
                                            <Border Margin="10,0,10,0"  DockPanel.Dock="Left" VerticalAlignment="Center" >
                                                <TextBlock FontWeight="Medium" FontSize="20" Text="{Binding Path=DateTimeLocal}" />
                                            </Border>

                                            <!-- Length -->
                                            <Border Margin="10,0,10,0"  DockPanel.Dock="Right"  VerticalAlignment="Center" >
                                                <TextBlock  Text="{Binding Path=LengthString}" TextAlignment="Right" MinWidth="120" />
                                            </Border>

                                            <!--
                                        <Border Margin="10,0,60,0" DockPanel.Dock="Right" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                            <TextBlock FontSize="24" Text="{Binding Path=Lookups.GroupString}" />
                                        </Border>
                                        -->
                                            <!-- Length group -->
                                            <Border Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center" >
                                                <ItemsControl ItemsSource="{Binding Path=Lookups.Lookups}">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel Orientation="Horizontal"></StackPanel>
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>

                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Margin="10,0,10,0" Orientation="Vertical" HorizontalAlignment="Center" >
                                                                <TextBlock Text="{Binding Path=LookupTypeHeader}" FontSize="12" TextAlignment="Center" Foreground="Gray" />
                                                                <TextBlock Text="{Binding Path=Code}" FontSize="24" LineStackingStrategy="BlockLineHeight" Margin="0,1,0,0" LineHeight="26" TextAlignment="Center" />
                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>
                                            </Border>


                                        </DockPanel>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </DockPanel>
                
            </Border>

            <!-- Loading information -->
            <Border Grid.Row="2" Visibility="{Binding Path=IsLoading, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True, FallbackValue=Collapsed}" 
                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                    Background="White" BorderBrush="LightGray" BorderThickness="1" SnapsToDevicePixels="True">
                <StackPanel Orientation="Vertical" Margin="20,10">
                    <TextBlock Text="Arbejder, vent venligst..." FontSize="20" />
                    <ProgressBar Height="10" Margin="0,2,0,0" />
                </StackPanel>
            </Border>

            <Border Grid.Row="3" Visibility="{Binding Path=IsLoading, Converter={StaticResource cBoolToVisibility}, ConverterParameter=True, FallbackValue=Collapsed}" VerticalAlignment="Center" HorizontalAlignment="Center">
                <StackPanel Orientation="Vertical" Margin="20,10">
                    <TextBlock Text="Arbejder, vent venligst..." FontSize="20" Margin="0,0,0,4" />
                    <ProgressBar IsIndeterminate="true" Height="10" />
                </StackPanel>
            </Border>
            
            <Border Grid.Row="3" Background="White" BorderBrush="LightGray" Margin="0,8,0,0" BorderThickness="0,1,0,0" SnapsToDevicePixels="True" IsEnabled="{Binding Path=IsLoading, Converter={StaticResource cBoolToBoolNegation}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Style="{StaticResource GreenButtonStyle}" Command="{Binding NextStationCommand}" Margin="20,20,20,20" IsEnabled="{Binding MoreStations, Mode=OneWay}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="26" Margin="20,20">
                            <Run Text="Gå til næste station"/>
                            <Run Text="{Binding NextStationOnListUIString, Mode=OneWay}" />
                        </TextBlock>
                    </Button>

                    <Button Grid.Column="1" Style="{StaticResource BlueButtonStyle}" Command="{Binding CancelAndReturnCommand }" Margin="0,20,20,20">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26" TextWrapping="Wrap" Margin="20,20">
                            <Run Text="Tilbage til hovedmenuen"/>
                        </TextBlock>
                    </Button>
                </Grid>


            </Border>


        </Grid>
    </Border>
</UserControl>
