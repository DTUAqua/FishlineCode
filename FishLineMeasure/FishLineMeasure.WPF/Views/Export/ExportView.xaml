<UserControl x:Class="FishLineMeasure.WPF.Views.Export.ExportView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FishLineMeasure.WPF.Views.Export"
             xmlns:ViewModels="clr-namespace:FishLineMeasure.ViewModels.Export;assembly=FishLineMeasure.ViewModels"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"             
             d:DesignHeight="575" d:DesignWidth="860" >

    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 Z"/>

            <Style TargetType="CheckBox" >
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="1.8" ScaleY="1.8"/>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="RadioButton">
                <Setter Property="LayoutTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="MinHeight" Value="28"></Setter>
                <Setter Property="Opacity" Value="0.9"/>
                <Setter Property="MinWidth" Value="28"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent" Padding="0">
                                <Image x:Name="img" UseLayoutRounding="True" Source="pack://application:,,,/FishLineMeasure.WPF;Component/Resources/Images/Common/Plus4.png"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="img" Property="Opacity" Value="0.7"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="img" Property="Source" Value="pack://application:,,,/FishLineMeasure.WPF;Component/Resources/Images/Common/Minus4.png"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StretchedTreeViewItemWithLinesStyle" TargetType="{x:Type TreeViewItem}">
                <Setter Property="AlternationCount" Value="{Binding RelativeSource={RelativeSource Self}, Path=Items.Count}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="40" Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Column="0" Grid.ColumnSpan="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>

                                    <Rectangle Grid.Row="0" Width="1" SnapsToDevicePixels="True" Fill="LightGray" VerticalAlignment="Stretch" HorizontalAlignment="Left"
                                           Margin="20,-2,0,0"/>

                                    <Rectangle Grid.Row="1" Height="1" Fill="LightGray" SnapsToDevicePixels="True" HorizontalAlignment="Left">
                                        <Rectangle.Style>
                                            <Style TargetType="Rectangle">

                                                <Setter Property="Margin" Value="20,0,0,0"/>
                                                <Setter Property="Width" Value="20"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=HasItems}" Value="False">
                                                        <Setter Property="Margin" Value="20,0,0,0"></Setter>
                                                        <Setter Property="Width" Value="25"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>

                                </Grid>

                                <Border Grid.Column="0" Grid.ColumnSpan="1" Grid.RowSpan="2">
                                    <Rectangle Grid.Row="2" Width="1"
                                           SnapsToDevicePixels="True" VerticalAlignment="Stretch"
                                           HorizontalAlignment="Center"
                                           Margin="0,0,0,0" Fill="LightGray">
                                        <Rectangle.Style>
                                            <Style TargetType="Rectangle">
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <MultiBinding Converter="{StaticResource TreeViewLocalConverter}">
                                                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=2}" Path="Items.Count" />
                                                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}" Path="(ItemsControl.AlternationIndex)" />
                                                            </MultiBinding>
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </Border>

                                <ToggleButton Grid.Column="0" Grid.Row="0" Width="16" Height="16" Background="White" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>

                                <Border Grid.Column="1" Grid.Row="0" x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" >
                                    <ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"/>
                                </Border>

                                <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" HorizontalAlignment="Stretch" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="false">
                                    <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="true"/>
                                        <Condition Property="IsSelectionActive" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel HorizontalAlignment="Stretch"/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>

                    <!-- Selected and has focus -->
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="#7DA2CE"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Border Background="{StaticResource ResourceKey=brushBackColor}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Border BorderBrush="LightGray" BorderThickness="0,1,0,1"  Background="White" >
                <Grid Grid.Row="0" Margin="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border  Grid.Column="0" Margin="0,0,0,00" >
                        <Grid>
                           <!-- <ScrollViewer> 
                                <ScrollViewer.Resources>
                                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">45</sys:Double>
                                </ScrollViewer.Resources> -->
                                <TreeView HorizontalAlignment="Stretch" MinWidth="320" BorderThickness="0,0,1,0" BorderBrush="LightGray" VerticalAlignment="Stretch" ItemsSource="{Binding TreeViewTop}">
                                    
                                    <TreeView.ItemContainerStyle>
                                        <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource StretchedTreeViewItemWithLinesStyle}">
                                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                            <Setter Property="FontWeight" Value="Normal" />
                                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                            <Setter Property="Padding" Value="5"/>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.Resources>
                                    <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">45</sys:Double>


                                    <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#55E9EBE8" Offset="0"/>
                                            <GradientStop Color="#47D8E2D3" Offset="1"/>
                                        </LinearGradientBrush>
                                        <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FFF8F8F8" Offset="0"/>
                                            <GradientStop Color="#FFE5E5E5" Offset="1"/>
                                        </LinearGradientBrush>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

                                        <HierarchicalDataTemplate DataType="{x:Type ViewModels:TripItemsHandler}" ItemsSource="{Binding tStations}">
                                            <StackPanel>
                                                <CheckBox IsChecked="{Binding Path=IsChecked}" VerticalAlignment="Center" VerticalContentAlignment="Center" IsThreeState="True">
                                                    <TextBlock Text="{Binding Path=Name}" FontSize="18"/>
                                                </CheckBox>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>

                                        <DataTemplate DataType="{x:Type ViewModels:StationsItemsHandler}">
                                            <StackPanel Orientation="Horizontal">
                                                <CheckBox IsChecked="{Binding Path=IsChecked}" VerticalAlignment="Center" VerticalContentAlignment="Center">
                                                    <TextBlock Text="{Binding Path=Name}" FontSize="18"/>
                                                </CheckBox>
                                            </StackPanel>
                                        </DataTemplate>
                                    </TreeView.Resources>
                                </TreeView>
                          <!--  </ScrollViewer> -->
                        </Grid>
                    </Border>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderBrush="LightGray" SnapsToDevicePixels="True" BorderThickness="0,0,0,1" Height="100" Background="WhiteSmoke">
                            <DockPanel Margin="20,5" >
                                <Image Source="pack://application:,,,/FishLineMeasure.WPF;Component/Resources/Images/Common/ArrowRight.png" Height="45" Visibility="Collapsed" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="10,0,10,-8" HorizontalAlignment="Left">
                                    <Image.RenderTransform>
                                        <ScaleTransform ScaleX="-1" CenterX="20" />
                                    </Image.RenderTransform>
                                </Image>
                                <TextBlock Text="Vælg en eller flere stationer fra træet til venstre og eksporter dem til CSV-fil eller Fiskeline." FontSize="20" VerticalAlignment="Center" Margin="20,0" TextAlignment="Left" TextWrapping="Wrap"></TextBlock>
                            </DockPanel>
                        </Border>
                        <Border Grid.Row="1" BorderBrush="LightGray" SnapsToDevicePixels="True" BorderThickness="0,0,0,1" >
                            <StackPanel Margin="20,20,20,20">
                                <TextBlock Text="Eksporter til" FontWeight="Medium" Margin="20,0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="24"/>
                                <DockPanel Margin="0,15,0,5" HorizontalAlignment="Left">
                                    
                                    <RadioButton IsChecked="{Binding CSVChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" HorizontalAlignment="Left" Margin="0,0,0,0">
                                        <TextBlock Text="CSV-fil" FontSize="12"/>
                                    </RadioButton>
                                    <RadioButton IsChecked="{Binding CSVChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource cBoolToBoolNegation}}" HorizontalAlignment="Right" Margin="60,0,10,0">
                                        <TextBlock Text="Fiskeline" FontSize="12"/>
                                    </RadioButton>
                                </DockPanel>
                            </StackPanel>
                        </Border>
                       
                        <Border Grid.Row="2" >
                            <StackPanel Margin="20,20" IsEnabled="{Binding Path=ServerChecked, Converter={StaticResource cBoolToBoolNegation}}">
                                <StackPanel.Style>
                                    <Style TargetType="{x:Type StackPanel}">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.2"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <DockPanel Margin="0,0,0,15">
                                    <Image DockPanel.Dock="Left" Source="pack://application:,,,/FishLineMeasure.WPF;Component/Resources/Images/Common/ArrowRight.png" Visibility="Collapsed" Height="45" Margin="10,0,10,0">
                                        <Image.LayoutTransform>
                                            <RotateTransform Angle="90"/>
                                        </Image.LayoutTransform>
                                    </Image>
                                    <TextBlock Text="Filnavn og placering" TextWrapping="Wrap" FontWeight="Medium" TextAlignment="Left" Margin="20,0" FontSize="24" VerticalAlignment="Center"></TextBlock>
                                </DockPanel>
                                <DockPanel>
                                    <Button Command="{Binding SetFilePathCommand}" IsEnabled="{Binding Path=IsEnabled,Mode=TwoWay}" FontWeight="DemiBold" Content="Browse" DockPanel.Dock="Right" FontSize="20" Height="50" Width="100" Background="LightGray" ></Button>
                                    <TextBox x:Name="PathTextBox"  Text="{Binding Path}" Padding="5" FontSize="22"  Margin="0,0,10,0"/>
                                </DockPanel>
                            </StackPanel>
                        </Border>
                    </Grid>
                </Grid>

            </Border>

            <Border Grid.Row="1"  SnapsToDevicePixels="True" BorderBrush="LightGray" Margin="0,8,0,0" BorderThickness="0,1,0,0"  Background="White" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button Command="{Binding ExportCommand}" Grid.Column="0" Style="{StaticResource GreenButtonStyle}" Margin="20">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="30" FontWeight="DemiBold" TextAlignment="Center" Margin="20,25">
                            <Run Text="Eksporter" />
                        </TextBlock>
                    </Button>

                    <Button Command="{Binding CloseCommand}" Grid.Column="1" Style="{StaticResource BlueButtonStyle}" Margin="0,20,20,20">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="DemiBold" TextAlignment="Center" FontSize="30" Margin="20,25">
                            <Run Text="Luk"/>
                        </TextBlock>
                    </Button>
                </Grid>


            </Border>
        </Grid>

    </Border>
</UserControl>